export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){return {data:{"content-query-n22gtwgo7B":{_path:"\u002Fguides\u002Fmerchant-integration-error-handling",_dir:"guides",_draft:h,_partial:h,_locale:"en",_empty:h,title:"Merchant Integration Error Handling",description:"Below are our guidelines for dealing with inconsistencies in Payment Request statuses due to network issues or race conditions.",body:{type:"root",children:[{type:a,tag:c,props:{},children:[{type:b,value:"Below are our guidelines for dealing with inconsistencies in "},{type:a,tag:e,props:{href:"https:\u002F\u002Fdocs.centrapay.com\u002Fapi\u002Fpayment-requests#payment-request",rel:[i]},children:[{type:b,value:"Payment Request"}]},{type:b,value:" statuses due to network issues or race conditions."}]},{type:a,tag:d,props:{},children:[{type:a,tag:f,props:{id:j},children:[{type:b,value:k}]},{type:a,tag:c,props:{},children:[{type:b,value:"Use the Payment Request status as the source of truth when determining if a Payment Request is paid or expired. For example, if cancelling a Payment Request fails with a "},{type:a,tag:"code-inline",props:{},children:[{type:b,value:"REQUEST_PAID"}]},{type:b,value:" error then the terminal should respond accordingly; either by showing the transaction as paid or "},{type:a,tag:e,props:{href:"https:\u002F\u002Fdocs.centrapay.com\u002Fapi\u002Fpayment-requests#void-a-payment-request-experimental",rel:[i]},children:[{type:b,value:"initiating a void"}]},{type:b,value:" instead."}]},{type:a,tag:d,props:{},children:[{type:a,tag:"h3",props:{id:l},children:[{type:b,value:m}]},{type:a,tag:c,props:{},children:[{type:b,value:"If the status of a transaction cannot be determined to be successful after retrying, then the Payment Request should be voided. "},{type:a,tag:e,props:{href:"https:\u002F\u002Fdocs.centrapay.com\u002Fapi\u002Fpayment-requests#void",rel:[i]},children:[{type:b,value:"Voiding a Payment Request"}]},{type:b,value:" will cancel the request and trigger any refunds if necessary."}]}]}]},{type:a,tag:d,props:{},children:[{type:a,tag:f,props:{id:n},children:[{type:b,value:o}]},{type:a,tag:c,props:{},children:[{type:b,value:"Payment Requests have a configurable timeout which defaults to 2 minutes. Integrators should make sure that the payment terminal times out 5-10 seconds "},{type:a,tag:"strong",props:{},children:[{type:b,value:"after"}]},{type:b,value:" the Payment Request."}]},{type:a,tag:c,props:{},children:[{type:b,value:"For example, if the Point of Sale (POS) has a 90-second payment timeout then the Payment Request could be created with an 85-second timeout to prevent the payment terminal from expiring at the same time as the Payment Request is paid."}]}]},{type:a,tag:d,props:{},children:[{type:a,tag:f,props:{id:p},children:[{type:b,value:q}]},{type:a,tag:c,props:{},children:[{type:b,value:"When faced with an unknown error while checking the status of a Payment Request, POS integrations should retry at least once before voiding the transaction."}]},{type:a,tag:"blockquote",props:{},children:[{type:a,tag:c,props:{},children:[{type:b,value:"Retries should use the appropriate idempotency key where applicable."}]}]}]},{type:a,tag:d,props:{},children:[{type:a,tag:f,props:{id:r},children:[{type:b,value:s}]},{type:a,tag:c,props:{},children:[{type:b,value:"For issues that cannot be resolved, please reach out to Centrapay Support at "},{type:a,tag:e,props:{href:"mailto:integrations@centrapay.com"},children:[{type:b,value:"integrations@centrapay.com"}]},{type:b,value:"."}]}]}],toc:{title:"",searchDepth:t,depth:t,links:[{id:j,depth:g,text:k,children:[{id:l,depth:3,text:m}]},{id:n,depth:g,text:o},{id:p,depth:g,text:q},{id:r,depth:g,text:s}]}},_type:"markdown",_id:"content:guides:merchant-integration-error-handling.md",_source:"content",_file:"guides\u002Fmerchant-integration-error-handling.md",_extension:"md"}},prerenderedAt:void 0}}("element","text","p","section","a","h2",2,false,"nofollow","respect-payment-status","Respect Payment Status","void-unknown-status","Void Unknown Status","configure-pos-timeout","Configure POS Timeout","retry-unknown-errors","Retry Unknown Errors","resolving-persistent-errors","Resolving Persistent Errors",4))