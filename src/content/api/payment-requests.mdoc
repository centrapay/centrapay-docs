---
title: Payment Requests
description: Payment request models and related endpoints
nav:
  path: Payment Requests
  order: 1
---
Payment Requests represent the intention for a merchant to receive payment for goods and services. Payment Requests define the amount to be paid and the Asset Types that are acceptable for payment.

A Payment Request is shared with, and paid by, a patron. The [Payment Flows Guide](/guides/payment-flows/) has more details regarding negotiation of Payment Requests.

Payment Requests have the following statuses:
- `new`: after being created.
- `paid`: after being paid with one or more transactions.
- `cancelled`: after being cancelled or voided by the merchant.
- `expired`: after expiry time is reached without being paid or cancelled.

Payment requests can also be refunded for a short period of time after being paid.

Payment request state transitions can be notified to webhooks.

Centrapay Payment Requests are serviced via two sets of endpoints; the “next” version (documented on this page) and the “legacy” version (documented at [Legacy Payment Requests](/api/legacy-payment-requests)).

---

## Payment Request Model


{% properties %}
  {% property name="id" type="string" %}
    The Payment Request id.
  {% /property %}
  {% property name="shortCode" type="string" %}
    A shorter id that can be used to identify the Payment Request for up to two years.
  {% /property %}
  {% property name="url" type="string" %}
    The URL for a Centrapay webpage that allows the user to pay the Payment Request.
  {% /property %}
  {% property name="value" type="monetary" %}
    The canonical value of the Payment Request. Must be less than 100000000 and positive.
  {% /property %}
  {% property name="paymentOptions" type="array" %}
    The [Payment Options](#payment-option-model), indicating valid asset for payment.
  {% /property %}
  {% property name="merchantId" type="string" %}
    The id of the [Merchant](/api/merchants) the Payment Request is on behalf of.
  {% /property %}
  {% property name="merchantName" type="string" %}
    The name of the Merchant the Payment Request is on behalf of.
  {% /property %}
  {% property name="configId" type="string" %}
    The [Merchant Config](/api/merchant-configs) id used to configure the payment options.
  {% /property %}
  {% property name="status" type="string" %}
    Valid values: `new`, `paid`, `cancelled`, or `expired`.
  {% /property %}
  {% property name="liveness" type="string" %}
    Indicates liveness of assets that are accepted, determined by the payment options. Values are `main` or `test`.
  {% /property %}
  {% property name="createdAt" type="timestamp" %}
    When the Payment Request was created.
  {% /property %}
  {% property name="updatedAt" type="timestamp" %}
    When the Payment Request was updated.
  {% /property %}
  {% property name="expiresAt" type="timestamp" %}
    When the Payment Request expires.
  {% /property %}
  {% property name="merchantConditions" type="array" %}
    A dynamic list of [Payment Conditions](#payment-condition-model) that require operator approval to complete a payment. Conditions are calculated when [polling a Payment Request](#get-a-payment-request).
  {% /property %}
  {% property name="remainingAmount" type="bignumber" %}
    The amount of the Payment Request which has not been paid for.
  {% /property %}
  {% property name="patronCodeId" type="string" %}
    The id of a [Patron Code](/api/patron-codes) the Payment Request is attached to.
  {% /property %}
  {% property name="barcode" type="string" %}
    [Scanned Code](/api/scanned-codes) used to create the Payment Request. Required when the [Quick Pay](/guides/payment-flows/#quick-pay) payment flow is used.
  {% /property %}
  {% property name="barcodeType" type="string" %}
    Indicates the provider of a barcode, e.g. `ticketek`.
  {% /property %}
  {% property name="collectionId" type="string" %}
    The identifier of the [Token Collection](/api/tokens).
  {% /property %}
  {% property name="expirySeconds" type="number" %}
    The expiry seconds used to configure the Payment Request expiry.
  {% /property %}
  {% property name="lineItems" type="array" %}
    The [Line Items](#line-item-model) being paid for.
  {% /property %}
  {% property name="purchaseOrderRef" type="string" %}
    A reference to a purchase order for this Payment Request.
  {% /property %}
  {% property name="invoiceRef" type="string" %}
    A reference to an invoice for this Payment Request. Must be less than or equal to 128 characters.
  {% /property %}
  {% property name="redirectCancelUrl" type="string" experimental=true %}
    URL to redirect the user to after they pay the Payment Request. Must start with one of the allowedRedirectUrls for the [Merchant Config](/api/merchant-configs).
  {% /property %}
  {% property name="redirectPaidUrl" type="string" experimental=true %}
    URL to redirect the user to after they cancel the Payment Request. Must start with one of the allowedRedirectUrls for the [Merchant Config](/api/merchant-configs).
  {% /property %}
  {% property name="externalRef" type="string" %}
    An external reference to the Payment Request.
  {% /property %}
  {% property name="terminalId" type="string" %}
    The software or logical id of the payment terminal.
  {% /property %}
  {% property name="deviceId" type="string" %}
    The hardware id or serial number of the payment terminal.
  {% /property %}
  {% property name="operatorId" type="string" %}
    POS operator Id.
  {% /property %}
  {% property name="createdByAccountId" type="string" %}
    Id of the [Centrapay Account](/api/accounts) creating the Payment Request.
  {% /property %}
  {% property name="createdByAccountName" type="string" %}
    Name of the [Centrapay Account](/api/accounts) creating the Payment Request.
  {% /property %}
  {% property name="conditionsEnabled" type="boolean" %}
    Flag to indicate that a merchant is able to accept [Payment Conditions](#payment-condition-model).
  {% /property %}
  {% property name="patronNotPresent" type="boolean" %}
    Flag to indicate the patron is not physically present. This may affect payment conditions or available [Payment Options](#payment-option-model).
  {% /property %}
  {% property name="cancellationReason" type="string" %}
    The reason that the Payment Request was cancelled. See [Cancellation Reasons](#cancellation-reasons) for possible values.
  {% /property %}
  {% property name="preAuth" type="boolean" %}
    Flag to indicate the if the request is a Pre Auth for supported [Asset Types](/api/asset-types).
  {% /property %}
  {% property name="preAuthExpiresAt" type="timestamp" %}
    Pre Auth completions and releases will be accepted until this time.
  {% /property %}
  {% property name="preAuthStatus" type="string" %}
    Describes which state a Pre Auth Payment Request is in. Valid values are `authorized` or `released`.
  {% /property %}
  {% property name="taxNumber" type="object" %}
    The value-added tax configuration for the [Business](/api/businesses) that the [Merchant](/api/merchants) belongs to. See [Tax Number](/api/businesses#tax-number-model).
  {% /property %}
  {% property name="partialAllowed" type="boolean" %}
    Flag to indicate that the Payment Request can be paid for partially.
  {% /property %}
  {% property name="paidBy" type="object" %}
    Shows the [Paid By](#paid-by-model) when a Payment Request is paid for with multiple Assets.
  {% /property %}
  {% property name="basketAmount" type="bignumber" %}
    The total amount of the transaction including non Centrapay payment methods.
  {% /property %}
  {% property name="connectionId" type="string" experimental=true %}
    The identifier of the [Connection](/api/connections) associated with the payment request.
  {% /property %}
  {% property name="connectionStatus" type="string" experimental=true %}
    The status of the [Connection](/api/connections) associated with the payment request.
  {% /property %}
{% /properties %}

---

## Payment Option Model


{% properties %}
  {% property name="assetType" type="string" %}
    An [Asset Type](/api/asset-types) reference.
  {% /property %}
  {% property name="amount" type="bignumber" %}
    The value required to pay using the canonical units for the Asset Type.
  {% /property %}
  {% property name="bitcoinAddress" type="string" %}
    ⭐️ Address to send Bitcoin, when the `assetType` is `bitcoin.*`.
  {% /property %}
  {% property name="acceptedCollections" type="array" %}
    [Accepted Collections](#accepted-collections) for the Payment Request, when the “assetType” is `centrapay.token.*`.
  {% /property %}
{% /properties %}

⭐️ For Payment Options which specify an address, there’s a requirement to make a transaction on an external ledger. Once you have made that payment, you can use the transaction id to [Pay a Payment Request](#pay-a-payment-request) using the legacy payment API.

---

## Accepted Collections

If a Payment Request contains a `centrapay.token.*` Payment Option, an array of Accepted Collections will be present inside the `centrapay.token` Payment Option.
The Accepted Collections returned can be used to determine if a [Centrapay Token](/api/tokens) can be used to pay a Payment Request, and the Line Items able to be purchased using the Token.


{% properties %}
  {% property name="id" type="string" %}
    The id of a collection that the Merchant accepts for the given Payment Request.
  {% /property %}
  {% property name="lineItems" type="array" %}
    The [Line Items](#line-item-model) that can be purchased by a [Centrapay Token](/api/tokens) with matching collection id.
  {% /property %}
{% /properties %}

---

## Payment Condition Model

Some [Asset Types](/api/asset-types) require conditional approval to pay. Possible Payment Conditions include confirming proof of ID
or confirming a promotional item was purchased.

The `conditionsEnabled` flag should be set to true when [Creating a Payment Request](#create-a-payment-request) to indicate that
Payment Conditions can be accepted. If a Payment Condition arises, the absence of the `conditionsEnabled` flag will result in the
Payment Request being cancelled.

Conditions can either be [accepted](#accept-a-payment-condition) or [declined](#decline-a-payment-condition). If a condition is declined,
the Payment Request will be cancelled.


{% properties %}
  {% property name="id" type="bignumber" %}
    An enumerated identifier for the Payment Condition.
  {% /property %}
  {% property name="name" type="string" %}
    The name of the condition.
  {% /property %}
  {% property name="message" type="string" %}
    The human-readable description of the condition.
  {% /property %}
  {% property name="status" type="string" %}
    The status of the condition. Valid values include `accepted`, `declined`, `awaiting-merchant` or `void`.
  {% /property %}
{% /properties %}

---

## Line Item Model

An order item for which payment is requested.
The currency and units for a Line Item price will be consistent with the Payment Request value and the sum of Line Item prices should equal the Payment Request value.

Line items can include a discount amount.
A discount that applies to multiple Line Items may be represented as a separate Line Item with a negative amount.


{% properties %}
  {% property name="name" type="string" required=true %}
    The product description.
  {% /property %}
  {% property name="sku" type="string" %}
    The product (stock keeping unit) code. Required for [Token](/api/tokens/) redemptions.
  {% /property %}
  {% property name="qty" type="bignumber" required=true %}
    The product quantity (eg. item count, weight, volume etc).
  {% /property %}
  {% property name="price" type="bignumber" required=true %}
    The total price in cents for the line item (eg. `price = product price * qty - discounts + tax`).
  {% /property %}
  {% property name="tax" type="bignumber" %}
    Tax rate (percentage).
  {% /property %}
  {% property name="discount" type="bignumber" %}
    Discount amount in cents (tax exclusive).
  {% /property %}
  {% property name="productId" type="string" %}
    Manufacturer’s product identifier (eg GTIN/EAN).
  {% /property %}
  {% property name="restricted" type="boolean" %}
    Disallow payment with a “restricted” [Asset Type](/api/asset-types).
  {% /property %}
  {% property name="classification" type="object" %}
    [Product Classification](#product-classification).
  {% /property %}
{% /properties %}

---

## Product Classification


{% properties %}
  {% property name="type" type="string" %}
    The classification type.
    Currently only `GS1` is supported.
    See [GS1 Global Product Classification](https://www.gs1.org/standards/gpc).
    When `GS1` is used as the product classification type then the product code should be the GPC product brick identifier.
  {% /property %}
  {% property name="code" type="string" %}
    The classification code.
  {% /property %}
  {% property name="name" type="string" %}
    The classification title.
  {% /property %}
  {% property name="props" type="object" %}
    The product classification properties.
    Classification properties allow optional additional product characterizing attrubutes to be supplied.
    In the case of GS1 product classifications this corresponds to the GPC brick attributes.
  {% /property %}
{% /properties %}

---

## Paid By Model

The Paid By provides a summary of the transactions after the Payment Request was paid.

{% properties %}
  {% property name="assetTotals" type="array" %}
    The [Asset Totals](#asset-totals) for each transacted Asset Type.
  {% /property %}
{% /properties %}

## Asset Totals

The Asset Totals provides a sum of every transaction for each [Asset Type](/api/asset-types)

{% properties %}
  {% property name="type" type="string" %}
    The Asset Type used for the payment.
  {% /property %}
  {% property name="description" type="string" %}
    A human readable description of the Asset Type used.
  {% /property %}
  {% property name="settlementDate" type="timestamp" %}
    The estimated date that the Merchant can expect settlement of funds.
  {% /property %}
  {% property name="total" type="monetary" %}
    The total monetary value of the Asset Type used to pay a Payment Request.
  {% /property %}
  {% property name="lineItems" type="array" %}
    The [Line Items](#line-item-model) paid for by the Asset Type.
  {% /property %}
{% /properties %}

---

## Payment Activity Model

A Payment Activity records a transaction that has happened on a Payment Request.
Payment Activities are created when a Payment Request has been `created`, `paid`, `refunded`, `cancelled`, or `expired`.


{% properties %}
  {% property name="id" type="string" %}
    The unique identifier of the Payment Activity.
  {% /property %}
  {% property name="type" type="string" %}
    The [Payment Activity Type](#payment-activity-types).
  {% /property %}
  {% property name="value" type="monetary" %}
    The value of the Payment Activity. Must be less than 100000000 and positive.
  {% /property %}
  {% property name="paymentRequestId" type="string" %}
    The Payment Request’s id.
  {% /property %}
  {% property name="merchantId" type="string" %}
    The Payment Request’s [Merchant](/api/merchants) id.
  {% /property %}
  {% property name="merchantConfigId" type="string" %}
    The Payment Request’s [Merchant Config](/api/merchant-configs) id.
  {% /property %}
  {% property name="merchantAccountId" type="string" %}
    The Payment Request’s Merchant [Account](/api/accounts) id.
  {% /property %}
  {% property name="merchantName" type="string" %}
    The Payment Request’s Merchant name.
  {% /property %}
  {% property name="createdAt" type="timestamp" %}
    When the activity was created.
  {% /property %}
  {% property name="createdBy" type="crn" %}
    The identity that created the activity.
  {% /property %}
  {% property name="paymentRequestCreatedBy" type="crn" %}
    The identity that created the Payment Request.
  {% /property %}
  {% property name="activityNumber" type="bignumber" %}
    Unique sequential number for the activity.
  {% /property %}
  {% property name="shortCode" type="string" %}
    A shorter id that can be used for up to two years.
  {% /property %}
  {% property name="assetType" type="string" %}
    The Asset Type for the `payment` or `refund` activity.
  {% /property %}
  {% property name="external" type="boolean" %}
    `true` if the Payment Activity is recording a transaction that occurred outside the Centrapay system.
  {% /property %}
  {% property name="cancellationReason" type="string" %}
    The reason that the Payment Request was cancelled. See [Cancellation Reasons](#cancellation-reasons) for possible values.
  {% /property %}
  {% property name="conditionId" type="number" %}
    The id of a Condition if the activity was for a Condition being accepted or declined.
  {% /property %}
  {% property name="idempotencyKey" type="string" %}
    Required when confirming a Payment Request. This is an identifier from your system to enforce uniqueness.
  {% /property %}
  {% property name="confirmationIdempotencyKey" type="string" %}
    Required when refunding a Pre Auth Confirmation. Should be the same as the idempotencyKey used for Confirmation.
  {% /property %}
  {% property name="preAuth" type="boolean" %}
    `true` if the related Payment Request is a Pre Auth.
  {% /property %}
  {% property name="paidBy" type="object" %}
    Shows the [Paid By](#paid-by-model) when a Payment Request is paid.
  {% /property %}
  {% property name="strategy" type="object" %}
    Details about the specifics for a refund. See [Strategy Model](#strategy-model)
  {% /property %}
{% /properties %}

## Strategy Model

{% properties %}
  {% property name="refunds" type="array" %}
    The list of refunds that will be processed.
  {% /property %}

  {% property name="refunds.assetId" type="String" %}
    The ID of the Asset that will be refunded.
  {% /property %}

  {% property name="refunds.assetType" type="String" %}
    The [Asset Type](/api/asset-types) of the Asset that will be refunded.
  {% /property %}

  {% property name="refunds.completedPaymentId" type="String" %}
    ID of a Payment Activity of `type: payment` that the refund is against.
  {% /property %}

  {% property name="refunds.amount" type="String" %}
    The amount that will be refunded back to the Asset.
  {% /property %}

  {% property name="refunds.collectionId" type="String" %}
    The ID of the [Token Collection](/api/token-collections) if applicable.
  {% /property %}
{% /properties %}

### Payment Activity Types

|       Name        |                                                 Description                                                 |
| ----------------- | ----------------------------------------------------------------------------------------------------------- |
| request           | [Payment Request](#payment-request-model) was created.                                                      |
| preAuthRequest    | [Payment Request](#payment-request-model) was created with the `preAuth` flag set to "true".                |
| paid              | [Payment Request](#payment-request-model) was paid.                                                         |
| payment           | A payment was made towards the [Payment Request](#payment-request-model).                                   |
| refund            | Funds were returned to the shopper.                                                                         |
| cancellation      | [Payment Request](#payment-request-model) was cancelled by the merchant or the shopper.                     |
| expiry            | [Payment Request](#payment-request-model) wasn't paid before time out.                                      |
| accept-condition  | A [Payment Condition](#payment-condition-model) was accepted.                                               |
| decline-condition | A [Payment Condition](#payment-condition-model) was declined.                                               |
| authorization     | A Pre Auth [Payment Request](#payment-request-model) was approved and confirmations can be made against it. |
| confirmation      | Funds on a Pre Auth have been drawn down on.                                                                |
| release           | Pre Auth has been finalised and any remaining funds from Authorization have been returned.                  |

---

## Cancellation Reasons

|            Reason            |                                                                                                     Description                                                                                                      |
| ---------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| CANCELLED_BY_MERCHANT        | The merchant cancelled the Payment Request by calling the cancel or void endpoint.                                                                                                                                   |
| CANCELLED_BY_PATRON          | The patron cancelled the transaction.                                                                                                                                                                                |
| PATRON_CODE_INVALID          | The patron code on the Payment Request was invalid.                                                                                                                                                                  |
| PAYMENT_FAILED               | The Payment Request failed for an unknown reason.                                                                                                                                                                    |
| PATRON_CODE_EXPIRED          | The patron code on the Payment Request has expired.                                                                                                                                                                  |
| DECLINED_BY_PATRON           | The payment was declined by the patron during approval steps.                                                                                                                                                        |
| DECLINED_BY_MERCHANT         | The payment was declined by the merchant during approval steps.                                                                                                                                                      |
| PAYMENT_DECLINED             | The payment parameters were valid but payment was declined because additional payment restrictions were violated. For example, asset not active, asset overdrawn, quota exceeded or line item category restrictions. |
| PAYMENT_REQUEST_EXPIRED      | The Payment Request has expired.                                                                                                                                                                                     |
| NO_AVAILABLE_PAYMENT_OPTIONS | No payment options match the requested payment parameters.                                                                                                                                                           |
| INACTIVE_ASSET               | The asset used to pay the Payment Request is inactive.                                                                                                                                                               |

---

{% endpoint
  path="/api/payment-requests"
  filename="payment-requests-create"
%}
  ## Create a Payment Request

  This endpoint allows you to create a Payment Request.

  {% properties %}
    {% property name="configId" type="string" required=true %}
      The [Merchant Config](/api/merchant-configs) id used to configure the payment options.
    {% /property %}
    {% property name="value" type="monetary" required=true %}
      The canonical value of the Payment Request. Must be less than 100000000 and positive.
    {% /property %}
    {% property name="barcode" type="string" %}
      [Scanned Code](/api/scanned-codes) used to create the Payment Request.
    {% /property %}
    {% property name="barcodeType" type="string" %}
      Indicates the provider of a barcode, e.g. `ticketek`.
    {% /property %}
    {% property name="collectionId" type="string" %}
      The identifier of the [Token Collection](/api/tokens).
    {% /property %}
    {% property name="expirySeconds" type="number" %}
      The expiry seconds used to configure the Payment Request expiry.
    {% /property %}
    {% property name="lineItems" type="array" %}
      The [Line Items](#line-item-model) being paid for.
    {% /property %}
    {% property name="purchaseOrderRef" type="string" %}
      A reference to a purchase order for this Payment Request.
    {% /property %}
    {% property name="invoiceRef" type="string" %}
      A reference to an invoice for this Payment Request. Must be less than or equal to 128 characters.
    {% /property %}
    {% property name="redirectCancelUrl" type="string" experimental=true %}
      URL to redirect the user to after they pay the Payment Request. Must start with one of the allowedRedirectUrls for the [Merchant Config](/api/merchant-configs).
    {% /property %}
    {% property name="redirectPaidUrl" type="string" experimental=true %}
      URL to redirect the user to after they cancel the Payment Request. Must start with one of the allowedRedirectUrls for the [Merchant Config](/api/merchant-configs).
    {% /property %}
    {% property name="externalRef" type="string" %}
      An external reference to the Payment Request.
    {% /property %}
    {% property name="terminalId" type="string" %}
      The software or logical id of the payment terminal.
    {% /property %}
    {% property name="deviceId" type="string" %}
      The hardware id or serial number of the payment terminal.
    {% /property %}
    {% property name="operatorId" type="string" %}
      POS operator Id.
    {% /property %}
    {% property name="createdByAccountName" type="string" %}
      Name of the [Centrapay Account](/api/accounts) creating the Payment Request.
    {% /property %}
    {% property name="conditionsEnabled" type="boolean" %}
      Flag to indicate that a merchant is able to accept [Payment Conditions](#payment-condition-model).
    {% /property %}
    {% property name="patronNotPresent" type="boolean" %}
      Flag to indicate the patron is not physically present. This may affect payment conditions or available [Payment Options](#payment-option-model).
    {% /property %}
    {% property name="preAuth" type="boolean" %}
      Flag to indicate the if the request is a Pre Auth for supported [Asset Types](/api/asset-types).
    {% /property %}
    {% property name="partialAllowed" type="boolean" %}
      Flag to indicate that the Payment Request can be paid for partially.
    {% /property %}
    {% property name="basketAmount" type="bignumber" %}
      The total amount of the transaction including non Centrapay payment methods. Required when `partialAllowed` is `true`.
    {% /property %}
    {% property name="connectionId" type="string" %}
      The identifier of the connection to be linked to the payment request.
    {% /property %}
  {% /properties %}

  {% properties heading="Errors" %}
    {% error code="400" message="LINE_ITEMS_SUM_CHECK_FAILED" %}
      The sum value of the line items did not equal the value of the Payment Request.
    {% /error %}
    {% error code="400" message="CHECKSUM_FAILED" %}
      Luhn checksum digit doesn't pass.
    {% /error %}
    {% error code="403" message="REDIRECT_URL_INVALID" %}
      One or more of the supplied redirect urls do not start with one of the `allowedRedirectUrls` on the [Merchant Config](/api/merchant-configs).
    {% /error %}
    {% error code="403" message="PATRON_CODE_INVALID" %}
      [Patron Code](/api/patron-codes) doesn't exist or has expired.
    {% /error %}
    {% error code="403" message="NO_AVAILABLE_PAYMENT_OPTIONS" %}
      No payment options match the requested payment parameters.
    {% /error %}
    {% error code="403" message="TOKEN_COLLECTION_NOT_FOUND" %}
      The token collection does not exist.
    {% /error %}
    {% error code="403" message="CONNECTION_NOT_FOUND" %}
      The connection does not exist.
    {% /error %}
    {% error code="403" message="CONNECTION_MERCHANT_MISMATCH" %}
      The connection is not for the same merchant as the payment request.
    {% /error %}
    {% error code="403" message="CONNECTION_CREATED_BY_MISMATCH" %}
      The connection was not created by the same caller as the payment request.
    {% /error %}
  {% /properties %}

{% /endpoint %}

---

{% endpoint
  path="/api/payment-requests/{paymentRequestId}"
  filename="payment-requests-get"
%}
  ## Get a Payment Request

  This endpoint allows you to retrieve a Payment Request.
{% /endpoint %}

---

{% endpoint
  path="/api/payment-requests/short-code/{shortCode}"
  filename="payment-requests-get-by-short-code"
%}
  ## Get a Payment Request by Short Code

  This endpoint returns the latest Payment Request that matches the given short code.

  {% properties heading="Errors" %}
    {% error code="400" message="CHECKSUM_FAILED" %}
      Luhn checksum digit doesn't pass.
    {% /error %}
  {% /properties %}

{% /endpoint %}

---

{% endpoint
  path="/api/me/patron-code-payment-request"
  filename="payment-requests-get-by-patron-code"
%}
  ## Get a Payment Request linked to a Patron Code

  This endpoint returns the latest Payment Request with status `new` that has been attached to a [Patron Code](/api/patron-codes).
  The Payment Request may have been created with a reference to any Patron Code owned by the user's
  account.

  This endpoint should be polled just after a user's Patron Code has been scanned. This will allow
  them to find the Payment Request and proceed to pay.
{% /endpoint %}

---

{% endpoint
  path="/api/connections/{connectionId}/latest-payment-request"
  filename="payment-requests-get-by-connectionId"
%}
  ## Get a Payment Request by Connection Id

  This endpoint returns the latest Payment Request that is associated with the provided [Connection](/api/connections).
  The caller of the endpoint must be the account that authorized the connection.

{% /endpoint %}

---

{% endpoint
  path="/api/payment-requests/external-ref/{externalRef}"
  filename="payment-requests-list-by-external-ref"
%}
  ## List Payment Requests by External Reference

  This endpoint returns a list of [Payment Requests](#payment-request-model) that match the given external reference.
  Results are [paginated](/api/pagination/).

  {% properties %}
    {% property name="merchantAccountId" type="string" required=true %}
      The [Account](/api/accounts/) of the merchant that the Payment Request was created for.
    {% /property %}
    {% property name="pageKey" type="string" %}
      Used to retrieve the next page of items.
      Note: The `pageKey` value, if provided, needs to be URL-encoded.
    {% /property %}
    {% property name="paginationLimit" type="string" %}
      Maximum number of Payment Requests to return.
    {% /property %}
  {% /properties %}
{% /endpoint %}

---

{% endpoint
  path="/api/payment-requests/{paymentRequestId}/summary"
  filename="payment-requests-get-summary"
%}
  ## Get Payment Request Summary

  This endpoint allows you to retrieve the summary of a Payment Request while the status is `new`.
{% /endpoint %}

---

{% endpoint
  path="/api/payment-requests/{paymentRequestId}/pay"
  filename="payment-requests-pay"
%}
  ## Pay a Payment Request

  To pay a Payment Request you must supply the name of the [Asset Type](/api/asset-types), `idempotencyKey` and one of `assetId`, `transactionId` or `authorization`.
  - Use `assetId` if the [Asset Type](/api/asset-types) is managed by Centrapay.
  - Use `transactionId` to verify an external transaction such as a Bitcoin payment.
  - Use `authorization` to authorize an external transaction.

  {% properties %}
    {% property name="assetType" type="string" required=true %}
      An [Asset Type](/api/asset-types) reference.
    {% /property %}
    {% property name="idempotencyKey" type="string" required=true %}
      A unique identifier that prevents duplicate processing of the same request. See [idempotency](/api/idempotency).
    {% /property %}
    {% property name="assetId" type="string" %}
      The id of the Asset being used to make payment.
    {% /property %}
    {% property name="transactionId" type="string" %}
      Used to verify an external transaction eg Bitcoin.
    {% /property %}
    {% property name="authorization" type="string" %}
      Used to authorize an external transaction.
    {% /property %}
    {% property name="mode" type="string" %}
      The mode of payment. Valid values are `partial-payment` and `multi-asset-payment`.
    {% /property %}
    {% property name="amount" type="string" %}
      The value required to pay using the canonical units for the Asset Type.
    {% /property %}
    {% property name="externalPaymentRef" type="string" %}
      An external reference to the payment. Required when `assetType` is `farmlands.nzd.*`.
    {% /property %}
    {% property name="lineItems" type="array" %}
      The [Line Items](#line-item-model) associated with this payment attempt. This field is only allowed for `centrapay.token.*` payments. If omitted for `centrapay.token.*` payments, the highest-value valid line item from the payment request will be used by default.
    {% /property %}
  {% /properties %}

  {% properties heading="Errors" %}
    {% error code="403" message="INVALID_ASSET_TYPE" %}
      Either the merchant is not configured with the provided asset type or the asset type does not exist.
    {% /error %}
    {% error code="403" message="REQUEST_EXPIRED" %}
      Action cannot be completed because the request has expired.
    {% /error %}
    {% error code="403" message="REQUEST_PAID" %}
      Action cannot be completed because the request has been paid.
    {% /error %}
    {% error code="403" message="REQUEST_CANCELLED" %}
      Action cannot be completed because the request has already been cancelled.
    {% /error %}
    {% error code="403" message="INACTIVE_ASSET" %}
      The asset is not spendable. It may have been disabled, expired, or already spent.
    {% /error %}
    {% error code="403" message="INVALID_MERCHANT_CONFIG" %}
      The merchant is not configured properly to satisfy the Payment Request. This could be due to incorrect information, or the merchant’s credentials might be blocked by an external service.
    {% /error %}
    {% error code="403" message="QUOTA_EXCEEDED" %}
      The payment pay request exceeds the allowed spend quota supplied.
    {% /error %}
    {% error code="403" message="INSUFFICIENT_ASSET_VALUE" %}
      The asset has insufficient funds to pay the Payment Request or the transaction amount received by Centrapay is less than the total of the payment.
    {% /error %}
    {% error code="403" message="ASSET_REDEMPTION_DENIED" %}
      The asset redemption has been unsuccessful due to an error with provided payment parameters, the Merchant, or the Asset.
    {% /error %}
    {% error code="403" message="PAYMENT_DECLINED" %}
      The payment parameters were valid but payment was declined because additional payment restrictions were violated.
    {% /error %}
  {% /properties %}

{% /endpoint %}

---

{% endpoint
  path="/api/payment-requests/{paymentRequestId}/refund"
  filename="payment-requests-refund"
%}
  ## Refund a Payment Request

  This endpoint allows you to initiate a refund of a Payment Request. The refund will be completed asynchronously.

  {% properties %}
    {% property name="value" type="monetary" required=true %}
      The canonical value of the Payment Request. Must be less than 100000000 and positive.
    {% /property %}
    {% property name="externalRef" type="string" required=true %}
      An external reference to the refund.
    {% /property %}
    {% property name="invoiceRef" type="string" %}
      A reference to an invoice for the refund. Must be less than or equal to 128 characters.
    {% /property %}
    {% property name="confirmationIdempotencyKey" type="string" %}
      Required when refunding a Pre Auth Confirmation. Should be the same as the idempotencyKey used for Confirmation.
    {% /property %}
    {% property name="lineItems" type="array" %}
      The [Line Items](#line-item-model) being refunded.
    {% /property %}
    {% property name="merchantConfigId" type="string" %}
      The [Merchant Config](/api/merchant-configs) id of the refunding merchant when refunding a `farmlands.nzd.*` payment.
    {% /property %}
  {% /properties %}

  {% properties heading="Errors" %}
    {% error code="400" message="LINE_ITEMS_SUM_CHECK_FAILED" %}
      The sum value of the line items did not equal the value of the refund.
    {% /error %}
    {% error code="403" message="NOT_PAID" %}
      The Payment Request has not been paid.
    {% /error %}
    {% error code="403" message="ALREADY_REFUNDED" %}
      The Payment Request already been refunded.
      If you want to perfom additional refunds then an `externalRef` is required.
    {% /error %}
    {% error code="403" message="INVALID_AMOUNT" %}
      The refund requested is greater than the refundable amount.
    {% /error %}
    {% error code="403" message="REPEAT_REFERENCE" %}
      A refund has already been requested with the same external reference.
      Refunding the payment request twice with the same external reference is not allowed.
      If the amount of the refund is the same we assume it is a repeat request and return 200.
    {% /error %}
    {% error code="403" message="PARTIAL_REFUNDS_NOT_ALLOWED" %}
      The Asset does not support partial refunds.
    {% /error %}
    {% error code="403" message="INACTIVE_ASSET" %}
      The Asset is not refundable. It may have been disabled, expired, or already refunded.
    {% /error %}
    {% error code="403" message="REFUND_NOT_SUPPORTED" %}
      The Asset type does not support refunds.
    {% /error %}
    {% error code="403" message="REFUND_WINDOW_EXCEEDED" %}
      The time since the payment exceeds the window of time a payment request can be refunded in.
    {% /error %}
    {% error code="403" message="PRE_AUTH_PENDING" %}
      The Pre Auth Payment Request has yet to be authorized.
    {% /error %}
    {% error code="403" message="CONFIRMATION_NOT_FOUND" %}
      The confirmationIdempotencyKey does not match a Confirmation on the Payment Request.
    {% /error %}
    {% error code="403" message="REFUND_DECLINED" %}
      The refund parameters were valid but refund was declined because additional business rules were violated.
    {% /error %}
  {% /properties %}

{% /endpoint %}

---

{% endpoint
  path="/api/payment-requests/{paymentRequestId}/void"
  filename="payment-requests-void"
%}
  ## Void a Payment Request

  Voiding a payment request will cancel the request and trigger any refunds if necessary.

  {% properties heading="Errors" %}
    {% error code="403" message="VOID_WINDOW_EXCEEDED" %}
      The void window is closed 24 hours after the Payment Request `createdAt`. After the void window has closed if the Payment Request is paid, use [Refund](#refund-a-payment-request) endpoint to reverse the payment.
    {% /error %}
    {% error code="403" message="ALREADY_REFUNDED" %}
      The Payment Request already been refunded.
    {% /error %}
    {% error code="403" message="REPEAT_REFERENCE" %}
      A refund has already been requested with the same external reference.
      Refunding the payment request twice with the same external reference is not allowed.
      If the amount of the refund is the same we assume it is a repeat request and return 200.
    {% /error %}
    {% error code="403" message="INACTIVE_ASSET" %}
      The Asset is not refundable. It may have been disabled, expired, or already refunded.
    {% /error %}
    {% error code="403" message="REFUND_NOT_SUPPORTED" %}
      The Asset type does not support refunds.
    {% /error %}
    {% error code="403" message="REQUEST_EXPIRED" %}
      The Payment Request has expired.
    {% /error %}
    {% error code="403" message="PRE_AUTH_ALREADY_CONFIRMED" %}
      The Pre Auth Payment Request already has confirmations. Use [Refund](#refund-a-payment-request) endpoint to reverse the transaction.
    {% /error %}
  {% /properties %}

{% /endpoint %}

---

{% endpoint
  path="/api/payment-requests/{paymentRequestId}/release"
  filename="payment-requests-release"
%}
  ## Release Pre Auth funds

  This endpoint allows you to release funds held for a Pre Auth Payment Request.

  When you call release on a Pre Auth Payment Request any remaining funds that were being held for the authorization are returned to the asset, and a release Payment Activity is returned.
  If the authorization never completed, the Payment Request will instead be cancelled, and a cancellation Payment Activity will be returned.

  {% properties heading="Errors" %}
    {% error code="403" message="INVALID_PAYMENT_REQUEST_TYPE" %}
      The Payment Request is not related to a Pre Auth.
    {% /error %}
    {% error code="403" message="PRE_AUTH_RELEASED" %}
      `preAuthExpiresAt` has passed.
    {% /error %}
  {% /properties %}

{% /endpoint %}

---

{% endpoint
  path="/api/payment-requests/{paymentRequestId}/confirm"
  filename="payment-requests-confirm"
%}
  ## Confirm Pre Auth Payment Request

  This endpoint allows you to make a confirmation against a Pre Auth Payment Request.

  An `idempotencyKey` is a identifier from your system used for guaranteeing at least once delivery of your request.
  If our endpoint does not respond, you must retry until you get back a 200 or 403.
  If we recive 2 requests with the same `idempotencyKey`, we won't process the second and return the first response.

  {% properties %}
    {% property name="idempotencyKey" type="string" required=true %}
      This is an identifier from your system to enforce uniqueness.
    {% /property %}
    {% property name="invoiceRef" type="string" required=true %}
      A reference to an invoice for this Payment Request. Must be less than or equal to 128 characters.
    {% /property %}
    {% property name="lineItems" type="array" required=true %}
      The [Line Items](#line-item-model) being confirmed.
    {% /property %}
    {% property name="value" type="monetary" %}
      The canonical value of the confirmation. Must be less than 100000000 and positive.
    {% /property %}
  {% /properties %}

  {% properties heading="Errors" %}
    {% error code="403" message="INVALID_PAYMENT_REQUEST_TYPE" %}
      The Payment Request is not related to a Pre Auth.
    {% /error %}
    {% error code="403" message="PRE_AUTH_RELEASED" %}
      The Payment Request has been released or Pre Auth has expired. Remaining funds have been returned to the Patron.
    {% /error %}
    {% error code="403" message="PRE_AUTH_PENDING" %}
      The Payment Request has not been authorized.
    {% /error %}
    {% error code="403" message="REQUEST_CANCELLED" %}
      The Payment Request has been cancelled.
    {% /error %}
    {% error code="403" message="INVALID_AMOUNT" %}
      The confirmation is greater then the remaining funds on the authroization.
    {% /error %}
    {% error code="403" message="IDEMPOTENT_OPERATION_FAILED" %}
      There has already been a confirmation against the Payment Request with the same idempotencyKey but different content.
    {% /error %}
  {% /properties %}

{% /endpoint %}

---

{% endpoint
  path="/api/payment-activities"
  filename="payment-activities-list"
%}
  ## List Payment Activities for a Merchant

  This endpoint allows you to list [Payment Activities](#payment-activity-model) for a Merchant.
  Results are [paginated](/api/pagination/) and ordered by descending activity created date.

  {% properties %}
    {% property name="merchantId" type="string" required=true %}
      The id of the [Merchant](/api/merchants/) the Payment Request is on behalf of.
    {% /property %}
    {% property name="pageKey" type="string" required=true %}
      Used to retrieve the next page of items.
      Note: The `pageKey` value, if provided, needs to be URL-encoded.
    {% /property %}
  {% /properties %}
{% /endpoint %}

---

{% endpoint
  path="/api/payment-requests/{paymentRequestId}/activities"
  filename="payment-requests-list-payment-activities"
%}
  ## List Payment Activities for a Payment Request

  This endpoint allows you to list [Payment Activities](#payment-activity-model) for a Payment Request.
  Results are ordered by descending activity created date.
{% /endpoint %}

---

{% endpoint
  path="/api/payment-requests/{paymentRequestId}/conditions/{conditionId}/accept"
  filename="payment-requests-conditions-accept"
%}
  ## Accept a Payment Condition

  Accept a [Payment Condition](#payment-condition-model) listed in `merchantConditions` with status `awaiting-merchant`.
  Returns a [Payment Activity](#payment-activity-model).

  {% properties heading="Errors" %}
    {% error code="403" message="PATRON_NOT_AUTHORIZED" %}
      The Payment Condition is `awaiting-merchant`, therefore the patron is not authorized to accept the condition.
    {% /error %}
    {% error code="403" message="MERCHANT_NOT_AUTHORIZED" %}
      The Payment Condition is `awaiting-patron`, therefore the merchant is not authorized to accept the condition.
    {% /error %}
    {% error code="403" message="CONDITION_ALREADY_SET" %}
      The Payment Condition has already been accepted or declined.
    {% /error %}
  {% /properties %}
{% /endpoint %}

---

{% endpoint
  path="/api/payment-requests/{paymentRequestId}/conditions/{conditionId}/decline"
  filename="payment-requests-conditions-decline"
%}
  ## Decline a Payment Condition

  Decline a [Payment Condition](#payment-condition-model) listed in `merchantConditions` with status `awaiting-merchant`.
  Returns a [Payment Activity](#payment-activity-model).

  {% properties heading="Errors" %}
    {% error code="403" message="PATRON_NOT_AUTHORIZED" %}
      The Payment Condition is `awaiting-merchant`, therefore the patron is not authorized to decline the condition.
    {% /error %}
    {% error code="403" message="MERCHANT_NOT_AUTHORIZED" %}
      The Payment Condition is `awaiting-patron`, therefore the merchant is not authorized to decline the condition.
    {% /error %}
    {% error code="403" message="CONDITION_ALREADY_SET" %}
      The Payment Condition has already been accepted or declined.
    {% /error %}
  {% /properties %}
{% /endpoint %}
