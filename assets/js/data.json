[{"title":"Farmlands POS Integration Guide","description":"Centrapay and Farmlands have entered into a partnership that will allow Farmlands Card Partners to accept the Farmlands Card for payment at the point of sale.","href":"/guides/farmlands-pos-integration"},{"href":"/guides/farmlands-pos-integration#centrapay-integration-benefits","title":"Centrapay Integration Benefits","description":"Integrating with Centrapay streamlines the process for authorising and invoicing Farmlands Card Payments. The integration provides:"},{"href":"/guides/farmlands-pos-integration#payment-flow-overview","title":"Payment Flow Overview","description":"Farmlands integrations use Centrapay’s Quick Pay Barcode Flow For Merchants to connect to Cardholders and accept Farmlands transactions."},{"href":"/guides/farmlands-pos-integration#payment-flow-implementation","title":"Payment Flow Implementation","description":"The Payment Flow can only be used by existing Farmlands Card Partners. Card Partners must complete the following steps to accept Farmlands transactions."},{"href":"/guides/farmlands-pos-integration#merchant-configuration","title":"Merchant Configuration","description":"Each Card Partner site that needs to accept Farmlands Card payments must be set up as a separate Centrapay Merchant with its own Merchant Config. The Merchant Config contains a Farmlands Payment Option that allows the site to accept Farmlands Payments."},{"href":"/guides/farmlands-pos-integration#authentication","title":"Authentication","description":"Requests to Centrapay’s APIs are authenticated by providing an API key in the X-Api-Key header. API Keys provide enduring access to a single Centrapay account."},{"href":"/guides/farmlands-pos-integration#basic-requirements","title":"Basic Requirements","description":"The Payment Flow needs the following requirements to be met."},{"href":"/guides/farmlands-pos-integration#payment-conditions","title":"Payment Conditions","description":"This extension enables the POS to enforce requiring an ID check for high-risk transactions."},{"href":"/guides/farmlands-pos-integration#pre-auth","title":"Pre Auth","description":"Farmlands Card Partners must support this extension when there is not an invoice number available at the point of sale or the purchase cannot be fulfilled immediately. This might happen if your stock is not on hand or you have a separate fulfilment process."},{"href":"/guides/farmlands-pos-integration#cardholder-not-present","title":"Cardholder Not Present","description":"Farmlands Card Partners must support this extension if they accept payments when the Cardholder is not physically present when a payment is authorised. For example, to accept phone-based orders or orders where the Farmlands barcode is already known."},{"href":"/guides/farmlands-pos-integration#validating-farmlands-barcodes","title":"Validating Farmlands Barcodes","description":"Farmlands Card Partners may optionally decode a scanned Farmlands Barcode to confirm that it is valid and apply Farmlands discounts before creating a Payment Request."},{"href":"/guides/farmlands-pos-integration#handling-payment-errors","title":"Handling Payment Errors","description":"The POS must follow Centrapay’s guidelines on handling errors when dealing with inconsistencies in Payment Request statuses due to network issues or race conditions."},{"href":"/guides/farmlands-pos-integration#refunds","title":"Refunds","description":"Cardholder purchases are refunded by refunding the Payment Request."},{"href":"/guides/farmlands-pos-integration#short-codes","title":"Short Codes","description":"Payment Requests have a short code field that is human- and OCR-friendly. When combined with the date or merchant id, short codes can unambiguously identify the correct Payment Request."},{"href":"/guides/farmlands-pos-integration#testing-your-integration","title":"Testing Your Integration","description":"Merchant Integrators need to work with Farmlands and Centrapay to get set up to test payments. Please contact Farmlands to organise full end-to-end testing."},{"href":"/guides/farmlands-pos-integration#certification-requirements","title":"Certification Requirements","description":"For Centrapay to allow integrations to have production assets turned on, we require partners to complete a Certification Process."},{"href":"/guides/farmlands-pos-integration#next-steps","title":"Next Steps","description":""},{"title":"Initiating Refunds","href":"/guides/initiating-refunds"},{"href":"/guides/initiating-refunds#refund-idempotency","title":"Refund Idempotency","description":"Refund requests must provide an externalRef that is unique for all refunds made against the Payment Request."},{"href":"/guides/initiating-refunds#obtaining-a-payment-request-id","title":"Obtaining a Payment Request Id","description":"Refunds are initiated using the identifier for the Payment Request. However, a patron is NOT expected to have this information available."},{"href":"/guides/initiating-refunds#by-short-code","title":"By Short Code","description":"Call the Get Payment Request by Short Code endpoint using the Centrapay short code that the patron obtains from their paper receipt or digital wallet transaction history."},{"href":"/guides/initiating-refunds#by-transaction-reference","title":"By Transaction Reference","description":"Lookup the transaction within the merchant system using the transaction reference that the patron obtains from their paper receipt or digital wallet transaction history."},{"href":"/guides/initiating-refunds#refund-error-handling","title":"Refund Error Handling","description":"There are a number of reasons why refunds can fail. These are documented on the Refund Payment Request endpoint and should be communicated to the user."},{"href":"/guides/initiating-refunds#multi-asset-selection","title":"Multi-Asset Selection","description":"Payment Requests may be paid by multiple assets. When refunding a multi-asset Payment Request, the refunded asset is not controllable by the merchant."},{"title":"Line Items","href":"/guides/line-items"},{"href":"/guides/line-items#restrictions","title":"Restrictions","description":""},{"title":"Barcode Flow for Merchants","href":"/guides/merchant-integration-barcode-flow"},{"href":"/guides/merchant-integration-barcode-flow#barcode-flow","title":"Barcode Flow","description":"The sequence diagram below indicates the expected flow of behaviour between the Patron, the Point of Sale (POS) and Centrapay."},{"href":"/guides/merchant-integration-barcode-flow#quick-pay-flow","title":"Quick Pay Flow","description":"Quick Pay is used to immediately confirm the payment without requiring Patron approval."},{"href":"/guides/merchant-integration-barcode-flow#checking-barcode-details","title":"Checking Barcode Details","description":"The POS can optionally decode a scanned barcode in order to get further details about a barcode before it creates a Payment Request. For example, the POS can use the barcode provider to apply any provider-specific discounts before creating the Payment Request."},{"title":"Merchant Integration Error Handling","href":"/guides/merchant-integration-error-handling"},{"href":"/guides/merchant-integration-error-handling#respect-payment-status","title":"Respect Payment Status","description":"Use the Payment Request status as the source of truth when determining if a Payment Request is paid or expired. For example, if cancelling a Payment Request fails with a REQUEST_PAID error then the terminal should respond accordingly; either by showing the transaction as paid or initiating a void instead."},{"href":"/guides/merchant-integration-error-handling#void-unknown-status","title":"Void Unknown Status","description":"If the status of a transaction cannot be determined to be successful after retrying, then the Payment Request should be voided. Voiding a Payment Request will cancel the request and trigger any refunds if necessary."},{"href":"/guides/merchant-integration-error-handling#configure-pos-timeout","title":"Configure POS Timeout","description":"Payment Requests have a configurable timeout which defaults to 2 minutes. Integrators should make sure that the payment terminal times out 5-10 seconds after the Payment Request."},{"href":"/guides/merchant-integration-error-handling#retry-unknown-errors","title":"Retry Unknown Errors","description":"When faced with an unknown error while checking the status of a Payment Request, POS integrations should retry at least once before voiding the transaction."},{"href":"/guides/merchant-integration-error-handling#resolving-persistent-errors","title":"Resolving Persistent Errors","description":"For issues that cannot be resolved, please reach out to Centrapay Support at integrations@centrapay.com."},{"title":"QR Code Flow for Merchants","href":"/guides/merchant-integration-qr-code-flow"},{"title":"Patron Not Present","href":"/guides/patron-not-present"},{"title":"Payment Conditions","href":"/guides/payment-conditions"},{"href":"/guides/payment-conditions#implementation","title":"Implementation","description":"In order to support Payment Conditions, the merchant integration must extend Centrapay's payment protocol by creating the Payment Request with the conditionsEnabled flag set to true."},{"href":"/guides/payment-conditions#additional-behaviours","title":"Additional Behaviours","description":"The payment request status must always be polled after accepting or declining a condition as these actions may trigger the additional behaviours below."},{"title":"Point of Sale","href":"/guides/point-of-sale"},{"href":"/guides/point-of-sale#core-requirements","title":"Core Requirements","description":"Centrapay POS integrations must be able to create, void and refund Payment Requests on behalf of Merchants."},{"href":"/guides/point-of-sale#optional-protocol-extensions","title":"Optional Protocol Extensions","description":"Our payment protocol supports several optional extensions. Please review the extensions below and determine which ones you need for your integration."},{"href":"/guides/point-of-sale#contact-us","title":"Contact Us","description":"Contact integrations@centrapay.com to get started with API keys."},{"title":"Requesting Payment","href":"/guides/requesting-payment"},{"href":"/guides/requesting-payment#connecting-with-patrons","title":"Connecting With Patrons","description":"The Payment Request object is a core part of Centrapay’s payment protocol. It represents the intention of a merchant to receive payment, defines the amount to be paid, and the acceptable Asset Types for payment."},{"href":"/guides/requesting-payment#required-fields","title":"Required Fields","description":"We require compliant integrations to provide the following optional fields when creating a Payment Request."},{"href":"/guides/requesting-payment#short-codes","title":"Short Codes","description":"Payment Requests have a short code that is human- and OCR-friendly. Short codes are recycled every two years. When combined with the date or merchant id, short codes can unambiguously identify the correct Payment Request."},{"href":"/guides/requesting-payment#polling-for-payment-confirmation","title":"Polling for Payment Confirmation","description":"After connecting with the Patron, the POS must poll the Payment Request status every second until the status has changed."},{"href":"/guides/requesting-payment#protocol-extensions","title":"Protocol Extensions","description":"Our payment protocol supports several optional extensions. Please review the extensions below and determine which ones you need for your integration."},{"href":"/guides/requesting-payment#handling-payment-errors","title":"Handling Payment Errors","description":"Merchant integrations should follow our guidelines in Merchant Integration Error Handling when inconsistencies such as network issues or race conditions occur."},{"title":"Requesting Pre Auth","href":"/guides/requesting-pre-auth"},{"href":"/guides/requesting-pre-auth#restrictions","title":"Restrictions","description":"Pre Auth payments are not supported in all cases."},{"href":"/guides/requesting-pre-auth#pre-auth-flow","title":"Pre Auth Flow","description":"Pre Auth payments go through an orthogonal payment flow compared to Centrapay’s standard payment flow."},{"href":"/guides/requesting-pre-auth#authorise","title":"Authorise","description":"An authorisation is created when the Payment Request is created with the preAuth flag while Requesting Payment."},{"href":"/guides/requesting-pre-auth#confirm","title":"Confirm","description":"Merchants can draw down on authorised funds by making one or more confirmations against an authorised amount. Confirmations must be made with an idempotencyKey in order to prevent merchants from drawing down on authorised funds twice."},{"href":"/guides/requesting-pre-auth#release","title":"Release","description":"Authorised funds that have not been confirmed can optionally be released so that the asset holder is granted access to their remaining funds without needing to wait for the authorisation to expire."},{"href":"/guides/requesting-pre-auth#expiry","title":"Expiry","description":"Authorisations automatically expire after 3 months. Any unreleased funds are subsequently released to the Patron."},{"href":"/guides/requesting-pre-auth#refund","title":"Refund","description":"Refunds can be made against authorisations, confirmations, released authorisations and expired authorisations."},{"href":"/guides/requesting-pre-auth#void","title":"Void","description":"Voiding a Payment Request will cancel a Payment Request and trigger any refunds necessary. This operation is useful if the POS needs to back out of a transaction due to a network error for example. Voiding can only be used up to 24 hours after the Payment Request was created."},{"title":"Transaction Reporting","href":"/guides/transaction-reporting"}]