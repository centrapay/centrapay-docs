{"0": {
    "doc": "Account Memberships",
    "title": "Account Memberships",
    "content": "An Account Membership represents a user having access to a Centrapay Account. An Account Membership has a role which grants the user access to some or all of the operations and resources within the account. ",
    "url": "/api/account-memberships",
    "relUrl": "/api/account-memberships"
  },"1": {
    "doc": "Account Memberships",
    "title": "Contents",
    "content": ". | Models . | Account Member | . | Operations . | Add Member EXPERIMENTAL | List Members | List Account Memberships for authenticated subject | List Account Memberships for specific user | . | . ",
    "url": "/api/account-memberships#contents",
    "relUrl": "/api/account-memberships#contents"
  },"2": {
    "doc": "Account Memberships",
    "title": "Models",
    "content": "Account Member . A Member contains extended information about an user’s access to an account. Required Fields . | Field | Type | Description | . | accountId | String | The id of the Account the Membership is scoped to. | . | accountType | String | The type of the Account the Membership is scoped to. | . | accountName | String | The name of the Account the Membership is scoped to. | . | userId | String | The id of the user the Membership belongs to. | . | role | String | The role governing Membership permissions. | . Optional Fields . | Field | Type | Description | . | subject | CRN | User or API key resource name for the membership. | . | createdAt | Timestamp | When the Membership was created. | . | createdBy | CRN | Resource that created the member. | . | modifiedAt | Timestamp | When the Membership was last modified. | . | modifiedBy | CRN | Resource that last modified the account member. | . | version | BigNumber | Number of times the document has been modified. | . | testAccount | Boolean | A flag which is present if the Account is test | . ",
    "url": "/api/account-memberships#models",
    "relUrl": "/api/account-memberships#models"
  },"3": {
    "doc": "Account Memberships",
    "title": "Operations",
    "content": "Add Member EXPERIMENTAL . POST /api/accounts/{accountId}/members . curl -X POST https://service.centrapay.com/api/accounts/Jaim1Cu1Q55uooxSens6yk/members \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"userId\": \"da75ad90-9a5b-4df0-8374-f48b3a8fbfcc\", \"role\": \"account-owner\" }' . Example response payload . { \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"accountType\": \"org\", \"userId\": \"da75ad90-9a5b-4df0-8374-f48b3a8fbfcc\", \"role\": \"account-owner\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"modifiedAt\": \"2020-06-12T01:17:46.499Z\", \"modifiedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"version\": \"1\" } . List Members . GET /api/accounts/{accountId}/members . curl https://service.centrapay.com/api/accounts/Jaim1Cu1Q55uooxSens6yk/members \\ -H \"X-Api-Key: $api_key\" . Example response payload . [ { \"accountName\": \"Centrapay Cafe\", \"accountType\": \"org\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"userId\": \"b657195e-dc2f-11ea-8566-e7710d592c99\", \"createdAt\": \"2020-06-01T21:57:25.888Z\", \"role\": \"account-owner\" }, { \"accountName\": \"Centrapay Tea Warehouse\", \"accountType\": \"org\", \"accountId\": \"0f9nvqdcn5eaaDLefkg1Xt\", \"userId\": \"9f4b3bae-dc30-11ea-ab70-2743d9be3dd5\", \"createdAt\": \"2020-06-02T10:l4:33.021Z\", \"role\": \"account-owner\" } ] . List Account Memberships for authenticated subject . GET /api/account-memberships . curl https://service.centrapay.com/api/account-memberships \\ -H \"X-Api-Key: $api_key\" . Example response payload . [ { \"accountName\": \"Centrapay Tea Warehouse\", \"accountId\": \"5uooxSens6ykJaim1Cu1Q5\", \"accountType\": \"org\", \"role\": \"account-owner\" } ] . List Account Memberships for specific user . GET /api/users/{userId}/account-memberships . curl https://service.centrapay.com/api/users/1234/account-memberships \\ -H \"X-Api-Key: $api_key\" . Example response payload . [ { \"accountName\": \"Centrapay Cafe\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"accountType\": \"org\", \"role\": \"account-owner\" }, { \"accountName\": \"Centrapay Tea Warehouse\", \"accountId\": \"5uooxSens6ykJaim1Cu1Q5\", \"accountType\": \"org\", \"role\": \"account-owner\" } ] . ",
    "url": "/api/account-memberships#operations",
    "relUrl": "/api/account-memberships#operations"
  },"4": {
    "doc": "Accounts",
    "title": "Accounts",
    "content": "An Account represents a permission boundary around Centrapay resources. Accounts can have API Keys and Account Memberships which grant access to the resources. Accounts are classified as either “individual” or “org”. Individual accounts can only have a single member and Centrapay users can only be a member of a single individual account. ",
    "url": "/api/accounts",
    "relUrl": "/api/accounts"
  },"5": {
    "doc": "Accounts",
    "title": "Contents",
    "content": ". | Models . | Account | Subscription | . | Operations . | Create an Account | Get an Account | Update an Account | . | . ",
    "url": "/api/accounts#contents",
    "relUrl": "/api/accounts#contents"
  },"6": {
    "doc": "Accounts",
    "title": "Models",
    "content": "Account . | Field | Type | Description | . | id | String | The unique identifier. | . | type | String | Account type, must be either ‘org’ or ‘individual’. | . | name | String | The display name of the Account. | . | region | String | The region that the Account will operate in. Only defined for ‘org’ Accounts. | . | test | Boolean | A flag which is only present if the Account is for testing. | . | createdAt | Timestamp | When the Account was created. | . | modifiedAt | Timestamp | When the Account was updated. | . | createdBy | CRN | The User or API Key that created the Account. | . | modifiedBy | CRN | The User or API Key that updated the Account. | . | subscriptions | Array | A list of Subscriptions on the Account. | . Subscription . | Field | Type | Description | . | name | String | The name of the Subscription. | . ",
    "url": "/api/accounts#models",
    "relUrl": "/api/accounts#models"
  },"7": {
    "doc": "Accounts",
    "title": "Operations",
    "content": "Create an Account . POST /api/accounts . curl -X POST https://service.centrapay.com/api/accounts \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"name\": \"Centrapay Cafe\", \"type\": \"org\" }' . Required Fields . | Field | Type | Description | . | name | String | The name of the Account. | . | type | String | Account type, must be either “org” or “individual”. | . Optional Fields . | Field | Type | Description | . | owner | String | Id of user to add as member with “account-owner” role. | . | test | Boolean | A flag indicating if the Account is for testing. | . | region | String | The region that the Account will operate in. Required for ‘org’ Accounts, not allowed for ‘individual’ Accounts. Can be “NZ”, “AU”, or “US”. | . Example response payload . { \"id\": \"Jaim1Cu1Q55uooxSens6yk\", \"name\": \"Centrapay Cafe\", \"type\": \"org\", \"region\": \"NZ\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"modifiedAt\": \"2020-06-12T01:17:46.499Z\", \"modifiedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"version\": \"1\", \"subscriptions\": [ ] } . Get an Account . GET /api/accounts/{accountId} . curl https://service.centrapay.com/api/accounts/Jaim1Cu1Q55uooxSens6yk \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"Jaim1Cu1Q55uooxSens6yk\", \"name\": \"Centrapay Cafe\", \"type\": \"org\", \"region\": \"NZ\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"modifiedAt\": \"2020-06-12T01:17:46.499Z\", \"modifiedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"version\": \"1\", \"subscriptions\": [ ] } . Update an Account . PUT /api/accounts/{accountId} . curl -X PUT https://service.centrapay.com/api/accounts/Jaim1Cu1Q55uooxSens6yk \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"name\": \"Shortland St Cafe\" }' . Required Fields . | Field | Type | Description | . | name | String | The name of the account | . Example response payload . { \"id\": \"Jaim1Cu1Q55uooxSens6yk\", \"name\": \"Shortland St Cafe\", \"type\": \"org\", \"region\": \"NZ\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"modifiedAt\": \"2020-06-12T02:35:12.112Z\", \"modifiedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"version\": \"2\", \"subscriptions\": [ ] } . ",
    "url": "/api/accounts#operations",
    "relUrl": "/api/accounts#operations"
  },"8": {
    "doc": "API Keys",
    "title": "API Keys",
    "content": "API keys provide enduring access to a single Centrapay Account. ",
    "url": "/api/api-keys",
    "relUrl": "/api/api-keys"
  },"9": {
    "doc": "API Keys",
    "title": "Contents",
    "content": ". | Models . | API Key | . | Operations . | Create an API Key | List API Keys | Update an API Key | . | . ",
    "url": "/api/api-keys#contents",
    "relUrl": "/api/api-keys#contents"
  },"10": {
    "doc": "API Keys",
    "title": "Models",
    "content": "API Key . Mandatory Fields . | Field | Type | Description | . | accountId | String | The id of the Centrapay Account the API Key is scoped to. | . | name | String | The alphanumeric name of the API key, must be unique within the account. | . | role | String | Supported roles are: “account-owner” and “merchant-terminal”. See Auth Permissions for role details. | . | enabled | Boolean | Flag indicating the API Key is usable for authentication. | . | createdAt | Timestamp | When the API Key was created. | . Roles and Permissions . ",
    "url": "/api/api-keys#models",
    "relUrl": "/api/api-keys#models"
  },"11": {
    "doc": "API Keys",
    "title": "Operations",
    "content": ". Create an API Key . POST /api/accounts/{accountId}/api-keys . curl -X POST https://service.centrapay.com/api/accounts/Jaim1Cu1Q55uooxSens6yk/api-keys \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"name\": \"MyAPIkey\", \"role\": \"merchant-terminal\" }' . Example response payload . { \"name\": \"MyAPIkey\", \"createdAt\": \"2020-06-01T22:32:56.631Z\", \"enabled\": true, \"role\": \"merchant-terminal\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"secret\": \"EoaEL7skkedBBy9MzrBSyxG95vUAKjYkiFvWEfiAx\" } . List API Keys . GET /api/accounts/{accountId}/api-keys . curl https://service.centrapay.com/api/accounts/Jaim1Cu1Q55uooxSens6yk/api-keys \\ -H \"X-Api-Key: $api_key\" . Example response payload . [ { \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"name\": \"MyOtherAPIkey\", \"createdAt\": \"2020-06-01T21:57:25.888Z\", \"enabled\": false, \"role\": \"merchant-terminal\" }, { \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"name\": \"MyAPIkey\", \"createdAt\": \"2020-06-01T22:34:31.308Z\", \"enabled\": true, \"role\": \"merchant-terminal\" } ] . Update an API Key . PUT /api/accounts/{accountId}/api-keys/{apiKeyName} . curl -X PUT https://service.centrapay.com/api/accounts/Jaim1Cu1Q55uooxSens6yk/api-keys/MyAPIkey \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"enabled\": false }' . Required Fields . | Field | Type | Description | . | enabled | Boolean | Enable/Disable API key | . Example response payload . { \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"name\": \"MyAPIkey\", \"createdAt\": \"2020-06-01T22:34:31.308Z\", \"enabled\": false, \"role\": \"merchant-terminal\" } . ",
    "url": "/api/api-keys#operations",
    "relUrl": "/api/api-keys#operations"
  },"12": {
    "doc": "Asset Transfers",
    "title": "Asset Transfers",
    "content": "An asset transfer is an asynchronous exchange of an asset or an amount to a recipient. A recipient is an existing Centrapay user or someone who can create an account to claim the asset transfer by verifying their phone number. After an asset transfer is completed the recipientAlias, lastSentTo and message fields are scrubbed to avoid storing PII. ",
    "url": "/api/asset-transfers",
    "relUrl": "/api/asset-transfers"
  },"13": {
    "doc": "Asset Transfers",
    "title": "Contents",
    "content": ". | Asset Transfer lifecycle | Create an Asset Transfer | Get an Asset Transfer | Resolve claimable assets EXPERIMENTAL | List Asset Transfers EXPERIMENTAL | . ",
    "url": "/api/asset-transfers#contents",
    "relUrl": "/api/asset-transfers#contents"
  },"14": {
    "doc": "Asset Transfers",
    "title": "Asset Transfer lifecycle",
    "content": "Asset Transfer goes through different lifecycle stages. | State | Description | . | created | Asset transfer successfully created | . | sent | Asset transfer notification (sms, email) was sent to a new user | . | expired | Asset transfer expired as new user didn’t create his account and claimed the asset. This is very short lived state | . | returned | Asset transfer expired and was returned to original owner | . | claimed | Asset transfer was successfully completed | . ",
    "url": "/api/asset-transfers#asset-transfer-lifecycle",
    "relUrl": "/api/asset-transfers#asset-transfer-lifecycle"
  },"15": {
    "doc": "Asset Transfers",
    "title": "Create an Asset Transfer",
    "content": "Transfer an asset to a recipient. Some assets can be transfered only in whole (eg giftcards or tokens) while others can be transfered only in part (eg money). POST /api/asset-transfers Whole asset transfer . curl -X POST https://service.centrapay.com/api/asset-transfers \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"assetId\": \"YGRo6TYYSxH3js7\", \"recipientAlias\": \"+642212312\" }' . Partial asset transfer . curl -X POST https://service.centrapay.com/api/asset-transfers \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"assetId\": \"sai2Pai7ohgongo\", \"value\": \"6000\", \"recipientAlias\": \"+642212312\" }' . Required Fields . | Parameter | Type | Description | . | assetId | String | Id of a discrete asset to transfer or wallet to draw from. | . | recipientAlias | String | Phone number, email or handle of receiver. | . Optional Parameters . | Parameter | Type | Description | . | description | String | Shows up in transaction history against the transfer. 200 character limit. | . | message | String | A message which shows up in the SMS of the receiver. 100 character limit. | . | value | BigNumber | Amount to send. Required for money transfers. Units depend on the asset type. | . | senderName | String | Human readable name for the sender. 30 character limit. | . | senderAlias | String | Phone number, email or handle of sender to return asset to. See (★) note below. | . | suppressNotifications | Boolean | Suppress notifications from Centrapay (SMS/Email). | . ★ Only provide a senderAlias value if you are invoking asset transfer with api key. In case that recipient doesn’t claim asset in 2 weeks or asset was sent to an invalid Alias (wrong phone number etc) we will use senderAlias to return the asset. If asset cannot be returned to a sender it will be returned to asset owner. Example response payload . { \"id\": \"M7Kn2stAxNa6ri7h\", \"status\": \"created\", \"value\": \"1000\", \"assetId\": \"YGRo6TYYSxH3js7\", \"assetType\": \"epay.nzd.main\", \"description\": \"$60 Giftcard\", \"message\": \"Happy birthday\", \"senderName\": \"My Cafe\", \"recipientAccountId\": \"9EDxUT91TMsUjoqoQeBuLQ\", \"claimedByAccountId\": \"9EDxUT91TMsUjoqoQeBuLQ\", \"recipientAlias\": \"+64212312345\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-02T01:03:37.222Z\", \"suppressNotifications\": false } . The above example has $10 left on a $60 dollar giftcard at the time of transfer. Error Responses . | Status | Code | Description | . | 403 | INSUFFICIENT_WALLET_BALANCE | The value of the asset-transfer exceeds the balance on the wallet | . | 403 | QUOTA_EXCEEDED | The transfer exceeds one or more spend quota limits. See Quota Error Response. | . ",
    "url": "/api/asset-transfers#create-an-asset-transfer",
    "relUrl": "/api/asset-transfers#create-an-asset-transfer"
  },"16": {
    "doc": "Asset Transfers",
    "title": "Get an Asset Transfer",
    "content": "GET /api/asset-transfers/{assetTransferId} . curl https://service.centrapay.com/api/asset-transfers/M7Kn2stAxNa6ri7h \\ -H \"X-Api-Key: $api_key\" . Example response payload (In-progress money transfer) . { \"id\": \"M7Kn2stAxNa6ri7h\", \"status\": \"sent\", \"value\": \"6000\", \"assetId\": \"sai2Pai7ohgongo\", \"assetType\": \"centrapay.nzd.main\", \"message\": \"Happy birthday\", \"senderName\": \"My Cafe\", \"lastSentTo\": \"+64212312345\", \"senderAccountId\": \"aBc932S9182qwCDqwer\", \"recipientAccountId\": \"oS3Xom2au3Ooy9aihai\", \"claimedByAccountId\": \"9EDxUT91TMsUjoqoQeBuLQ\", \"recipientAlias\": \"+64212312345\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-02T01:03:37.222Z\", \"suppressNotifications\": false } . Example response payload (completed giftcard transfer) . { \"id\": \"M7Kn2stAxNa6ri7h\", \"status\": \"claimed\", \"value\": \"6000\", \"assetId\": \"YGRo6TYYSxH3js7\", \"assetType\": \"epay.nzd.main\", \"description\": \"$60 Giftcard\", \"message\": \"Happy birthday\", \"senderName\": \"My Cafe\", \"recipientAccountId\": \"9EDxUT91TMsUjoqoQeBuLQ\", \"claimedByAccountId\": \"9EDxUT91TMsUjoqoQeBuLQ\", \"recipientAlias\": \"+64******2345\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-02T01:03:37.222Z\", \"suppressNotifications\": false } . ",
    "url": "/api/asset-transfers#get-an-asset-transfer",
    "relUrl": "/api/asset-transfers#get-an-asset-transfer"
  },"17": {
    "doc": "Asset Transfers",
    "title": "Resolve claimable assets EXPERIMENTAL",
    "content": "When you send another centrapay user cash or assets, they’re automatically assigned to them. However, if they’re not signed up yet then these assets are not immediately assigned. If unclaimed, asset transfers are returned after 2 weeks. New accounts should call this endpoint to allocate assets that you’ve been sent. POST /api/me/resolve-claimable-assets . curl -X POST https://service.centrapay.com/api/me/resolve-claimable-assets \\ -H \"X-Api-Key: $api_key\" . Example response payload . { } . ",
    "url": "/api/asset-transfers#resolve-claimable-assets-experimental",
    "relUrl": "/api/asset-transfers#resolve-claimable-assets-experimental"
  },"18": {
    "doc": "Asset Transfers",
    "title": "List Asset Transfers EXPERIMENTAL",
    "content": "Returns a paginated list of Asset Transfers. GET /api/asset-transfers List asset transfers received . curl -G https://service.centrapay.com/api/asset-transfers \\ -H \"X-Api-Key: $api_key\" \\ -d recipientAccountId=oS3Xom2au3Ooy9aihai . List asset transfers sent . curl -G https://service.centrapay.com/api/asset-transfers \\ -H \"X-Api-Key: $api_key\" \\ -d senderAccountId=aBc932S9182qwCDqwer . Example response payload . { \"items\": [ { \"id\": \"M7Kn2stAxNa6ri7h\", \"status\": \"created\", \"value\": \"6000\", \"assetId\": \"YGRo6TYYSxH3js7\", \"description\": \"$60 Giftcard\", \"message\": \"Happy birthday\", \"senderName\": \"My Cafe\", \"senderAccountId\": \"aBc932S9182qwCDqwer\", \"recipientAccountId\": \"9EDxUT91TMsUjoqoQeBuLQ\", \"claimedByAccountId\": \"9EDxUT91TMsUjoqoQeBuLQ\", \"recipientAlias\": \"+64*****2345\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-02T01:03:37.222Z\", \"suppressNotifications\": false } ] } . ",
    "url": "/api/asset-transfers#list-asset-transfers-experimental",
    "relUrl": "/api/asset-transfers#list-asset-transfers-experimental"
  },"19": {
    "doc": "Asset Types",
    "title": "Supported Asset Types",
    "content": "The following table describes the Asset Types supported for payments. The Category column refers to the Centrapay asset type representation if applicable. When blank, the Asset is not managed by a Centrapay Account. | Asset Type | Description | Category | Currencies | Flags | . | bitcoin.main | Bitcoin |   | NZD, AUD |   | . | cca.coke.main | Coke tokens | Token | NZD | 🚫 | . | cca.coke.test | Coke tokens | Token | NZD | 🅃 🚫 | . | cennznet.main | CENNZnet |   | NZD |   | . | centrapay.nzd.main | Centrapay NZD wallet | Money | NZD |   | . | centrapay.nzd.test | Centrapay NZD wallet | Money | NZD | 🅃 | . | epay.nzd.main | EPay NZ giftcards | Giftcard | NZD |   | . | epay.nzd.test | EPay NZ giftcards | Giftcard | NZD | 🅃 | . | farmlands.nzd.main | Farmlands | Money | NZD | 💸 | . | farmlands.nzd.test | Farmlands | Money | NZD | 🅃💸 | . | kete.nzd.main | Kete NZD asset |   | NZD |   | . | kete.nzd.test | Kete NZD asset |   | NZD | 🅃 | . | paypal.main | PayPal |   | USD | 💸 | . | paypal.test | PayPal |   | USD | 🅃 💸 | . | pocketvouchers | Pocket Vouchers |   | NZD |   | . | quartz.nzd.main | Quartz NZD asset |   | NZD |   | . | quartz.nzd.test | Quartz NZD asset |   | NZD | 🅃 | . | test | No-op test payment (always approved) |   | NZD | 🅃 | . | venmo.main | Venmo |   | USD | 💸 | . | venmo.test | Venmo |   | USD | 🅃 💸 | . | zap.main | Zap tokens |   | NZD |   | . Flags . | 🅃 : Test Asset – Cannot be assigned to Merchants without the test flag. | 🚫 : Restricted Asset – Cannot be used to pay for “restricted” Line Items. | 💸 : Supports Quick Pay – Can be used to quick pay a Payment Request. | . ",
    "url": "/api/asset-types#supported-asset-types",
    "relUrl": "/api/asset-types#supported-asset-types"
  },"20": {
    "doc": "Asset Types",
    "title": "Asset Types",
    "content": " ",
    "url": "/api/asset-types",
    "relUrl": "/api/asset-types"
  },"21": {
    "doc": "Assets",
    "title": "Assets",
    "content": "Centrapay digital assets are resources that represent the ability for a Centrapay account to perform transactions where value is exchanged. Assets can be spent to satisfy Payment Requests, withdrawn to a bank account via Funds Transfers and sent to other Centrapay users via Asset Transfers. Assets are categorized as either Money, Gift Cards or Tokens. Depending on its asset category, an asset will have different attributes available and different rules governing how it can be obtained, shared or spent. ",
    "url": "/api/assets",
    "relUrl": "/api/assets"
  },"22": {
    "doc": "Assets",
    "title": "Contents",
    "content": ". | Models . | Asset | Money | Gift Cards | Tokens (EXPERIMENTAL) | . | Operations . | Get Asset | List Assets for Account | Listing Asset Transactions EXPERIMENTAL | Archive Asset | . | . ",
    "url": "/api/assets#contents",
    "relUrl": "/api/assets#contents"
  },"23": {
    "doc": "Assets",
    "title": "Models",
    "content": "Asset . All assets have the following fields along with the additional fields that are specific to its category. Assets which don’t have a category are considered EXPERIMENTAL and the model may change. Fields . | Field | Type | Description | . | id | String | The Asset’s unique identifier. | . | accountId | String | The Asset’s owning Centrapay Account id. | . | category | String Optional | Asset category (“money”, “giftcard”, “token”). | . | type | String | Asset Type id used by payment option asset types. | . | liveness | String | Either “main” (live payments allowed) or “test”. | . | description | String | Displayable asset description. | . | createdAt | Timestamp | Date when the asset was created or issued. | . | status | String | “active” if the asset can be used for payments. | . | meta | Object Optional | EXPERIMENTAL Additional data that may only appear in the Get Asset response. | . Money . Money assets, being backed by real currency, are the most flexible asset types. Money is accepted for most payment requests, can be sent in arbitrary amounts and does not expire. Money assets have the following fields along with the base asset fields. Fields . | Field | Type | Description | . | currency | String | Currency code, eg “NZD” | . | balance | BigNumber | Current balance in the currency’s smallest denomination (ie. cents). | . | availableBalance | BigNumber | The balance of the asset that is available for transfers or purchases. | . | settlement | Boolean Optional | EXPERIMENTAL The asset is configured for Settlements. | . Gift Cards . Gift cards are similar to money but have greater spending restrictions and are not always backed by real currency. Gift cards usually have an expiry date, are typically tied to a small number of merchants, and can only be sent in their entirety. Gift cards have the following fields along with the base asset fields. Fields . | Field | Type | Description | . | issuer | String | The identifier for the issuer of the gift card. | . | currency | String | Currency code, eg “NZD” | . | balance | BigNumber | Current balance in the currency’s smallest denomination (ie. cents). | . | availableBalance | BigNumber | The balance of the asset that is available for transfers or purchases. | . | initialBalance | BigNumber | The balance when the asset was created. | . | externalId | String Optional | The asset identifier from the issuing system. | . | expiresAt | Timestamp Optional | The date when the asset expires. | . | balanceUpdatedAt | Timestamp Optional | The date when the balance was last observed to be updated. | . | productCode | String Optional | EXPERIMENTAL The unique code which must match a merchant’s payment option for redemption. | . | img | String Optional | EXPERIMENTAL The img URL of the gift card. | . | brandName | String Optional | EXPERIMENTAL The name of the brand that the gift card belongs to. | . | brandImg | String Optional | EXPERIMENTAL The img URL of the brand that the gift card belongs to. | . | brandWebsite | String Optional | EXPERIMENTAL The URL of the brand that the gift card belongs to. | . | issuerWebsite | String Optional | EXPERIMENTAL The URL of the issuer of the gift card. | . Tokens (EXPERIMENTAL) . Tokens are assets which can be spent only once. They are usually tied to a small set of merchants and have an expiry date. Token value may be set in multiple currencies and is the same for all tokens of the same type. Tokens have the following fields along with the base asset fields. Fields . | Field | Type | Description | . | value | Array | The Monetary Amounts representing the token’s nominal value in its supported currencies. | . | validFrom | Timestamp Optional | The date when the asset becomes spendable. | . | expiresAt | Timestamp Optional | The date when the asset expires. | . ",
    "url": "/api/assets#models",
    "relUrl": "/api/assets#models"
  },"24": {
    "doc": "Assets",
    "title": "Operations",
    "content": "Get Asset . GET /api/assets/{assetId} . curl https://service.centrapay.com/api/assets/L75M3L56N2PtBSt8g7uXLU \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"L75M3L56N2PtBSt8g7uXLU\", \"accountId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"category\": \"giftcard\", \"type\": \"epay.nzd.main\", \"issuer\": \"ezipay\", \"externalId\": \"23403283262\", \"description\": \"$60 Acme Giftcard\", \"productCode\": \"23403\", \"initialBalance\": \"6000\", \"balance\": \"6000\", \"availableBalance\": \"6000\", \"balanceUpdatedAt\": \"2021-01-01T00:00:00.000Z\", \"expiresAt\": \"2020-12-31T00:00:00.000Z\", \"createdAt\": \"2020-05-01T12:30:00.000Z\" } . List Assets for Account . Returns a paginated list of Assets for an account. This will only return active assets. GET /api/accounts/{accountId}/assets . curl https://service.centrapay.com/api/accounts/Te2uDM7xhDLWGVJU3nzwnh/assets \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"items\": [ { \"id\": \"L75M3L56N2PtBSt8g7uXLU\", \"accountId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"category\": \"giftcard\", \"type\": \"epay.nzd.main\", \"issuer\": \"ezipay\", \"externalId\": \"23403283262\", \"description\": \"$60 Acme Giftcard\", \"productCode\": \"23403\", \"initialBalance\": \"6000\", \"balance\": \"6000\", \"availableBalance\": \"6000\", \"balanceUpdatedAt\": \"2021-01-01T00:00:00.000Z\", \"expiresAt\": \"2020-12-31T00:00:00.000Z\", \"createdAt\": \"2020-05-01T12:30:00.000Z\" }, { \"id\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"accountId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"category\": \"money\", \"type\": \"centrapay.nzd.main\", \"liveness\": \"main\", \"description\": \"NZD\", \"createdAt\": \"2021-01-01T00:00:00.000Z\", \"status\": \"active\", \"currency\": \"NZD\", \"balance\": \"2000\" }, { \"id\": \"Aj7rtHmd7rDeWoJgw9MPHe\", \"accountId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"type\": \"cca.coke.main\", \"description\": \"Coke™ Token\", \"category\": \"token\", \"value\": [ { \"currency\": \"NZD\", \"amount\": \"400\" } ], \"expiresAt\": \"2020-12-31T00:00:00.000Z\", \"createdAt\": \"2020-05-01T12:30:00.000Z\" } ] } . Listing Asset Transactions EXPERIMENTAL . Returns a paginated list of Asset Transactions. This endpoint is currently only supported for kete asset types. GET /api/assets/{assetId}/transactions . curl https://service.centrapay.com/api/assets/WRhAxxWpTKb5U7pXyxQjjY/transactions \\ -H \"X-Api-Key: $api_key\" . Transaction Fields . | Field | Type | Description | . | ref | String | ID of the Centrapay resource that initiated this transaction. | . | refType | String | Name of the Centrapay resource that initiated this transaction. | . | type | String | Type of the Asset Transaction. Supported values are increment-balance, decrement-balance and transfer. | . | kind | String | Human readable value indicating the reason for this transaction. | . | srcAssetId | String Optional | ID of the source asset if applicable. | . | destAssetId | String Optional | ID of the destination asset if applicable. | . | srcParty | String Optional | Display value for party providing funds if applicable. See note below. | . | destParty | String Optional | Display value for party receiving funds if applicable. See note below. | . | otherParty | String Optional | Display value for party providing or receiving funds if applicable. See note below. | . | amount | String | Amount of transaction in cents. | . | activityType | String | Indicating whether the asset gained or lost value. Supported types are value-in and value-out. | . | activityNumber | String | Unique sequential Asset transaction number. | . Party Values . The “destParty” and “srcParty” are optionally provided only on transactions of type transfer. Values may include a merchant name, user handle, masked user email, masked user phone, or bank account. The “otherParty” is optionally provided only on transactions of type increment-balance and decrement-balance. Values may include bank account number. Example response payload . { \"items\": [ { \"ref\": \"adRGJqMyMhmGfnDXasRZ\", \"type\": \"transfer\", \"kind\": \"refund\", \"refType\": \"payment-request\", \"assetId\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"srcParty\": \"Coffee Ltd\", \"destParty\": \"crn::user:5a3b1ba7-d01k-409f-ld0a-jd81k0ald\", \"createdAt\": \"2022-03-31T20:36:08.562Z\", \"createdBy\": \"crn::service:payments-api\", \"srcAssetId\": \"Jd9a89ZESjjCuUD9DJD9Al\", \"destAssetId\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"amount\": \"2000\", \"activityType\": \"value-in\", \"activityNumber\": \"3\" }, { \"ref\": \"adRGJqMyMhmGfnDXasRZ\", \"type\": \"transfer\", \"kind\": \"payment\", \"refType\": \"payment-request\", \"assetId\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"srcParty\": \"crn::user:5a3b1ba7-d01k-409f-ld0a-jd81k0ald\", \"destParty\": \"Coffee Ltd\", \"createdAt\": \"2022-03-31T20:35:54.717Z\", \"createdBy\": \"crn::service:payments-api\", \"srcAssetId\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"destAssetId\": \"Jd9a89ZESjjCuUD9DJD9Al\", \"amount\": \"3000\", \"activityType\": \"value-out\", \"activityNumber\": \"2\" }, { \"ref\": \"H4SZKwMcU9VCmnGEqDA7Mn\", \"type\": \"increment-balance\", \"kind\": \"topup\", \"refType\": \"topup\", \"assetId\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"createdAt\": \"2022-03-31T02:37:47.207Z\", \"createdBy\": \"crn::application:rhea\", \"destAssetId\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"amount\": \"7600\", \"activityType\": \"value-in\", \"activityNumber\": \"1\" } ] } . Archive Asset . Archive supported asset types by asset id. Currently only gift cards may be archived. POST /api/assets/{assetId}/archive . curl -X POST https://service.centrapay.com/api/assets/L75M3L56N2PtBSt8g7uXLU/archive \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"L75M3L56N2PtBSt8g7uXLU\", \"accountId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"category\": \"giftcard\", \"type\": \"epay.nzd.main\", \"issuer\": \"ezipay\", \"externalId\": \"23403283262\", \"description\": \"$60 Acme Giftcard\", \"initialBalance\": \"6000\", \"balance\": \"0\", \"balanceUpdatedAt\": \"2021-01-01T00:00:00.000Z\", \"expiresAt\": \"2020-12-31T00:00:00.000Z\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"status\": \"archived\" } . Error Responses . | Status | Code | Description | . | 403 | UNSUPPORTED_ASSET_TYPE | Asset type can not be archived | . ",
    "url": "/api/assets#operations",
    "relUrl": "/api/assets#operations"
  },"25": {
    "doc": "Auth",
    "title": "Auth",
    "content": " ",
    "url": "/api/auth",
    "relUrl": "/api/auth"
  },"26": {
    "doc": "Auth",
    "title": "Contents",
    "content": ". | Authenticating API Calls | API Keys | User Access Tokens . | Claims | . | Roles and Permissions . | Account Flags | Permissions | . | . ",
    "url": "/api/auth#contents",
    "relUrl": "/api/auth#contents"
  },"27": {
    "doc": "Auth",
    "title": "Authenticating API Calls",
    "content": "API calls can be authenticated by either providing an API key in the “X-Api-Key” header or by providing a user access token in the “Authorization” header. Authenticate with API key . curl https://service.centrapay.com/api/account-memberships \\ -H \"X-Api-Key: $api_key\" . Authenticate with user access token . curl https://service.centrapay.com/api/account-memberships \\ -H \"Authorization: $jwt\" . ",
    "url": "/api/auth#authenticating-api-calls",
    "relUrl": "/api/auth#authenticating-api-calls"
  },"28": {
    "doc": "Auth",
    "title": "API Keys",
    "content": "API Keys provide enduring access to a single Centrapay account. The Centrapay test merchant API key is available to test creating payment requests: f32c5497297084e5354b47c40d5ccacb109ce483. ",
    "url": "/api/auth#api-keys",
    "relUrl": "/api/auth#api-keys"
  },"29": {
    "doc": "Auth",
    "title": "User Access Tokens",
    "content": "User access tokens provide time-limited access to all Centrapay accounts for which the user is a member. Access tokens are issued using OIDC code flow via the Centrapay OAuth authorization server and login page at auth.centrapay.com. After successfully negotiating the OIDC code flow your application will have access to three tokens: . | Id Token | JWT containing user attributes such as id, phone and email. | . | Access Token | JWT granting access to Centrapay APIs. Expires after 1 hour. | . | Refresh Token | Token for OIDC token exchange. Expires after 60 days or when revoked. | . A good starting point for learning more about OIDC is Okta’s OAuth OIDC Illustrated Guide. When initiating a login request, a valid redirect URI must be provided. To obtain a dedicated OAuth client id with your application’s redirect URI(s) whitelisted please contact Centrapay support. Your callback URI can be for a website (such as “https://yourapp.example.com/oidc-callback”) or mobile app (such as “com.example.yourapp://oidc-callback”). Your application can use any OIDC client to negotiate the authentication flow but it must support OIDC authorization code flow with PKCE. See the Example OIDC Consumer guide for a working example using the “oidc-client” JavaScript library. The Centrapay authorization server configuration can be interrogated via https://auth.centrapay.com/.well-known/openid-configuration. When handling the OIDC callback, browser based applications should slurp the callback parameters by performing a location.replace() so they are not available in the browser’s location bar or browsing history. If your application needs to talk directly to service.centrapay.com from a browser then it will also need to be whitelisted for cross-origin requests. Claims . The following table lists the claims which may be be included in a user id token. At minimum, the “sub” claim and one of “phone_number” or “email” will be present. | Name | Description | . | sub | Centrapay user id | . | email | email address | . | phone_number | phone number | . | given_name | given name(s) | . | family_name | surname | . | preferred_username | Centrapay user handle | . | phone_number_verified | phone number has been verified (can be used for account recovery) | . | email_verified | email has been verified (can be used for account recovery) | . ",
    "url": "/api/auth#user-access-tokens",
    "relUrl": "/api/auth#user-access-tokens"
  },"30": {
    "doc": "Auth",
    "title": "Roles and Permissions",
    "content": "Users and API keys are assigned a role for their associated Centrapay account(s). The permissions granted to the roles are shown in the table below. Most permissions apply only to resources owned by the associated account. Some permissions, such as payment-requests:pay, apply globally to all resources regardless of the account the resource belongs to. The global permissions are indicated below with a star (✸). Account Flags . Some permissions require an additional flag associated to their individual account or the targeted account that owns the resource (they may be the same account). For each permission, if there is a flag associated to it then at least one of them must be met. | Symbol | Description | . | 👤 | A trusted user flag on the individual account, obtained by verifying a NZ phone number. | . | 🧀 | An external-asset-issuer subscription on the targeted Account, obtained by contacting centrapay. | . | 🗄 | The targeted account must be of type org. | . Permissions . | Permission | Account Owner | Anon Consumer | Merchant Terminal | External Asset Provider | . | accounts:create | ✅ |   |   |   | . | accounts:read | ✅ |   |   | ✅ | . | accounts:update | ✅ |   |   |   | . | api-keys:create | ✅ |   |   |   | . | api-keys:list | ✅ |   |   |   | . | api-keys:update | ✅ |   |   |   | . | asset-transfers:claim | ✅ |   |   | ✅ | . | asset-transfers:create 👤 🧀 | ✅ |   |   | ✅ | . | asset-transfers:read | ✅ |   |   | ✅ | . | assets:read | ✅ |   |   | ✅ | . | assets:spend 👤 | ✅ |   |   |   | . | bank-account-approvals:create | ✅ |   |   |   | . | bank-account-requests:authorize | ✅ |   |   |   | . | bank-account-requests:create | ✅ |   |   |   | . | bank-accounts:create | ✅ |   |   |   | . | bank-accounts:read | ✅ |   |   |   | . | business:create | ✅ |   |   |   | . | business:read | ✅ |   |   |   | . | external-assets:create 👤 🧀 | ✅ |   |   | ✅ | . | external-assets:update | ✅ |   |   | ✅ | . | integration-requests:configure |   |   |   |   | . | integration-requests:create 🗄 | ✅ |   |   |   | . | integration-requests:read 🗄 | ✅ |   |   |   | . | invitations:accept | ✸ ✅ |   |   |   | . | invitations:read | ✸ ✅ |   |   |   | . | media-uploads:create | ✅ |   |   |   | . | merchants:create 🗄 | ✅ |   |   |   | . | merchants:list 🗄 | ✅ |   |   |   | . | merchants:read 🗄 | ✅ |   |   |   | . | merchants:update 🗄 | ✅ |   |   |   | . | patron-codes:create | ✅ |   |   |   | . | patron-codes:read | ✅ |   | ✅ |   | . | payment-activities:read | ✅ |   |   |   | . | payment-conditions:approve | ✅ |   | ✅ |   | . | payment-requests:cancel 🗄 | ✅ |   | ✅ |   | . | payment-requests:create 🗄 | ✅ |   | ✅ |   | . | payment-requests:pay 🗄 | ✸ ✅ | ✸ ✅ | ✅ |   | . | payment-requests:read | ✸ ✅ | ✸ ✅ | ✸ ✅ |   | . | payment-requests:read-by-shortcode | ✅ |   | ✅ |   | . | payment-requests:refund 🗄 | ✅ |   | ✅ |   | . | payment-requests:void 🗄 | ✅ |   | ✅ |   | . | quotas:read | ✅ |   |   |   | . | quotas:read | ✅ |   |   |   | . | topups:create 👤 | ✅ |   |   |   | . | topups:read | ✅ |   |   |   | . | wallets:create | ✅ |   |   |   | . | wallets:deposit | ✅ |   |   |   | . | wallets:read | ✅ |   |   |   | . | wallets:transfer 👤 | ✅ |   |   |   | . | wallets:withdraw | ✅ |   |   |   | . ",
    "url": "/api/auth#roles-and-permissions",
    "relUrl": "/api/auth#roles-and-permissions"
  },"31": {
    "doc": "Bank Account Approvals",
    "title": "Bank Account Approvals",
    "content": "An approved Bank Account Approval is required for the funds in a Settlement Wallet to be released. A Media Upload is uploaded by the user to provide evidence of ownership of the Bank Account to be approved. ",
    "url": "/api/bank-account-approvals",
    "relUrl": "/api/bank-account-approvals"
  },"32": {
    "doc": "Bank Account Approvals",
    "title": "Contents",
    "content": ". | Models . | Bank Account Approval | Bank Account Approval Activity | . | Operations . | Request Bank Account Approval EXPERIMENTAL | Get Bank Account Approval EXPERIMENTAL | Accept a Bank Account Approval EXPERIMENTAL | Decline a Bank Account Approval EXPERIMENTAL | . | . ",
    "url": "/api/bank-account-approvals#contents",
    "relUrl": "/api/bank-account-approvals#contents"
  },"33": {
    "doc": "Bank Account Approvals",
    "title": "Models",
    "content": "Bank Account Approval . Mandatory Fields . | Field | Type | Description | . | id | String | The Bank Account Approval’s unique identifier. | . | bankAccountId | String | The id of the associated Bank Account. | . | mediaUploadId | String | The id of the associated Media Upload. | . | accountId | String | The id of the owning Centrapay Account. | . | type | String | The type of Bank Account Approval. | . | status | String | The current status of the Bank Account Approval. Supported values are created, pending, approved, declined and done. | . | createdAt | Timestamp | When the Bank Account Approval was created. | . | createdBy | CRN | The User or API Key that created the Bank Account Approval. | . | modifiedAt | Timestamp | When the Bank Account Approval was updated. | . | modifiedBy | CRN | The User or API Key that updated the Bank Account Approval. | . | approvalActivities | Array | An array of Bank Account Approval Activity associated with the Bank Account Approval. | . Bank Account Approval Activity . Mandatory Fields . | Field | Type | Description | . | activityNumber | Number | Unique sequential Bank Account Approval Activity number. | . | approvalId | String | The id of the associated Bank Account Approval. | . | activityType | String | The type of the Bank Account Approval Activity. | . | createdAt | Timestamp | When the Bank Account Approval Activity was created. | . | createdBy | CRN | The User or API Key that created the Bank Account Approval Activity. | . ",
    "url": "/api/bank-account-approvals#models",
    "relUrl": "/api/bank-account-approvals#models"
  },"34": {
    "doc": "Bank Account Approvals",
    "title": "Operations",
    "content": "Request Bank Account Approval EXPERIMENTAL . POST /api/bank-account-approvals . curl -X POST https://service.centrapay.com/api/bank-account-approvals \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"mediaUploadId\": \"uooxSens6ykJaim1Cu1Q55\", \"bankAccountId\": \"WRhAxxWpTKb5U7pXyxQjjY\" }' . Required Fields . | Field | Type | Description | . | mediaUploadId | String | The id of the associated Media Upload. | . | bankAccountId | String | The id of the associated Bank Account. | . Example response payload . { \"id\": \"DcTs3U38HdhfEqwF1GKoT3\", \"mediaUploadId\": \"uooxSens6ykJaim1Cu1Q55\", \"bankAccountId\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"type\": \"settlement\", \"status\": \"created\", \"createdAt\": \"2021-11-08T21:52:39.915Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"modifiedAt\": \"2021-11-08T21:52:39.915Z\", \"modifiedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" } . Get Bank Account Approval EXPERIMENTAL . POST /api/bank-account-approvals/{bankAccountApprovalId} . curl -X POST https://service.centrapay.com/api/bank-account-approvals/DcTs3U38HdhfEqwF1GKoT3 \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"DcTs3U38HdhfEqwF1GKoT3\", \"mediaUploadId\": \"uooxSens6ykJaim1Cu1Q55\", \"bankAccountId\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"type\": \"settlement\", \"status\": \"pending\", \"createdAt\": \"2021-11-08T21:52:39.915Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"modifiedAt\": \"2021-11-08T21:52:39.915Z\", \"modifiedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" } . Accept a Bank Account Approval EXPERIMENTAL . POST /api/bank-account-approvals/{bankAccountApprovalId}/accept . curl -X POST https://service.centrapay.com/api/bank-account-approvals/DcTs3U38HdhfEqwF1GKoT3/accept \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"reason\": \"All details match\" }' . Optional Fields . | Field | Type | Description | . | reason | String | The reason for accepting the Bank Account Approval. | . Example response payload . { } . Error Responses . | Status | Code | Description | . | 403 | APPROVAL_ALREADY_REVIEWED | The Bank Account Approval has already been accepted or declined. | . Decline a Bank Account Approval EXPERIMENTAL . POST /api/bank-account-approvals/{bankAccountApprovalId}/decline . curl -X POST https://service.centrapay.com/api/bank-account-approvals/DcTs3U38HdhfEqwF1GKoT3/decline \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"reason\": \"All details match\" }' . Required Fields . | Field | Type | Description | . | reason | String | The reason for declining the Bank Account Approval. | . Example response payload . { } . Error Responses . | Status | Code | Description | . | 403 | APPROVAL_ALREADY_REVIEWED | The Bank Account Approval has already been accepted or declined. | . ",
    "url": "/api/bank-account-approvals#operations",
    "relUrl": "/api/bank-account-approvals#operations"
  },"35": {
    "doc": "Bank Account Requests",
    "title": "Bank Account Requests",
    "content": "Bank Account Requests facilitate user authorization of access to bank accounts. Typically the authorization will follow an OAuth flow where the user is redirected to a third-party system to authenticate and select one or more bank accounts. After a bank account request has been completed, one or more Centrapay Bank Account resources may be created and long-lived access tokens may be stored against those Bank Accounts. ",
    "url": "/api/bank-account-requests",
    "relUrl": "/api/bank-account-requests"
  },"36": {
    "doc": "Bank Account Requests",
    "title": "Contents",
    "content": ". | Models . | Bank Account Request | Bank Account Request Types | . | Operations . | Create Bank Account Request EXPERIMENTAL | Authorize Bank Account Request EXPERIMENTAL | . | . ",
    "url": "/api/bank-account-requests#contents",
    "relUrl": "/api/bank-account-requests#contents"
  },"37": {
    "doc": "Bank Account Requests",
    "title": "Models",
    "content": "Bank Account Request . Fields . | Field | Type | Description | . | id | String | The Bank Account Request’s unique identifier. | . | accountId | String | The id of the owning Centrapay Account. | . | type | String | The type of Bank Account Request. See Bank Account Request Types. | . | status | String | The current status of the Bank Account Request. Supported values are created, failed and done. | . | createdAt | Timestamp | When the Bank Account Request was created. | . | createdBy | CRN | The User or API Key that created the Bank Account Request. | . | updatedAt | Timestamp | When the Bank Account Request was updated. | . | updatedBy | CRN | The User or API Key that updated the Bank Account Request. | . | authorizationUrl | String | A URL to the third-party beginning the authorization flow. | . Bank Account Request Types . | Name | description | . | quartz-details | Request will initiate an authorization flow for authorizing access to account details. | . | quartz-payment | Request will initiate an authorization flow for authorizing access to create payments. | . ",
    "url": "/api/bank-account-requests#models",
    "relUrl": "/api/bank-account-requests#models"
  },"38": {
    "doc": "Bank Account Requests",
    "title": "Operations",
    "content": "Create Bank Account Request EXPERIMENTAL . POST /api/bank-account-requests . curl -X POST https://service.centrapay.com/api/bank-account-requests \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"accountId\": \"uooxSens6ykJaim1Cu1Q55\", \"type\": \"quartz-details\" }' . Fields . | Field | Type | Description | . | accountId | String | The id of the owning Account. | . | type | String | The type of Bank Account Request. | . | bankAccountId | String Optional | The id of the associated Bank Account. Required if type is quartz-payment. | . Example response payload . { \"id\": \"3KVjuKW2CZCJeJVqPxwkX7\", \"accountId\": \"B4u4WZCu3joZFVWT3XjWW3\", \"type\": \"quartz-details\", \"status\": \"created\", \"createdAt\": \"2022-03-31 02:56:29 UTC\", \"createdBy\": \"crn:B4u4WZCu3joZFVWT3XjWW3:api-key:MyApiKey\", \"updatedAt\": \"2022-03-31 02:56:29 UTC\", \"updatedBy\": \"crn:B4u4WZCu3joZFVWT3XjWW3:api-key:MyApiKey\", \"authorizationUrl\": \"https://example.com/authorization-url\" } . Authorize Bank Account Request EXPERIMENTAL . POST /api/bank-account-requests/{bankAccountRequestId}/authorize . curl -X POST https://service.centrapay.com/api/bank-account-requests/3KVjuKW2CZCJeJVqPxwkX7/authorize \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"code\": \"hKpKupTM391pE10xfQiorMxXarRKAHRhTfH_x\" }' . Fields . | Field | Type | Description | . | code | String | Authorization code returned from third-party. | . Example response payload . { } . ",
    "url": "/api/bank-account-requests#operations",
    "relUrl": "/api/bank-account-requests#operations"
  },"39": {
    "doc": "Bank Accounts",
    "title": "Bank Accounts",
    "content": "Bank Accounts are used to get money in and out of a Centrapay Account. Money is moved by creating “Top Up” or “Withdrawal” Funds Transfers. Bank Accounts must be “direct debit authorized” before they can be used for a Top Up and they must be “verified” before top up funds are released. Bank Accounts do not require “direct debit authorization” or “verification” in order to perform a Withdrawal. A 4-digit code from any recent Centrapay-initiated bank transaction can be used to verify a bank account. ",
    "url": "/api/bank-accounts",
    "relUrl": "/api/bank-accounts"
  },"40": {
    "doc": "Bank Accounts",
    "title": "Contents",
    "content": ". | Models . | Bank Account | Bank Account Approval Type Summary EXPERIMENTAL | Bank Account Type EXPERIMENTAL | . | Operations . | Creating a Bank Account | Adding a direct debit authority to a Bank Account | Get information about a Bank Account | Verify a Bank Account | Verify a Bank Authority DEPRECATED | List Bank Accounts | List Bank Authorities DEPRECATED | Creating a Bank Authority DEPRECATED | Get information about a Bank Authority DEPRECATED | . | . ",
    "url": "/api/bank-accounts#contents",
    "relUrl": "/api/bank-accounts#contents"
  },"41": {
    "doc": "Bank Accounts",
    "title": "Models",
    "content": "Bank Account . Mandatory Fields . | Field | Type | Description | . | id | String | The Bank Account’s unique identifier. | . | bankAccountNumber | String | The user’s Bank Account number. | . | bankAccountName | String | The name on the Bank Account provided by the user. | . | accountId | String | The id of the owning Centrapay Account. | . | status | String | The current status of the Bank Account. | . | verified | Boolean | Flag indicating the Bank Account is verified, allowing it to be used to Top Up. | . | type | String | The Bank Account Type of the bank, defaults to centrapay. | . | directDebitAuthorized | Boolean | Flag indicating the user accepts our Direct Debit terms and has authority to operate this account. | . | approvals | Array | A list of Bank Account Approval Type Summaries. | . | createdAt | Timestamp | When the Bank Account was created. | . | createdBy | CRN | The User or API Key that created the Bank Account. | . | modifiedAt | Timestamp | When the Bank Account was updated. | . | modifiedBy | CRN | The User or API Key that updated the Bank Account. | . Optional Fields . | Field | Type | Description | . | phoneNumber | String | The user’s phone number. | . | fullName | String | The first and last name of the user. | . | emailAddress | String | The user’s email address. | . | test | Boolean | A flag which is present if the Bank Account is for testing. | . | assetId | String | The id of an Asset which is associated to the bank account. | . Bank Account Approval Type Summary EXPERIMENTAL . A summary of the Bank Account Approvals for a Bank Account. There is one object per type of Bank Account Approval, which provides a summary of the approval status. Fields . | Name | Type | Description | . | type | String | The type of Bank Account Approval summary. | . | status | String | The summarized status of the Bank Account Approvals. Supported values are pending, approved and declined. | . | updatedAt | Timestamp | When the Bank Account Approval summary was updated. | . Bank Account Type EXPERIMENTAL . Types of bank accounts to allow access to different Asset Types. | type | description | . | centrapay | Allows topup and withdrawal of the centrapay.nzd asset type. | . | kete | Allows topup and withdrawal of the kete.nzd asset type. | . | quartz | Allows usage of the quartz.nzd asset type. | . ",
    "url": "/api/bank-accounts#models",
    "relUrl": "/api/bank-accounts#models"
  },"42": {
    "doc": "Bank Accounts",
    "title": "Operations",
    "content": ". Creating a Bank Account . A Bank Account can be created with or without direct debit authorized. By including directDebitAuthority, the user accepts our Direct Debit terms and has authority to operate this account. POST /api/bank-accounts Create without direct debit authorized . curl -X POST https://service.centrapay.com/api/bank-accounts \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"bankAccountNumber\": \"12-1234-1234567-123\", \"bankAccountName\": \"John Doe\" }' . Create with direct debit authorized . curl -X POST https://service.centrapay.com/api/bank-accounts \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"bankAccountNumber\": \"12-1234-1234567-123\", \"bankAccountName\": \"John Doe\", \"directDebitAuthority\": { \"phoneNumber\": \"+64212345678\", \"fullName\": \"John Doe\", \"emailAddress\": \"john.doe@gmail.com\" } }' . Required Fields . | Field | Type | Description | . | accountId | String | The id of the owning Centrapay Account. | . | bankAccountNumber | String | The user’s Bank Account number. | . | bankAccountName | String | The name on the Bank Account provided by the user. | . Optional Fields . Note, fields which have a star (✩) create a direct-debit authority and are required for Top Up. All fields below when specified are required together. | Field | Type | Description | . | phoneNumber | String | ✩ The user’s phone number. | . | fullName | String | ✩ The first and last name of the user. | . | emailAddress | String | ✩ The user’s email address. | . | type | String | The Bank Account Type to be created. | . | test | Boolean | A flag which is present if the Bank Account is for testing. | . Example response payload . { \"id\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"bankAccountNumber\": \"12-1234-1234567-123\", \"bankAccountName\": \"John Doe\", \"directDebitAuthorized\": true, \"status\": \"created\", \"verified\": false, \"type\": \"centrapay\", \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"modifiedAt\": \"2020-06-12T01:17:46.499Z\", \"modifiedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"approvals\": [ ] } . Error Responses . | Status | Code | Description | . | 403 | BANK_ACCOUNT_LIMIT_EXCEEDED | The Centrapay account already has the max amount of Bank Accounts. | . | 403 | BANK_ACCOUNT_HOLDER_LIMIT_EXCEEDED | The global maximum Bank Accounts for the provided Bank Account number has been reached. | . | 403 | DUPLICATE_BANK_ACCOUNT | The Centrapay account already holds this Bank Account. | . Adding a direct debit authority to a Bank Account . By using this endpoint, the user accepts our Direct Debit terms and has authority to operate this account. POST /api/bank-accounts/{bankAccountId}/direct-debit-authorities . curl -X POST https://service.centrapay.com/api/bank-accounts/WRhAxxWpTKb5U7pXyxQjjY/direct-debit-authorities \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"phoneNumber\": \"+64212345678\", \"fullName\": \"John Doe\", \"emailAddress\": \"john@doe.org\" }' . Example response payload . { \"id\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"bankAccountNumber\": \"12-1234-1234567-123\", \"bankAccountName\": \"John Doe\", \"directDebitAuthorized\": true, \"status\": \"created\", \"verified\": false, \"type\": \"centrapay\", \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"modifiedAt\": \"2020-06-12T01:17:46.499Z\", \"modifiedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"approvals\": [ ] } . Required Fields . Note, fields which have a star (✩) are required for Top Up. All fields below when specified are required together. | Field | Type | Description | . | phoneNumber | String | ✩ The user’s phone number. | . | fullName | String | ✩ The first and last name of the user. | . | emailAddress | String | ✩ The user’s email address. | . Error Responses . | Status | Code | Description | . | 403 | DIRECT_DEBIT_ALREADY_AUTHORIZED | This bank authority cannot be changed as all fields have been set. | . Get information about a Bank Account . GET /api/bank-accounts/{bankAccountId} . curl https://service.centrapay.com/api/bank-accounts/WRhAxxWpTKb5U7pXyxQjjY \\ -H \"X-Api-Key: $api_key\" . Verify a Bank Account . Verification codes show up on statements when a user makes withdrawals and deposits. To verify an account, you need to direct the user to make a Top Up or Withdrawal and then check their statement. POST /api/bank-accounts/{bankAccountId}/verify . curl -X POST https://service.centrapay.com/api/bank-accounts/WRhAxxWpTKb5U7pXyxQjjY/verify \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"verificationCode\": \"1111\" }' . Required Fields . | Field | Type | Description | . | verificationCode | String | The code on the user’s bank statement. | . Example response payload . { \"verificationCode\": \"1111\" } . Error Responses . | Status | Code | Description | . | 403 | BANK_ACCOUNT_ALREADY_VERIFIED | The bank account is already verified. | . | 403 | VERIFICATION_CODE_INVALID | The verification code is incorrect. | . | 403 | BANK_ACCOUNT_VERIFICATION_ATTEMPTS_EXCEEDED | The bank account’s maximum failed verification attempts has been reached. | . | 403 | ACCOUNT_MISMATCH | The top up / withdrawal and the bank account do not belong to the same account. | . Verify a Bank Authority DEPRECATED . If you’re creating new interfaces, please work with our verify endpoint for Bank Accounts. POST /api/bank-authorities/{bankAccountId}/verify . curl -X POST https://service.centrapay.com/api/bank-authorities/WRhAxxWpTKb5U7pXyxQjjY/verify \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"verificationCode\": \"1111\" }' . Required Fields . | Field | Type | Description | . | verificationCode | String | The code on the user’s bank statement | . Example response payload . { \"verificationCode\": \"1111\" } . Example response payload . { \"id\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"bankAccountNumber\": \"12-1234-1234567-123\", \"bankAccountName\": \"John Doe\", \"status\": \"created\", \"directDebitAuthorized\": true, \"verified\": false, \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"modifiedAt\": \"2020-06-12T01:17:46.499Z\", \"modifiedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"approvals\": [ ] } . List Bank Accounts . GET /api/accounts/{accountId}/bank-accounts . curl https://service.centrapay.com/api/accounts/Jaim1Cu1Q55uooxSens6yk/bank-accounts \\ -H \"X-Api-Key: $api_key\" . Example response payload . [ { \"id\": \"XZbPLViMzekVBbF7QMqgaY\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"status\": \"created\", \"bankAccountNumber\": \"02-0500-0568903-097\", \"bankAccountName\": \"Pocket Money\", \"directDebitAuthorized\": false, \"bankRegion\": \"nz\", \"createdBy\": \"crn::user:57142ecc-e5e4-456a-8312-1fad4fdef3c7\", \"createdAt\": \"2022-04-19T05:43:40.425Z\", \"verified\": false, \"modifiedBy\": \"crn::user:57142ecc-e5e4-456a-8312-1fad4fdef3c7\", \"modifiedAt\": \"2022-04-19T05:43:40.425Z\", \"approvals\": [ ], \"type\": \"quartz\", \"test\": true, \"assetId\": \"FXh3dRhxo8JmBkMHc5qcNa\" }, { \"id\": \"3Kfdm8cuW1W6f8AoWJREs4\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"status\": \"created\", \"bankAccountNumber\": \"00-1213-1231299-999\", \"bankAccountName\": \"Jean\", \"directDebitAuthorized\": false, \"bankRegion\": \"nz\", \"createdBy\": \"crn::user:57142ecc-e5e4-456a-8312-1fad4fdef3c7\", \"createdAt\": \"2022-02-22T03:27:57.138Z\", \"verified\": false, \"modifiedBy\": \"crn::user:57142ecc-e5e4-456a-8312-1fad4fdef3c7\", \"modifiedAt\": \"2022-02-22T03:27:57.138Z\", \"approvals\": [ { \"type\": \"settlement\", \"status\": \"pending\", \"updatedAt\": \"2021-11-08T21:52:39.915Z\" } ], \"type\": \"centrapay\" } ] . List Bank Authorities DEPRECATED . If you’re creating new interfaces, please work with our list endpoint for Bank Accounts. GET /api/bank-authorities . curl https://service.centrapay.com/api/bank-authorities \\ -H \"X-Api-Key: $api_key\" . Example response payload . [ { \"id\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"bankAccountNumber\": \"12-1234-1234567-123\", \"bankAccountName\": \"John Doe\", \"status\": \"created\", \"verified\": false, \"directDebitAuthorized\": true, \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"approvals\": [ ] }, { \"id\": \"b5URhAxxWpTKyxQjjY7pXW\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"bankAccountNumber\": \"12-1234-1234567-123\", \"bankAccountName\": \"Jane Doe\", \"status\": \"active\", \"verified\": true, \"directDebitAuthorized\": true, \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"approvals\": [ { \"type\": \"settlement\", \"status\": \"pending\", \"updatedAt\": \"2021-11-08T21:52:39.915Z\" } ] } ] . Creating a Bank Authority DEPRECATED . If you’re creating new interfaces, please work with our create endpoint for Bank Accounts. Creating a Bank Authority both creates a new Bank Account and a direct debit authority. By using this endpoint, the user accepts our Direct Debit terms and has authority to operate this account. POST /api/bank-authorities . curl -X POST https://service.centrapay.com/api/bank-authorities \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"fullName\": \"John Doe\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"phoneNumber\": \"+64212345\", \"directDebitAuthorized\": true, \"emailAddress\": \"John.doe@email.com\", \"bankAccountNumber\": \"12-1234-1234567-123\", \"bankAccountName\": \"John Doe\" }' . Required Fields . | Field | Type | Description | . | accountId | String | The id of the owning Centrapay Account. | . | fullName | String | The first and last name of the user | . | phoneNumber | String | The user’s phone number | . | emailAddress | String | The user’s email address | . | bankAccountNumber | String | The user’s bank account number | . | bankAccountName | String | The name on the bank account provided by the user | . Example response payload . { \"id\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"bankAccountNumber\": \"12-1234-1234567-123\", \"bankAccountName\": \"John Doe\", \"status\": \"created\", \"verified\": false, \"directDebitAuthorized\": true, \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"modifiedAt\": \"2020-06-12T01:17:46.499Z\", \"modifiedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"approvals\": [ ] } . Error Responses . | Status | Code | Description | . | 403 | BANK_AUTHORITY_LIMIT_EXCEEDED | The account already has the max amount of bank accounts. | . | 403 | BANK_AUTHORITIES_FOR_BANK_ACCOUNT_EXCEEDED | There are already two bank accounts for the provided bank account number, which is the maximum allowed. | . Get information about a Bank Authority DEPRECATED . If you’re creating new interfaces, please work with our get endpoint for Bank Accounts. GET /api/bank-authorities/{bankAccountId} . curl https://service.centrapay.com/api/bank-authorities/WRhAxxWpTKb5U7pXyxQjjY \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"bankAccountNumber\": \"12-1234-1234567-123\", \"bankAccountName\": \"John Doe\", \"status\": \"created\", \"directDebitAuthorized\": true, \"verified\": false, \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"modifiedAt\": \"2020-06-12T01:17:46.499Z\", \"modifiedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"approvals\": [ ] } . ",
    "url": "/api/bank-accounts#operations",
    "relUrl": "/api/bank-accounts#operations"
  },"43": {
    "doc": "Batches",
    "title": "Batches",
    "content": "Batches enable bulk loading of resource onto the Centrapay platform. ",
    "url": "/api/batches",
    "relUrl": "/api/batches"
  },"44": {
    "doc": "Batches",
    "title": "Contents",
    "content": ". | Models . | Batch | Batch Lifecycle | Batch Types | Error | . | Operations . | Create Batch EXPERIMENTAL | Get Batch EXPERIMENTAL | . | . ",
    "url": "/api/batches#contents",
    "relUrl": "/api/batches#contents"
  },"45": {
    "doc": "Batches",
    "title": "Models",
    "content": ". Batch . The batch model represents the progression for loading of a file. Fields . | Field | Type | Description | . | id | String | The Batch’s unique identifier. | . | status | String | The current Lifecycle Stage of the batch. | . | type | String | Batch Type id used to describe the batch content. | . | totalCount | BigNumber | The number of items processed. | . | errorCount | BigNumber | Total Error counted. | . | errors | Array | Error list for the batch. | . | test | Boolean Optional | true if the batch is for testing purposes only. | . Batch Lifecycle . Different stages of a Batch’s lifecycle. | Status | Description | . | created | The batch has successfully been submitted. | . | copied | The file has been transferred to Centrapay. | . | chunked | The batch has been broken up for processing. | . | complete | The batch has been processed and may include errors. | . | error | There is an error accessing or reading the file, preventing processing. | . Batch Types . The following table describes the Batch Types supported for loading. | Type | Description | . | farmlands-external-asset | Farmlands External Asset Batch. | . | verifone-terminal-status | Verifone Terminal Status Batch. | . Error . An Error represents the complete or partial failure of the batch. This could be caused by the contents, access or file format. Fields . | Field | Type | Description | . | message | String | A description of what caused the Error. | . | externalId | String Optional | Field used in debugging in reference to an id from the file. | . | index | BigNumber Optional | Item offset where the Error was identified in the file. | . ",
    "url": "/api/batches#models",
    "relUrl": "/api/batches#models"
  },"46": {
    "doc": "Batches",
    "title": "Operations",
    "content": "Create Batch EXPERIMENTAL . Initialize loading of entities from a batch file. POST /api/batches . curl -X POST https://service.centrapay.com/api/batches \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"type\": \"farmlands-external-asset\", \"url\": \"https://azurebuckets.com/1234\", \"accountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"test\": true }' . Fields . | Field | Type | Description | . | type | String | Batch Type used to describe the batch content. | . | url | String | The url where the file is located. | . | accountId | String | Centrapay Account Id that submitted the Batch. | . | test | Boolean Optional | true if the batch is for testing purposes only. | . Example Response Payload . { \"id\": \"AVH5uG4gRLYK6YR8JyrViN\", \"accountId\": \"1mdj7bj95gjo92r0ux6wfy69gj3h77\", \"status\": \"created\", \"type\": \"farmlands-external-asset\", \"url\": \"https://azurebuckets.com/1234\", \"test\": true, \"count\": \"0\", \"errorCount\": \"0\", \"errors\": [ ] } . Get Batch EXPERIMENTAL . GET /api/batches/{id} . curl https://service.centrapay.com/api/batches/AVH5uG4gRLYK6YR8JyrViN \\ -H \"X-Api-Key: $api_key\" . Example Response Payload . { \"id\": \"AVH5uG4gRLYK6YR8JyrViN\", \"accountId\": \"1mdj7bj95gjo92r0ux6wfy69gj3h77\", \"status\": \"complete\", \"type\": \"farmlands-external-asset\", \"url\": \"https://azurebuckets.com/1234\", \"test\": true, \"count\": \"160000\", \"errorCount\": \"1\", \"errors\": [ { \"externalId\": \"69d64d80-f9bd-4057-bc5b-1c55685d995b\", \"index\": \"1954\", \"message\": \"INVALID_BARCODE_LENGTH\" } ] } . ",
    "url": "/api/batches#operations",
    "relUrl": "/api/batches#operations"
  },"47": {
    "doc": "Businesses",
    "title": "Businesses",
    "content": "A Business represents a company registered with the New Zealand Companies Office. A Business is associated with a single Account. ",
    "url": "/api/businesses",
    "relUrl": "/api/businesses"
  },"48": {
    "doc": "Businesses",
    "title": "Contents",
    "content": ". | Models . | Business | . | Operations . | Create a Business EXPERIMENTAL | Get a Business by Account id EXPERIMENTAL | Search NZ Company Register EXPERIMENTAL | Get Business Details from NZ Company Register EXPERIMENTAL | . | . ",
    "url": "/api/businesses#contents",
    "relUrl": "/api/businesses#contents"
  },"49": {
    "doc": "Businesses",
    "title": "Models",
    "content": "Business . | Field | Type | Description | . | id | String | The unique identifier. | . | accountId | String | The Centrapay accountId for an org account. | . | accountName | String | The Centrapay account name for an org account. | . | test | Boolean | A flag which is present if the Account is test | . | nzbn | String | The unique NZBN identifier. | . | name | String | Legal name recorded in the Companies Register. | . | tradingName | String | Trading name recorded in the Companies Register. | . | companyNumber | String | Company number recorded in the Companies Register. | . | createdAt | Timestamp | When the Business was created. | . | updatedAt | Timestamp | When the Business was updated. | . | createdBy | CRN | The User or API Key that created the Business. | . | updatedBy | CRN | The User or API Key that updated the Business. | . ",
    "url": "/api/businesses#models",
    "relUrl": "/api/businesses#models"
  },"50": {
    "doc": "Businesses",
    "title": "Operations",
    "content": "Create a Business EXPERIMENTAL . If accountId is not provided when creating a business, then a new org account will be created and associated to the business. POST /api/businesses . curl -X POST https://service.centrapay.com/api/businesses \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"nzbn\": \"9429046246448\" }' . Required Fields . | Field | Type | Description | . | nzbn | String | The unique NZBN identifier. | . Optional Fields . | Field | Type | Description | . | accountId | String | The Centrapay accountId. | . | test | String | The created Centrapay org account will have the test flag | . Example response payload . { \"id\": \"DKTs3U38hdhfEqwF1JKoT2\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"accountName\": \"Centrapay\", \"nzbn\": \"9429046246448\", \"name\": \"CENTRAPAY LIMITED\", \"tradingName\": \"CentraPay\", \"companyNumber\": \"6340244\", \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"updatedAt\": \"2020-06-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" } . Error Responses . | Status | Code | Description | . | 403 | INVALID_ACCOUNT | Account does not exist, is not authorized, is of the wrong type, or is not in the NZ region. | . | 403 | INVALID_NZBN | The NZBN provided does not match any NZ business. | . Get a Business by Account id EXPERIMENTAL . GET /api/accounts/{accountId}/business . curl https://service.centrapay.com/api/accounts/Jaim1Cu1Q55uooxSens6yk/business \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"DKTs3U38hdhfEqwF1JKoT2\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"accountName\": \"Centrapay\", \"nzbn\": \"9429046246448\", \"name\": \"CENTRAPAY LIMITED\", \"tradingName\": \"CentraPay\", \"companyNumber\": \"6340244\", \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"updatedAt\": \"2020-06-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" } . Search NZ Company Register EXPERIMENTAL . Returns a list of companies that match the queried param on company name, nzbn number or company number. Results are paginated and ordered by relevance. GET /api/nzbn-search . curl -G https://service.centrapay.com/api/nzbn-search \\ -H \"X-Api-Key: $api_key\" \\ -d q=centrapay . Query Parameters . | Parameter | Description | . | q | Company name, number or NZBN to search for. | . Example response payload . { \"items\": [ { \"nzbn\": \"9429046246448\", \"companyName\": \"CENTRAPAY LIMITED\", \"companyNumber\": \"6340244\" } ] } . Get Business Details from NZ Company Register EXPERIMENTAL . GET /api/nzbn/{nzbn} . curl https://service.centrapay.com/api/nzbn/9429046246448 \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"nzbn\": \"9429046246448\", \"companyName\": \"CENTRAPAY LIMITED\", \"tradingName\": \"CentraPay\", \"companyNumber\": \"6340244\", \"directors\": [ { \"firstName\": \"John\", \"lastName\": \"DOE\", \"addressLines\": [ \"7 Tara Street\", \"Downmore\", \"Auckland\" ] }, { \"firstName\": \"Jane\", \"lastName\": \"DOE\", \"addressLines\": [ \"82 Greatwood Road\", \"Northclover\", \"Auckland\" ] } ] } . ",
    "url": "/api/businesses#operations",
    "relUrl": "/api/businesses#operations"
  },"51": {
    "doc": "Creating Test Money",
    "title": "Creating Test Money",
    "content": "In order to make testing easier, most Centrapay assets have a “test” variant which can be issued at no cost. In the case of money, issuing the test variant (eg “centrapay.nzd.test”) requires linking a “test” bank account which, instead of going through the banking system, sends transaction notifications to the email address of the initiating user. The test bank account can be used to create a topup request. The 4-digit bank account verification code, which normally appears in your bank account statement, will be included in the emailed transaction notification. The test assets can be created via either the Centrapay API or the Centrapay app. Warning: Test bank accounts count toward resource quotas. ",
    "url": "/guides/creating-test-money",
    "relUrl": "/guides/creating-test-money"
  },"52": {
    "doc": "Creating Test Money",
    "title": "Via API",
    "content": "To create test dollars via the Centrapay API: . | Add email to Centrapay profile: If not already configured, set an email on your Centrapay user profile via the update profile endpoint. | Create a test bank account: Create a bank account, using “00-“ as the bank account number prefx, via the create bank account endpoint. | Create a test topup: Use the test bank account id to topup up via the topup endpoint. The topup must be created with a Centrapay user (ie: authenticated with JWT, not an API key) in order for the transaction email notification to be delivered. | Verify the bank account: Post the 4-digit code from the test transaction confirmation email, along with the test bank account id, to the verify bank account endpoint. | . ",
    "url": "/guides/creating-test-money#via-api",
    "relUrl": "/guides/creating-test-money#via-api"
  },"53": {
    "doc": "Creating Test Money",
    "title": "Via Centrapay App",
    "content": "To create test dollars via the Centrapay app: . | Enable Test Assets: Create a test payment request at https://app.centrapay.com/test . Follow the link to pay the payment request (https://app.centrapay.com/pay/{id}) and, when prompted, enable test assets. | Link Test Bank Account: Visit https://app.centrapay.com/bank-accounts and link a bank account using “00-“ as the bank account number prefix. | Topup and Verify: Topup via https://app.centrapay.com/topup by choosing the test bank account. You will receive a test transaction confirmation email with a 4-digit code to “verify” the test bank account. After the bank account is verified, the topup amount will be released into your Centrapay account. | . ",
    "url": "/guides/creating-test-money#via-centrapay-app",
    "relUrl": "/guides/creating-test-money#via-centrapay-app"
  },"54": {
    "doc": "Data Types",
    "title": "Data Types",
    "content": " ",
    "url": "/api/data-types",
    "relUrl": "/api/data-types"
  },"55": {
    "doc": "Data Types",
    "title": "Timestamp",
    "content": "A point in time, usually with millisecond precision, represented as an ISO 8601 date string (eg “2021-06-11T02:51:11.000Z”). Timestamps are in the UTC timezone as denoted by the “Z” suffix. ",
    "url": "/api/data-types#timestamp",
    "relUrl": "/api/data-types#timestamp"
  },"56": {
    "doc": "Data Types",
    "title": "BigNumber",
    "content": "A number, represented as a String, which can have arbitrary size or precision. Most Centrapay APIs that deal with transactable value (ie. assets, payments, etc) represent the value as BigNumbers. Depending on the context, a BigNumber may be used to represent an integer or a decimal amount. ",
    "url": "/api/data-types#bignumber",
    "relUrl": "/api/data-types#bignumber"
  },"57": {
    "doc": "Data Types",
    "title": "Monetary",
    "content": "A monetary amount in a currency, represented as an Object. The amount is usually an integer in the smallest denomination for the currency (ie cents) but may be a decimal value for some currencies (eg Bitcoin). The currency is typically represented as an ISO 4217 code. Fields . | Name | Type | Description | . | amount | BigNumber | Value in the currency’s smallest denomination (eg. cents). | . | currency | String | Currency code (eg. “NZD”). | . ",
    "url": "/api/data-types#monetary",
    "relUrl": "/api/data-types#monetary"
  },"58": {
    "doc": "Data Types",
    "title": "CRN",
    "content": "A Centrapay Resource Name (CRN) is a colon-delimited String that uniquely identifies any Centrapay resource. The format is crn:{account}:{type}:{id} where “account” is the optional Centrapay account that owns the resource, “type” is the resource type, and “id” is the resource identifier. CRN is often used to refer to Users and API keys. For example: . | User: crn::user:e2837e88-d408-11eb-8eac-3e22fb52e878 | API Key: crn:1234abc:api-key:MyAccountOwner | . ",
    "url": "/api/data-types#crn",
    "relUrl": "/api/data-types#crn"
  },"59": {
    "doc": "Data Types",
    "title": "Location",
    "content": "A location’s represented as an Object with properties to denote the location both absolute and by locality. Required Fields . | Name | Type | Description | . | street | String | Unit, number, and name of street address | . | city | String | City of location | . | country | String | ISO 3166 Country code. (eg. “NZ”) | . Optional Fields . | Name | Type | Description | . | lat | Number | Absolute latitude coordinate | . | lng | Number | Absolute longitude coordinate | . | suburb | String | Suburb of location | . | postCode | String | Post or Zip code of location | . | state | String | The state or region of the location (eg. “Auckland”) | . ",
    "url": "/api/data-types#location",
    "relUrl": "/api/data-types#location"
  },"60": {
    "doc": "Data Types",
    "title": "PhoneNumber",
    "content": "A phone number, represented in E.123 international notation (eg “+6421537663”). We usually use this for receiving text messages. ",
    "url": "/api/data-types#phonenumber",
    "relUrl": "/api/data-types#phonenumber"
  },"61": {
    "doc": "eCommerce",
    "title": "eCommerce Website",
    "content": "eCommerce websites accepting payments via Centrapay may want to redirect their users back to their website after they pay/cancel the payment request. In order to do this, the eCommerce website must add allowedRedirectUrls to it’s Merchant Config. After allowedRedirectUrls have been added to the Merchant Config, the eCommerce website can simply pass in their redirectUrl when creating a Payment Request. POST /api/payment-requests Create a Payment Request with redirectUrl . curl -X POST https://service.centrapay.com/api/payment-requests \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"configId\": \"5efbe2fb96c08357bb2b9242\", \"value\": { \"amount\": \"8991\", \"currency\": \"NZD\" }, \"redirectUrl\": \"https://www.example.com/store/checkout\" }' . ",
    "url": "/guides/ecommerce#ecommerce-website",
    "relUrl": "/guides/ecommerce#ecommerce-website"
  },"62": {
    "doc": "eCommerce",
    "title": "eCommerce",
    "content": " ",
    "url": "/guides/ecommerce",
    "relUrl": "/guides/ecommerce"
  },"63": {
    "doc": "Example OIDC Consumer",
    "title": "Example OIDC Consumer",
    "content": "This guide demonstrates how to integrate a browser based application with the Centrapay OAuth server using the oidc-client-js JavaScript library. A good starting point for learning more about OIDC is Okta’s OAuth OIDC Illustrated Guide. ",
    "url": "/guides/example-oidc-consumer",
    "relUrl": "/guides/example-oidc-consumer"
  },"64": {
    "doc": "Example OIDC Consumer",
    "title": "Contents",
    "content": ". | OIDC User Manager Configuration | Minimal OIDC Client Usage | Trigger Token Refresh | Detect OIDC User Refresh | OIDC Client Logout | . ",
    "url": "/guides/example-oidc-consumer#contents",
    "relUrl": "/guides/example-oidc-consumer#contents"
  },"65": {
    "doc": "Example OIDC Consumer",
    "title": "OIDC User Manager Configuration",
    "content": "import Oidc from 'oidc-client'; Oidc.Log.logger = console; const yourCentrapayOauthClientId = '7mapl0nqonkgl5vfeb3cf86miu'; const yourAppOidcRedirectUri = window.location.origin + '/oidc-callback'; const userPhoneNumber = '+6421234567890'; const userManager = new Oidc.UserManager({ /* * Required configs */ authority: 'https://auth.centrapay.com/', response_type: 'code', scope: 'openid', client_id: yourCentrapayOauthClientId, redirect_uri: yourAppOidcLoginRedirectUri, loadUserInfo: false, // \"/oauth2/userInfo\" call unsupported by Centrapay OAuth server post_logout_redirect_uri: yourAppOidcLogoutRedirectUri, revokeAccessTokenOnSignout: true, metadata: { end_session_endpoint: 'https://auth.centrapay.com/logout' } /* * Recommended configs */ userStore: new Oidc.WebStorageStateStore({ store: window.localStorage }), automaticSilentRenew: true, monitorSession: false, // Suppress session event double firing extraQueryParams: { u: userPhoneNumber }, // Populate Centrapay login form }); . ",
    "url": "/guides/example-oidc-consumer#oidc-user-manager-configuration",
    "relUrl": "/guides/example-oidc-consumer#oidc-user-manager-configuration"
  },"66": {
    "doc": "Example OIDC Consumer",
    "title": "Minimal OIDC Client Usage",
    "content": "async function login() { userManager.stopSilentRenew(); userManager.clearStaleState(); /* State attribute is stored and retrievable with OIDC callback state param */ await userManager.signinRedirect({ state: window.location.href }); } async function handleOidcCallback() { const result = await userManager.signinRedirectCallback().catch((err) =&gt; { console.log('Something went wrong handling OIDC callback'); }); /* Restore previous location stored against state param */ window.location.replace(result.state || '/'); } async function init() { let user = null; if (window.location.pathname == '/oidc-callback') { await handleOidcCallback(); } else { user = await userManager.getUser(); } if (!user) { await login(); } return user; } init().then(console.log); . ",
    "url": "/guides/example-oidc-consumer#minimal-oidc-client-usage",
    "relUrl": "/guides/example-oidc-consumer#minimal-oidc-client-usage"
  },"67": {
    "doc": "Example OIDC Consumer",
    "title": "Trigger Token Refresh",
    "content": "Manually trigger a token refresh when expired due to user being offline. async function refreshUser() { const user await userManager.getUser(); if (user.expired) { await userManager.signinSilent(); await userManager.signinSilentCallback(); console.log('User refreshed'); } else { console.log('User not refreshed'); } return await userManager.getUser(); } refreshUser() .then(console.log) .catch(err =&gt; { console.log({ msg: 'Something went wrong refreshing user token, login required', err }); }); . ",
    "url": "/guides/example-oidc-consumer#trigger-token-refresh",
    "relUrl": "/guides/example-oidc-consumer#trigger-token-refresh"
  },"68": {
    "doc": "Example OIDC Consumer",
    "title": "Detect OIDC User Refresh",
    "content": "Detect when OIDC user is refreshed via auto silent renew. The new user may have changed with updated claims, for example, if they have added an email address. userManager.events.addUserLoaded((user) =&gt; { console.log({ msg: 'user auto renew completed', user }); }); . ",
    "url": "/guides/example-oidc-consumer#detect-oidc-user-refresh",
    "relUrl": "/guides/example-oidc-consumer#detect-oidc-user-refresh"
  },"69": {
    "doc": "Example OIDC Consumer",
    "title": "OIDC Client Logout",
    "content": "async function logout() { /* State attribute is stored and retrievable with OIDC callback state param */ await userManager.signoutRedirect({ state: window.location.href }); } async function handleLogoutOidcCallback() { const result = await userManager.signoutRedirectCallback().catch((err) =&gt; { console.log('Something went wrong handling OIDC callback'); }); /* Restore previous location stored against state param */ window.location.replace(result.state || '/'); } . ",
    "url": "/guides/example-oidc-consumer#oidc-client-logout",
    "relUrl": "/guides/example-oidc-consumer#oidc-client-logout"
  },"70": {
    "doc": "External Assets",
    "title": "External Assets",
    "content": "External assets are Assets which are issued by a third-party. ",
    "url": "/api/external-assets",
    "relUrl": "/api/external-assets"
  },"71": {
    "doc": "External Assets",
    "title": "Contents",
    "content": ". | Load an External Asset | . ",
    "url": "/api/external-assets#contents",
    "relUrl": "/api/external-assets#contents"
  },"72": {
    "doc": "External Assets",
    "title": "Load an External Asset",
    "content": "Load an asset from a supported third-party issuer. Asset details will be obtained from the issuer. POST /api/external-assets . curl -X POST https://service.centrapay.com/api/external-assets \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"category\": \"giftcard\", \"type\": \"epay.nzd.test\", \"issuer\": \"ezipay\", \"externalId\": \"23403321042\", \"pin\": \"3771\" }' . Required Fields . | Parameter | Type | Description | . | accountId | String | The Centrapay account which will own the asset. | . | category | String | The category an asset will be grouped by. Valid values: “giftcard”. | . | type | String | The Centrapay ledger corresponding to the asset. Valid values: “epay.nzd.main”, “epay.nzd.test”. | . | issuer | String | The asset issuer. Valid values: “ezipay”. | . | externalId | String | The issuer’s asset id such as card number. | . Optional Parameters . | Parameter | Type | Description | . | pin | String | Additional secret required by the issuer for loading or redeeming the asset. | . | description | String | Description of the asset, eg: “$60 Acme Giftcard”. | . Example response payload . { \"id\": \"L75M3L56N2PtBSt8g7uXLU\", \"category\": \"giftcard\", \"type\": \"epay.nzd.main\", \"accountId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"issuer\": \"ezipay\", \"externalId\": \"************60119\", \"description\": \"$60 Acme Giftcard\", \"productCode\": \"23403\", \"currency\": \"NZD\", \"initialBalance\": \"7000\", \"balance\": \"6000\", \"availableBalance\": \"6000\", \"balanceUpdatedAt\": \"2020-06-10T15:30:00.000Z\", \"expiresAt\": \"2020-12-31T00:00:00.000Z\", \"createdAt\": \"2020-05-01T12:30:00.000Z\" } . Error Responses . | Status | Code | Description | . | 403 | UNKNOWN_ASSET | Asset id or PIN is incorrect. | . | 403 | DUPLICATE_ASSET | Asset already claimed by another account. | . | 403 | UNSUPPORTED_ASSET_TYPE | Unsupported asset type, origin, or issuer. | . | 403 | DENIED_BY_ASSET_PROVIDER | Asset exists, but is not enabled for use through centrapay. | . | 403 | EXPIRED_BY_ASSET_PROVIDER | Asset exists, but it’s expired. | . ",
    "url": "/api/external-assets#load-an-external-asset",
    "relUrl": "/api/external-assets#load-an-external-asset"
  },"73": {
    "doc": "Farmlands External Asset Batch",
    "title": "Farmlands External Asset Batch",
    "content": "Loads Farmlands Card data into Centrapay as external assets. | Type Name | farmlands-external-asset | . | File Format | JSONL | . | Record Type | Account | . ",
    "url": "/api/batch-types/farmlands-external-asset",
    "relUrl": "/api/batch-types/farmlands-external-asset"
  },"74": {
    "doc": "Farmlands External Asset Batch",
    "title": "Contents",
    "content": ". | Models . | Account | Contact | Card | . | Example JSONL File | Example Models | . ",
    "url": "/api/batch-types/farmlands-external-asset#contents",
    "relUrl": "/api/batch-types/farmlands-external-asset#contents"
  },"75": {
    "doc": "Farmlands External Asset Batch",
    "title": "Models",
    "content": ". Account . Exported Farmlands Account used for importing and updating of a Centrapay Asset. Fields . | Field | Type | Description | . | externalId | String | Id used for keeping imported Centrapay Asset up to date. | . | accountNumber | String | Farmlands account identifier attached to the Centrapay Asset. | . | availableBalance | BigNumber Optional | Current spendable balance of Centrapay Asset in cents. When not specified, defaults to 0. | . | contacts | Array Optional | Contact List for the imported Centrapay Asset. When empty all Contacts are removed. | . Contact . Exported Farmlands Contact and Card information used for authentication, correspondence and payment. Fields . | Field | Type | Description | . | externalId | String | Id used for keeping imported Centrapay Contact details up to date. | . | name | String Optional | The full name used to address the individual. | . | mobile | PhoneNumber Optional | Mobile number used for authentication and correspondence, must start with +64. | . | email | String Optional | Email address used for authentication and correspondence. | . | primary | Boolean Optional | true if the Contact is the owner of the Farmlands Account. | . | cards | Array Optional | Card list used for payment for the authenticated subject. When empty all Cards are removed. | . Card . Exported Farmlands Credit Card information used for importing and updating of a Patron Code. Fields . | Field | Type | Description | . | externalId | String Optional | Farmlands unique identifier for the card. | . | barcode | BigNumber | Unique 9 digit field to display in barcode format to pay by Patron Code. | . | status | String | Current state of the Card. Valid values are “active”, “inactive” and “archived”. | . | expiry | Timestamp | Payments will be accepted until this time. | . | farmlandsStatus | String Optional | Private field used in all Farmlands payment transaction notifications. | . ",
    "url": "/api/batch-types/farmlands-external-asset#models",
    "relUrl": "/api/batch-types/farmlands-external-asset#models"
  },"76": {
    "doc": "Farmlands External Asset Batch",
    "title": "Example JSONL File",
    "content": "A complete batch example with all batch types included. For more legible examples please refer to Example Models. {\"externalId\":\"9b2ec6d1-c83b-496a-8e52-2989f23d9076\",\"accountNumber\":\"012345678\",\"availableBalance\":\"1000\",\"contacts\":[]} {\"externalId\":\"d0d7e14d-4ce5-4f42-8a4c-d604a9609f66\",\"accountNumber\":\"012345678\",\"availableBalance\":\"1000\"} {\"externalId\":\"69d64d80-f9bd-4057-bc5b-1c55685d995b\",\"accountNumber\":\"012345678\",\"contacts\":[{\"externalId\":\"6e496c2a-1dae-4036-847d-c53bf6c6d410\",\"name\":\"Road Runner\",\"mobile\":\"+64221105598\",\"email\":\"road@runner.net\",\"primary\":true,\"cards\":[{\"externalId\":\"9b2ec6d1-c83b-496a-8e52-2989f23d9076\",\"barcode\":\"976238759\",\"status\":\"active\",\"expiry\":\"2022-10-01T22:32:56.631Z\"},{\"externalId\":\"74e4f94c-8316-42e7-9aa1-eb1539528894\",\"barcode\":\"957813964\",\"status\":\"inactive\",\"expiry\":\"2022-08-01T22:32:56.631Z\"}]}]} {\"externalId\":\"b5fde0e0-357c-4fda-a90f-fd857f2be999\",\"accountNumber\":\"830578479\",\"availableBalance\":\"12000\",\"contacts\":[{\"externalId\":\"6e496c2a-1dae-4036-847d-c53bf6c6d410\",\"name\":\"Road Runner\",\"mobile\":\"+64221102598\",\"email\":\"road@runner.net\",\"primary\":true,\"cards\":[{\"externalId\":\"65e701c3-6973-4322-8fa6-4560a489417f\",\"barcode\":\"458028560\",\"status\":\"active\",\"expiry\":\"2023-06-01T22:32:56.631Z\"},{\"externalId\":\"69d64d80-f9bd-4057-bc5b-1c55685d995b\",\"barcode\":\"635570865\",\"status\":\"inactive\",\"farmlandsStatus\":\"Suspended by customer\",\"expiry\":\"2022-04-01T22:32:56.631Z\"}]},{\"externalId\":\"6e4813e6-7a18-47ea-b92e-add36c8815ca\",\"name\":\"Yosemite Sam\",\"mobile\":\"+64220002598\",\"email\":\"yosemite@runner.net\",\"primary\":false,\"cards\":[{\"externalId\":\"74e4f94c-8316-42e7-9aa1-eb1539528894\",\"barcode\":\"137628567\",\"status\":\"active\",\"expiry\":\"2022-04-01T22:32:56.631Z\"}]},{\"externalId\":\"82bdb041-ea79-448c-816f-77af8b6750b2\",\"name\":\"Wile E. Coyote\",\"mobile\":\"+64221102598\",\"email\":\"while@e-cyote.net\",\"primary\":false,\"cards\":[{\"externalId\":\"62904b86-b4cc-45a9-b3c9-287a00ae9ef5\",\"barcode\":\"722798445\",\"status\":\"active\",\"expiry\":\"2022-04-01T22:32:56.631Z\"}]}]} . ",
    "url": "/api/batch-types/farmlands-external-asset#example-jsonl-file",
    "relUrl": "/api/batch-types/farmlands-external-asset#example-jsonl-file"
  },"77": {
    "doc": "Farmlands External Asset Batch",
    "title": "Example Models",
    "content": "Centrapay matches previously created resources using externalId and records get created or updated based on these IDs. In some cases, fields may be omitted to only update some fields. Warning: Below our records have newlines for legibility. When submitting a batch file you must only use newlines to separate records. An example of a Centrapay Asset complete with availableBalance, contacts and cards. { \"externalId\": \"b5fde0e0-357c-4fda-a90f-fd857f2be999\", \"accountNumber\": \"830578479\", \"availableBalance\": \"12000\", \"contacts\": [ { \"externalId\": \"6e496c2a-1dae-4036-847d-c53bf6c6d410\", \"name\": \"Road Runner\", \"mobile\": \"+64221102598\", \"email\": \"road@runner.net\", \"primary\": true, \"cards\": [ { \"externalId\": \"65e701c3-6973-4322-8fa6-4560a489417f\", \"barcode\": \"458028560\", \"status\": \"active\", \"expiry\": \"2023-06-01T22:32:56.631Z\" }, { \"externalId\": \"69d64d80-f9bd-4057-bc5b-1c55685d995b\", \"barcode\": \"635570865\", \"status\": \"inactive\", \"farmlandsStatus\": \"Suspended by customer\", \"expiry\": \"2022-04-01T22:32:56.631Z\" } ] }, { \"externalId\": \"6e4813e6-7a18-47ea-b92e-add36c8815ca\", \"name\": \"Yosemite Sam\", \"mobile\": \"+64220002598\", \"email\": \"yosemite@runner.net\", \"primary\": false, \"cards\": [ { \"externalId\": \"74e4f94c-8316-42e7-9aa1-eb1539528894\", \"barcode\": \"137628567\", \"status\": \"active\", \"expiry\": \"2022-04-01T22:32:56.631Z\" } ] }, { \"externalId\": \"82bdb041-ea79-448c-816f-77af8b6750b2\", \"name\": \"Wile E. Coyote\", \"mobile\": \"+64221102598\", \"email\": \"while@e-cyote.net\", \"primary\": false, \"cards\": [ { \"externalId\": \"62904b86-b4cc-45a9-b3c9-287a00ae9ef5\", \"barcode\": \"722798445\", \"status\": \"active\", \"expiry\": \"2022-04-01T22:32:56.631Z\" } ] } ] } . Update the availableBalance on an account and remove all contacts associated with it. Note, this renders the availableBalance un-spendable. { \"externalId\": \"9b2ec6d1-c83b-496a-8e52-2989f23d9076\", \"accountNumber\": \"012345678\", \"availableBalance\": \"1000\", \"contacts\": [ ] } . Update the availableBalance on an account. { \"externalId\": \"d0d7e14d-4ce5-4f42-8a4c-d604a9609f66\", \"accountNumber\": \"012345678\", \"availableBalance\": \"1000\" } . Update the contact list for an account. Use this where you want to exclude availableBalance. { \"externalId\": \"69d64d80-f9bd-4057-bc5b-1c55685d995b\", \"accountNumber\": \"012345678\", \"contacts\": [ { \"externalId\": \"6e496c2a-1dae-4036-847d-c53bf6c6d410\", \"name\": \"Road Runner\", \"mobile\": \"+64221105598\", \"email\": \"road@runner.net\", \"primary\": true, \"cards\": [ { \"externalId\": \"9b2ec6d1-c83b-496a-8e52-2989f23d9076\", \"barcode\": \"976238759\", \"status\": \"active\", \"expiry\": \"2022-10-01T22:32:56.631Z\" }, { \"externalId\": \"74e4f94c-8316-42e7-9aa1-eb1539528894\", \"barcode\": \"957813964\", \"status\": \"inactive\", \"expiry\": \"2022-08-01T22:32:56.631Z\" } ] } ] } . ",
    "url": "/api/batch-types/farmlands-external-asset#example-models",
    "relUrl": "/api/batch-types/farmlands-external-asset#example-models"
  },"78": {
    "doc": "Funds Transfers",
    "title": "Funds Transfers",
    "content": "A funds transfer represents either a top up to or a withdrawal from a Centrapay wallet. Topping up a wallet consists of making a bank transfer from the user’s bank account to Centrapay. Once Centrapay has verified the transfer was successful a user will be given credit on their Centrapay wallet equal to the amount of the bank transfer. ",
    "url": "/api/funds-transfers",
    "relUrl": "/api/funds-transfers"
  },"79": {
    "doc": "Funds Transfers",
    "title": "Contents",
    "content": ". | Creating a top up | Get a top up | List top ups for authorized accounts | List top ups for an account EXPERIMENTAL | Creating a Withdrawal EXPERIMENTAL | Get a Withdrawal EXPERIMENTAL | List Withdrawals for an account EXPERIMENTAL | . ",
    "url": "/api/funds-transfers#contents",
    "relUrl": "/api/funds-transfers#contents"
  },"80": {
    "doc": "Funds Transfers",
    "title": "Creating a top up",
    "content": "POST /api/topups . curl -X POST https://service.centrapay.com/api/topups \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"amount\": \"10000\", \"assetId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"bankAccountId\": \"FRhAzzWpTKb5U7pZygQjjY\" }' . Required Fields . | Field | Type | Description | . | amount | BigNumber | Total amount of the transaction in cents | . | assetId | String | The id of the asset | . | bankAccountId | String | The id of the bank account | . Example response payload . { \"id\": \"hg2RfYTQ635tPBZEPJdCre\", \"assetId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"bankAccountId\": \"FRhAzzWpTKb5U7pZygQjjY\", \"accountId\": \"aBc932S9182qwCDqwer\", \"type\": \"topup\", \"amount\": \"10000\", \"status\": \"created\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-01T12:30:00.000Z\" } . Error Responses . | Status | Code | Description | . | 403 | BANK_AUTHORITY_WALLET_MISMATCH | The wallet and the bank account for the top up request do not belong to the same account. | . | 403 | MAX_INFLIGHT_TOPUPS_EXCEEDED | The bank account already has ten pending top ups, which is the maximum a bank authority can have at any one time. | . | 403 | MAX_INFLIGHT_TOPUP_AMOUNT_EXCEEDED | The top up can not be created because it is above the max amount of funds a bank account can have pending at any one time. The max amount is $1000.00 for verified bank accounts and $100.00 for non-verified bank accounts. | . | 403 | QUOTA_EXCEEDED | The topup exceeds one or more top up quota limits. See Quota Error Response. | . | 403 | DIRECT_DEBIT_NOT_AUTHORIZED | Bank account requires authorization for top up. See bank accounts direct debit endpoint. | . | 403 | INVALID_WALLET_TYPE | The wallet type does not support top ups. See settlement wallets. | . | 403 | BANK_ACCOUNT_TYPE_NOT_CONFIGURED_FOR_TOPUP | The bank account type is not configured for topups. Only centrapay type bank accounts are configured. | . ",
    "url": "/api/funds-transfers#creating-a-top-up",
    "relUrl": "/api/funds-transfers#creating-a-top-up"
  },"81": {
    "doc": "Funds Transfers",
    "title": "Get a top up",
    "content": "GET /api/topups/{topupId} . curl https://service.centrapay.com/api/topups/WRhAxxWpTKb5U7pXyxQjjY \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"hg2RfYTQ635tPBZEPJdCre\", \"assetId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"bankAccountId\": \"FRhAzzWpTKb5U7pZygQjjY\", \"accountId\": \"aBc932S9182qwCDqwer\", \"type\": \"topup\", \"amount\": \"10000\", \"status\": \"created\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-01T12:30:00.000Z\" } . ",
    "url": "/api/funds-transfers#get-a-top-up",
    "relUrl": "/api/funds-transfers#get-a-top-up"
  },"82": {
    "doc": "Funds Transfers",
    "title": "List top ups for authorized accounts",
    "content": "GET /api/topups . curl https://service.centrapay.com/api/topups \\ -H \"X-Api-Key: $api_key\" . Example response payload . [ { \"id\": \"5thg2RPBZEfYTPJdQ63Cre\", \"assetId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"bankAccountId\": \"FRhAzzWpTKb5U7pZygQjjY\", \"accountId\": \"aBc932S9182qwCDqwer\", \"type\": \"topup\", \"amount\": \"10000\", \"status\": \"created\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-01T12:30:00.000Z\" }, { \"id\": \"hg2RfYTQ635tPBZEPJdCre\", \"assetId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"bankAccountId\": \"FRhAzzWpTKb5U7pZygQjjY\", \"accountId\": \"aBc932S9182qwCDqwer\", \"type\": \"topup\", \"amount\": \"10000\", \"status\": \"created\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-01T12:30:00.000Z\" } ] . ",
    "url": "/api/funds-transfers#list-top-ups-for-authorized-accounts",
    "relUrl": "/api/funds-transfers#list-top-ups-for-authorized-accounts"
  },"83": {
    "doc": "Funds Transfers",
    "title": "List top ups for an account EXPERIMENTAL",
    "content": "GET /api/accounts/{accountId}/topups . curl https://service.centrapay.com/api/accounts/aBc932S9182qwCDqwer/topups \\ -H \"X-Api-Key: $api_key\" . Example response payload . [ { \"id\": \"5thg2RPBZEfYTPJdQ63Cre\", \"assetId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"bankAccountId\": \"FRhAzzWpTKb5U7pZygQjjY\", \"accountId\": \"aBc932S9182qwCDqwer\", \"type\": \"topup\", \"amount\": \"10000\", \"status\": \"created\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-01T12:30:00.000Z\" }, { \"id\": \"hg2RfYTQ635tPBZEPJdCre\", \"assetId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"bankAccountId\": \"FRhAzzWpTKb5U7pZygQjjY\", \"accountId\": \"aBc932S9182qwCDqwer\", \"type\": \"topup\", \"amount\": \"10000\", \"status\": \"created\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-01T12:30:00.000Z\" } ] . ",
    "url": "/api/funds-transfers#list-top-ups-for-an-account-experimental",
    "relUrl": "/api/funds-transfers#list-top-ups-for-an-account-experimental"
  },"84": {
    "doc": "Funds Transfers",
    "title": "Creating a Withdrawal EXPERIMENTAL",
    "content": "POST /api/withdrawals . curl -X POST https://service.centrapay.com/api/withdrawals \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"amount\": \"10000\", \"assetId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"bankAccountId\": \"FRhAzzWpTKb5U7pZygQjjY\" }' . Required Fields . | Field | Type | Description | . | amount | BigNumber | Total amount of the transaction in cents | . | assetId | String | The id of the asset | . | bankAccountId | String | The id of the bank account | . Example response payload . { \"id\": \"hg2RfYTQ635tPBZEPJdCre\", \"assetId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"bankAccountId\": \"FRhAzzWpTKb5U7pZygQjjY\", \"accountId\": \"aBc932S9182qwCDqwer\", \"type\": \"withdrawal\", \"amount\": \"10000\", \"status\": \"created\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-01T12:30:00.000Z\" } . Error Responses . | Status | Code | Description | . | 403 | BANK_AUTHORITY_WALLET_MISMATCH | The wallet and the bank account for the withdrawal request do not belong to the same account. | . | 403 | INSUFFICIENT_WALLET_BALANCE | The wallet balance is less than the required amount. | . | 403 | INVALID_WALLET_TYPE | The wallet type does not support withdrawals. See settlement wallets. | . | 403 | BANK_ACCOUNT_TYPE_NOT_CONFIGURED_FOR_WITHDRAWAL | The bank account type is not configured for withdrawals. Only centrapay type bank accounts are configured. | . ",
    "url": "/api/funds-transfers#creating-a-withdrawal-experimental",
    "relUrl": "/api/funds-transfers#creating-a-withdrawal-experimental"
  },"85": {
    "doc": "Funds Transfers",
    "title": "Get a Withdrawal EXPERIMENTAL",
    "content": "GET /api/withdrawals/{withdrawalId} . curl https://service.centrapay.com/api/withdrawals/WRhAxxWpTKb5U7pXyxQjjY \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"hg2RfYTQ635tPBZEPJdCre\", \"assetId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"bankAccountId\": \"FRhAzzWpTKb5U7pZygQjjY\", \"accountId\": \"aBc932S9182qwCDqwer\", \"type\": \"withdrawal\", \"amount\": \"10000\", \"status\": \"created\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-01T12:30:00.000Z\" } . ",
    "url": "/api/funds-transfers#get-a-withdrawal-experimental",
    "relUrl": "/api/funds-transfers#get-a-withdrawal-experimental"
  },"86": {
    "doc": "Funds Transfers",
    "title": "List Withdrawals for an account EXPERIMENTAL",
    "content": "Returns a paginated list of Withdrawals for an account. GET /api/accounts/{accountId}/withdrawals . curl https://service.centrapay.com/api/accounts/aBc932S9182qwCDqwer/withdrawals \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"items\": [ { \"id\": \"5thg2RPBZEfYTPJdQ63Cre\", \"assetId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"bankAccountId\": \"FRhAzzWpTKb5U7pZygQjjY\", \"accountId\": \"aBc932S9182qwCDqwer\", \"type\": \"withdrawal\", \"amount\": \"10000\", \"status\": \"created\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-01T12:30:00.000Z\" }, { \"id\": \"hg2RfYTQ635tPBZEPJdCre\", \"assetId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"bankAccountId\": \"FRhAzzWpTKb5U7pZygQjjY\", \"accountId\": \"aBc932S9182qwCDqwer\", \"type\": \"withdrawal\", \"amount\": \"10000\", \"status\": \"done\", \"createdAt\": \"2020-05-01T12:30:00.000Z\", \"updatedAt\": \"2020-05-01T12:30:00.000Z\" } ] } . ",
    "url": "/api/funds-transfers#list-withdrawals-for-an-account-experimental",
    "relUrl": "/api/funds-transfers#list-withdrawals-for-an-account-experimental"
  },"87": {
    "doc": "Loading & Sending Assets",
    "title": "Loading and Sending Assets",
    "content": "Assets such as Giftcards or Tokens can be issued by a Centrapay Account and then distributed to another Centrapay user’s phone number via SMS. ",
    "url": "/guides/loading-and-sending-assets#loading-and-sending-assets",
    "relUrl": "/guides/loading-and-sending-assets#loading-and-sending-assets"
  },"88": {
    "doc": "Loading & Sending Assets",
    "title": "Contents",
    "content": ". | Loading Giftcards | Sending Assets | Example: Bulk distribution of Giftcards | . ",
    "url": "/guides/loading-and-sending-assets#contents",
    "relUrl": "/guides/loading-and-sending-assets#contents"
  },"89": {
    "doc": "Loading & Sending Assets",
    "title": "Loading Giftcards",
    "content": "You can load Giftcards by calling our External Assets endpoint. You will need to use the giftcard number for the externalId field. The pin, the issuer and the type need to be on hand too. If your asset type is not included on the list, contact integrations@centrapay.com. ",
    "url": "/guides/loading-and-sending-assets#loading-giftcards",
    "relUrl": "/guides/loading-and-sending-assets#loading-giftcards"
  },"90": {
    "doc": "Loading & Sending Assets",
    "title": "Sending Assets",
    "content": "You can send Assets such as Tokens and Giftcards by calling our Asset Transfers endpoint. You will need to have the recipient’s phone number for recipientAlias to identify the reciever. Optionally the senderAlias field can be used if you’re loading an asset on behalf of someone else. If the recipientAlias doesn’t end up creating a Centrapay account, then it will be sent to this number. ",
    "url": "/guides/loading-and-sending-assets#sending-assets",
    "relUrl": "/guides/loading-and-sending-assets#sending-assets"
  },"91": {
    "doc": "Loading & Sending Assets",
    "title": "Example: Bulk distribution of Giftcards",
    "content": "Sometimes you might want to load and distribute Giftcards to a large number of recipients. This requires some scripting, but this is not hard. We can do this with: . | A CSV to manage Giftcards to load | A script to load and send Giftcards | . Here’s an example of the CSV named input.csv: . recipientAlias,cardNumber,pin,message +64221231234,23403321042,1111,Hello Bob! Here's your giftcard +64221231235,23403321042,1111,Hello Alice! Here's your giftcard +64221231236,23403321042,1111,Hello Eve! Here's your giftcard . Warning: Phone numbers must start with +64 Here’s an example of the script to parse the CSV and send Giftcards. To run this, you will need: . | Node JS in your environment | A copy of Axios for HTTP requests | An API Key to call our APIs | Your Account id for the initial load of each Giftcard | . #!/usr/bin/env node const apiKey = 'api123'; // FIXME const accountId = 'acc123'; // FIXME const inputFile = './input.csv'; const type = 'epay.nzd.main'; const category = 'giftcard'; const issuer = 'ezipay'; const baseUrl = 'https://service.centrapay.com'; const axios = require('axios'); const fs = require('fs'); const sleep = require('util').promisify(setTimeout); // calls axios and return parsed body, sleep and retry if we get 429 async function requestWithRetry(args) { let response; try { response = await axios.request(args); } catch(err) { if (err.response.status != 429) { throw(err); } const retrySeconds = Number(err.response.headers['retry-after']) + 1; await sleep(retrySeconds * 1000); response = await axios.request(args); } return response.data; } // loads and sends giftcard to a phone number async function sendGiftcard({ recipientAlias, cardNumber, pin, message }) { const asset = await requestWithRetry({ method: 'POST', url: `${baseUrl}/api/external-assets`, data: { accountId, pin, category, issuer, type, externalId: cardNumber }, headers: { 'Content-Type': 'application/json', 'X-Api-Key': apiKey, }, }); const assetTransfer = await requestWithRetry({ method: 'POST', url: `${baseUrl}/api/asset-transfers`, data: { recipientAlias, message, assetId: asset.id }, headers: { 'Content-Type': 'application/json', 'X-Api-Key': apiKey, }, }); return `Sent ${cardNumber} to ${recipientAlias} with assetTransferId ${assetTransfer.id}`; } // takes a CSV and returns a list of objects where headings are the keys function parseCsv(input) { const lines = String(input).split('\\n').filter(line =&gt; line.length); const [headings, ...rows] = lines.map(row =&gt; row.split(',').map(cell =&gt; cell.trim())); const objectList = rows.map(values =&gt; { const outRow = {}; for (const [i, heading] of Object.entries(headings)) { outRow[heading] = values[i] } return outRow; }); return objectList; } // loads from input.csv and sends giftcards to people async function run() { const start = new Date(); const data = await fs.promises.readFile(inputFile); const csv = parseCsv(data); for (const row of csv) { const msg = await sendGiftcard(row); console.log(msg); } const duration = new Date() - start; return `Done in ${duration / 1000} seconds`; } // entry into the script run() .then(console.log) .catch(console.error); . ",
    "url": "/guides/loading-and-sending-assets#example-bulk-distribution-of-giftcards",
    "relUrl": "/guides/loading-and-sending-assets#example-bulk-distribution-of-giftcards"
  },"92": {
    "doc": "Loading & Sending Assets",
    "title": "Loading & Sending Assets",
    "content": " ",
    "url": "/guides/loading-and-sending-assets",
    "relUrl": "/guides/loading-and-sending-assets"
  },"93": {
    "doc": "Merchants",
    "title": "Merchants",
    "content": " ",
    "url": "/api/section/merchants",
    "relUrl": "/api/section/merchants"
  },"94": {
    "doc": "Bank Accounts",
    "title": "Bank Accounts",
    "content": " ",
    "url": "/api/section/bank-accounts",
    "relUrl": "/api/section/bank-accounts"
  },"95": {
    "doc": "Accounts",
    "title": "Accounts",
    "content": " ",
    "url": "/api/section/accounts",
    "relUrl": "/api/section/accounts"
  },"96": {
    "doc": "Payment Requests",
    "title": "Payment Requests",
    "content": " ",
    "url": "/api/section/payment-requests",
    "relUrl": "/api/section/payment-requests"
  },"97": {
    "doc": "Integrations",
    "title": "Integrations",
    "content": " ",
    "url": "/api/section/integrations",
    "relUrl": "/api/section/integrations"
  },"98": {
    "doc": "Assets",
    "title": "Assets",
    "content": " ",
    "url": "/api/section/assets",
    "relUrl": "/api/section/assets"
  },"99": {
    "doc": "Batches",
    "title": "Batches",
    "content": " ",
    "url": "/api/section/batches",
    "relUrl": "/api/section/batches"
  },"100": {
    "doc": "API Reference",
    "title": "API Reference",
    "content": " ",
    "url": "/api",
    "relUrl": "/api"
  },"101": {
    "doc": "Guides",
    "title": "Guides",
    "content": " ",
    "url": "/guides",
    "relUrl": "/guides"
  },"102": {
    "doc": "Getting Started",
    "title": "Getting Started",
    "content": "Welcome to Centrapay! We enable you to transact fiat currency, giftcards, digital assets and vouchers via your point of sale, payment terminal, shopping cart or unattended device. We accomplish this via our APIs which allow merchants, customers, terminals, and smart wallets to interact with each other. Checkout our Guides for hints on where to begin or see the API Reference for a deeper dive. For more help getting setup, contact us via email at integrations@centrapay.com. ",
    "url": "/",
    "relUrl": "/"
  },"103": {
    "doc": "Integration Requests",
    "title": "Integration Requests",
    "content": "An Integration Request allows Centrapay users to request the creation of an Integration on a Centrapay account. ",
    "url": "/api/integration-requests",
    "relUrl": "/api/integration-requests"
  },"104": {
    "doc": "Integration Requests",
    "title": "Contents",
    "content": ". | Models . | Integration Request | Terminal | Product | Integration Types | . | Operations . | Create an Integration Request EXPERIMENTAL | Get an Integration Request EXPERIMENTAL | Search Integration Requests EXPERIMENTAL | Configure Integration Request EXPERIMENTAL | Get Integration Request Configuration EXPERIMENTAL | Activate Integration Request EXPERIMENTAL | Delete Integration Request EXPERIMENTAL | . | . ",
    "url": "/api/integration-requests#contents",
    "relUrl": "/api/integration-requests#contents"
  },"105": {
    "doc": "Integration Requests",
    "title": "Models",
    "content": "Integration Request . Mandatory Fields . | Field | Type | Description | . | id | String | The Integration Request’s unique identifier. | . | accountId | String | The Integration Request’s owning Centrapay Account id. | . | merchantId | String | The Merchant id for the Integration Request. | . | type | String | The type of the Integration Request. Refer to Integration Types. | . | status | String | The current status of the Integration Request. Supported values are active, available, pending, rejected and disabled. | . Optional Fields . | Field | Type | Description | . | terminalId | String | The payment system terminal id. Required for NZ Epay integration. | . | terminal | Terminal | The terminal configuration. Required for all terminal vendors except Vista. | . | product | Product | The requested Epay gift card types to support. | . Terminal . Required Fields . | Field | Type | Description | . | terminalId | String | The software or logical id of the payment terminal. | . Optional Fields . | Field | Type | Description | . | deviceId | String | The hardware id or serial number of the payment terminal. | . Product . Required Fields . | Field | Type | Description | . | name | String | The name of the requested Epay product. | . Integration Types . | Name | Description | . | verifone | Terminal vendor Verifone | . | windcave | Terminal vendor Windcave | . | epay | Asset provider ePay | . | smartpay | Terminal vendor smartpay | . | invenco | Terminal vendor invenco | . | skyzer | Terminal vendor skyzer | . | vista | Terminal vendor vista | . ",
    "url": "/api/integration-requests#models",
    "relUrl": "/api/integration-requests#models"
  },"106": {
    "doc": "Integration Requests",
    "title": "Operations",
    "content": "Create an Integration Request EXPERIMENTAL . POST /api/integration-requests . curl -X POST https://service.centrapay.com/api/integration-requests \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"merchantId\": \"5ee0c486308f590260d9a07f\", \"type\": \"verifone\", \"terminal\": { \"terminalId\": \"002039390093939\", \"deviceId\": \"002-039-390\" } }' . curl -X POST https://service.centrapay.com/api/integration-requests \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"merchantId\": \"5ee0c486308f590260d9a07f\", \"type\": \"epay\", \"product\": { \"name\": \"koha-card\" } }' . Required Fields . | Field | Type | Description | . | merchantId | String | The Merchant id for the Integration Request. | . | type | String | The type of the Integration Request. | . Optional Fields . | Field | Type | Description | . | terminal | Terminal | The terminal configuration. Required for Verifone and Windcave integration. | . | product | Product | The requested Epay gift card types to support. | . Example response payload . { \"id\": \"DKTs3U38hdhfEqwF1JKoT2\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"type\": \"verifone\", \"status\": \"pending\", \"createdAt\": \"2020-06-12 01:17:46 UTC\", \"updatedAt\": \"2020-06-12 01:17:46 UTC\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"terminal\": { \"terminalId\": \"002039390093939\", \"deviceId\": \"002-039-390\" } } . { \"id\": \"DKTs3U38hdhfEqwF1JKoT2\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"type\": \"epay\", \"status\": \"pending\", \"createdAt\": \"2020-06-12 01:17:46 UTC\", \"updatedAt\": \"2020-06-12 01:17:46 UTC\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"product\": { \"name\": \"koha-card\" } } . Get an Integration Request EXPERIMENTAL . GET /api/integration-requests/{integrationRequestId} . curl https://service.centrapay.com/api/integration-requests/DKTs3U38hdhfEqwF1JKoT2 \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"DKTs3U38hdhfEqwF1JKoT2\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"type\": \"epay\", \"status\": \"pending\", \"terminalId\": \"11000021\", \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"updatedAt\": \"2020-06-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"product\": { \"name\": \"koha-card\" } } . Search Integration Requests EXPERIMENTAL . Returns a paginated list of Integration Requests. GET /api/integration-requests . curl -G https://service.centrapay.com/api/integration-requests \\ -H \"X-Api-Key: $api_key\" \\ -d type=epay \\ -d pending=true \\ -d accountId=Jaim1Cu1Q55uooxSens6yk . Query Parameters . | Parameter | Description | . | accountId | The Integration Request’s owning Centrapay Account id. Required unless caller has global read access permission. | . | type | The type of Integration Request. | . | pending | When set to true, only include Integration Requests with pending status. | . Example response payload . { \"items\": [ { \"id\": \"DKTs3U38hdhfEqwF1JKoT2\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"type\": \"epay\", \"status\": \"pending\", \"terminalId\": \"11000021\", \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"updatedAt\": \"2020-06-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"product\": { \"name\": \"koha-card\" } } ] } . Configure Integration Request EXPERIMENTAL . Supply configuration values for the Integration Request. PUT /api/integration-requests/{integrationRequestId}/configs . curl -X PUT https://service.centrapay.com/api/integration-requests/DKTs3U38hdhfEqwF1JKoT2/configs \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"terminalId\": \"11000021\" }' . Optional Fields . | Field | Type | Description | . | terminalId | String | Epay terminalId for the Integration Request. Required if type is epay. | . Example response payload . { \"id\": \"DKTs3U38hdhfEqwF1JKoT2\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"type\": \"epay\", \"status\": \"pending\", \"terminalId\": \"11000021\", \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"updatedAt\": \"2020-06-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"product\": { \"name\": \"koha-card\" } } . Get Integration Request Configuration EXPERIMENTAL . GET /api/integration-requests/{integrationRequestId}/configs . curl https://service.centrapay.com/api/integration-requests/DKTs3U38hdhfEqwF1JKoT2/configs \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"terminalId\": \"11000021\" } . Activate Integration Request EXPERIMENTAL . POST /api/integration-requests/{integrationRequestId}/activate . curl -X POST https://service.centrapay.com/api/integration-requests/DKTs3U38hdhfEqwF1JKoT2/activate \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"DKTs3U38hdhfEqwF1JKoT2\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"type\": \"epay\", \"status\": \"active\", \"terminalId\": \"11000021\", \"createdAt\": \"2020-06-12T01:17:46.499Z\", \"updatedAt\": \"2020-06-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"product\": { \"name\": \"koha-card\" } } . Error Responses . | Status | Code | Description | . | 403 | INTEGRATION_PARAM_MISSING | Integration Request needs updating with the required parameters before activating. | . | 403 | INTEGRATION_ALREADY_ACTIVATED | Integration Request is already activated. | . Delete Integration Request EXPERIMENTAL . DELETE /api/integration-requests/{integrationRequestId} . curl -X DELETE https://service.centrapay.com/api/integration-requests/DKTs3U38hdhfEqwF1JKoT2 \\ -H \"X-Api-Key: $api_key\" . Example response payload . { } . ",
    "url": "/api/integration-requests#operations",
    "relUrl": "/api/integration-requests#operations"
  },"107": {
    "doc": "Integrations",
    "title": "Integrations",
    "content": "An Integration is a configured connection between a Centrapay account and a third party. An Integration can be created as an Integration Request, as a Managed Integration, or directly by Centrapay administrators. ",
    "url": "/api/integrations",
    "relUrl": "/api/integrations"
  },"108": {
    "doc": "API Introduction",
    "title": "API Introduction",
    "content": "The Centrapay API is an RMM level 2 RESTful web service which expresses operations in terms of HTTP verbs on resource-oriented URLs. API endpoint definitions in these docs are grouped by resource type along with definitions for the associated resource types. Most API calls require authentication using an API key or JWT. HTTP requests and responses usually have JSON payloads and use “application/json” as the content type. Some API features may be flagged as EXPERIMENTAL. These API features may be removed or changed without warning and should not be relied on in a production setting. | Auth | Status Codes | Data Types | Pagination | API Keys | Accounts | Assets | Bank Accounts | Batches | Integrations | Invitations | Media Uploads | Merchants | Patron Codes | Payment Requests | Profiles | Quotas | . ",
    "url": "/api/introduction",
    "relUrl": "/api/introduction"
  },"109": {
    "doc": "Guides",
    "title": "Guides",
    "content": "Guides and examples of how to use Centrapay. | Merchant Terminals | Payment Flows | Creating Test Money | eCommerce | Example OIDC Consumer | Loading &amp; Sending Assets | . ",
    "url": "/guides/introduction",
    "relUrl": "/guides/introduction"
  },"110": {
    "doc": "Invitations",
    "title": "Invitations",
    "content": "An Invitation can be used to allow users to claim ownership of a resource on the Centrapay platform. ",
    "url": "/api/invitations.html",
    "relUrl": "/api/invitations.html"
  },"111": {
    "doc": "Invitations",
    "title": "Contents",
    "content": ". | Models . | Invitation | . | Operations . | Get an Invitation by code EXPERIMENTAL | Accept an Invitation EXPERIMENTAL | . | . ",
    "url": "/api/invitations.html#contents",
    "relUrl": "/api/invitations.html#contents"
  },"112": {
    "doc": "Invitations",
    "title": "Models",
    "content": "Invitation . Mandatory Fields . | Field | Type | Description | . | id | String | The Invitation’s unique identifier. | . | code | String | The Invitation code. | . | type | String | The type of the related resource. Supported values are kete-enrolment. | . | resourceId | String | The id of the related resource. | . | resourceType | String | The type of the related resource. Supported values are integration. | . | expiresAt | Timestamp | When the Invitation expires. | . | createdAt | Timestamp | When the Invitation was created. | . | createdBy | CRN | The User or API Key that created the Invitation. | . | updatedAt | Timestamp | When the Invitation was updated. | . | updatedBy | CRN | The User or API Key that updated the Invitation. | . Optional Fields . | Field | Type | Description | . | accepted | Boolean | A flag indicating whether the Invitation has been accepted. | . | acceptedAt | Timestamp | When the Invitation was accepted. | . | acceptedBy | CRN | The User or API Key that accepted the Invitation. | . | acceptedByAccountId | String | The Account id of the user accepting the Invitation. | . ",
    "url": "/api/invitations.html#models",
    "relUrl": "/api/invitations.html#models"
  },"113": {
    "doc": "Invitations",
    "title": "Operations",
    "content": "Get an Invitation by code EXPERIMENTAL . GET /api/invitations/code/{code} . curl https://service.centrapay.com/api/invitations/code/WIj211vFs9cNACwBb04vQw \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"DKTs3U38hdhfEqwF1JKoT2\", \"code\": \"WIj211vFs9cNACwBb04vQw\", \"type\": \"kete-enrolment\", \"resourceId\": \"5ee0c486308f590260d9a07f\", \"resourceType\": \"integration\", \"exipresAt\": \"2021-08-26T00:02:49.488Z\", \"createdAt\": \"2021-08-25T00:02:49.488Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedAt\": \"2021-08-25T00:02:49.488Z\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" } . Accept an Invitation EXPERIMENTAL . POST /api/invitations/{invitationId}/accept . curl -X POST https://service.centrapay.com/api/invitations/DKTs3U38hdhfEqwF1JKoT2/accept \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"code\": \"WIj211vFs9cNACwBb04vQw\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\" }' . Required Fields . | Field | Type | Description | . | code | String | The Invitation code. | . | accountId | String | The Account id of the user accepting the Invitation. | . Example response payload . { \"id\": \"DKTs3U38hdhfEqwF1JKoT2\", \"code\": \"WIj211vFs9cNACwBb04vQw\", \"type\": \"kete-enrolment\", \"resourceId\": \"5ee0c486308f590260d9a07f\", \"resourceType\": \"integration\", \"exipresAt\": \"2021-08-26T00:02:49.488Z\", \"createdAt\": \"2021-08-25T00:02:49.488Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"accepted\": true, \"acceptedAt\": \"2021-08-25T10:12:22.122Z\", \"acceptedBy\": \"crn::user:e2837e88-d408-11eb-8eac-3e22fb52e878\", \"acceptedByAccountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"updatedAt\": \"2021-08-25T10:12:22.122Z\", \"updatedBy\": \"crn::user:e2837e88-d408-11eb-8eac-3e22fb52e878\" } . Error Responses . | Status | Code | Description | . | 403 | INVITATION_EXPIRED | The Invitation is expired. | . | 403 | INVITATION_ALREADY_ACCEPTED | The Invitation has already been accepted. | . ",
    "url": "/api/invitations.html#operations",
    "relUrl": "/api/invitations.html#operations"
  },"114": {
    "doc": "Legacy",
    "title": "Legacy Payment Requests",
    "content": "Centrapay Payment Requests are serviced via two sets of endpoints; the “next” version (documented Payment Requests) and the “legacy” version (documented on this page). Use of legacy endpoints for new integrations is discouraged where alternative endpoints have been provided. Legacy Payment Request endpoints also have interactive Swagger documentation. ",
    "url": "/api/legacy-payment-requests#legacy-payment-requests",
    "relUrl": "/api/legacy-payment-requests#legacy-payment-requests"
  },"115": {
    "doc": "Legacy",
    "title": "Contents",
    "content": ". | Operations . | Creating a payment request | Getting the information about a payment request | Paying a payment request | Cancelling a payment request | Voiding a payment request | Refunding a transaction | . | Webhooks . | Life-cycle Events That Trigger Webhooks | Webhook Payload | Webhook JWT Validation | Decoded Webhook JWT Examples | . | . ",
    "url": "/api/legacy-payment-requests#contents",
    "relUrl": "/api/legacy-payment-requests#contents"
  },"116": {
    "doc": "Legacy",
    "title": "Operations",
    "content": ". Creating a payment request . Swagger Docs . POST /payments/api/requests.create . curl -X POST https://service.centrapay.com/payments/api/requests.create \\ -H \"X-Api-Key: $api_key\" \\ -d merchantId=5efbe17d96c083633e2b9241 \\ -d clientId=5efbe2fb96c08357bb2b9242 \\ -d amount=300 \\ -d asset=NZD . Required Parameters . | Parameter | Description | . | amount | The payment amount in cents | . | asset | The currency code (e.g. ‘NZD’) | . | merchantId | The id of the merchant creating the request | . | clientId | The id of the merchant specific client configuration | . See Asset Types for the list of possible asset values for each Asset Type. Optional Parameters . | Parameter | Description | . | description | Description of the payment | . | externalReference | Unique merchant reference for the payment request | . | notifyUrl | The URL that will receive POST requests from the webhook | . | paymentExpirySeconds | The amount of seconds until a request expires, must be an integer greater than 0 and less than 86400 (24 hours) | . | terminalId | The payment system terminal Id. Required for NZ Epay integration. | . | deviceId | Physical payment system device Id | . | patronCode | Associate this payment request with an active Patron Code. | . Error Responses . | Status | Code | Description | . | 400 | CHECKSUM_FAILED | patronCode luhn checksum digit doesn’t pass. | . | 403 | PATRON_CODE_INVALID | patronCode doesn’t exist or has expired. | . | 403 | MERCHANT_CONFIGURATION_NOT_FOUND | There was no merchant configuration found for the supplied merchantId and clientId. | . | 403 | NO_AVAILABLE_PAYMENT_OPTIONS | No payment options match the requested payment parameters. | . Getting the information about a payment request . Swagger Docs . GET /payments/api/requests.info . curl -G https://service.centrapay.com/payments/api/requests.info \\ -H \"X-Api-Key: $api_key\" \\ -d requestId=TyqV56mEkNLUeiY2QskHNR . Required Parameters . | Parameter | Description | . | requestId | The payment requestId that is generated when requests.create is called | . Error Responses . | Http code | Error code | Message | Description | . | 404 | 2 | REQUEST_NOT_FOUND | The provided request doesn’t exist. | . Example response payload of a new request . { \"requestId\": \"TyqV56mEkNLUeiY2QskHNR\", \"shortCode\": \"CP-C7F-ZS5\", \"merchantId\": \"5efbe17d96c083633e2b9241\", \"merchantName\": \"NZD Test Merchant\", \"clientId\": \"5efbe2fb96c08357bb2b9242\", \"denomination\": { \"asset\": \"NZD\", \"amount\": 100 }, \"payments\": [ { \"ledger\": \"centrapay.nzd.test\", \"amount\": 100, \"methods\": [ \"qr_code\" ] } ], \"qrCode\": \"https://app.centrapay.com/pay/TyqV56mEkNLUeiY2QskHNR\", \"requestCode\": \"https://app.centrapay.com/pay/TyqV56mEkNLUeiY2QskHNR\", \"status\": \"new\", \"createdAt\": \"2021-11-29T23:04:54.253Z\", \"updatedAt\": \"2021-11-29T23:04:54.253Z\", \"liveness\": \"test\", \"paymentExpirySeconds\": 120 } . Example response payload of a paid request . { \"requestId\": \"TyqV56mEkNLUeiY2QskHNR\", \"shortCode\": \"CP-C7F-ZS5\", \"merchantId\": \"5efbe17d96c083633e2b9241\", \"merchantName\": \"NZD Test Merchant\", \"clientId\": \"5efbe2fb96c08357bb2b9242\", \"denomination\": { \"asset\": \"NZD\", \"amount\": 100 }, \"payments\": [ { \"ledger\": \"centrapay.nzd.test\", \"amount\": 100, \"methods\": [ \"qr_code\" ] } ], \"qrCode\": \"https://app.centrapay.com/pay/TyqV56mEkNLUeiY2QskHNR\", \"requestCode\": \"https://app.centrapay.com/pay/TyqV56mEkNLUeiY2QskHNR\", \"status\": \"paid\", \"createdAt\": \"2021-11-29T23:04:54.253Z\", \"updatedAt\": \"2021-11-29T23:05:38.254Z\", \"liveness\": \"test\", \"paymentExpirySeconds\": 120, \"paidBy\": { \"ledger\": \"centrapay.nzd.test\", \"type\": \"centrapay.nzd.test\", \"authCode\": \"3MhaANvdS79qhvAj6nYFNT\", \"responseCode\": \"1234\", \"receipt\": \"\", \"v2\": true, \"paidAt\": \"2021-11-29T23:05:38.000Z\", \"amount\": 100, \"account\": \"3MhaANvdS79qhvAj6nYFNT\", \"transactionId\": \"TyqV56mEkNLUeiY2QskHNR\", \"description\": \"Centrapay Test NZD\", \"settlementDate\": \"2021-11-29T23:05:38.000Z\", \"assetTotals\": [ { \"type\": \"centrapay.nzd.test\", \"description\": \"Centrapay Test NZD\", \"settlementDate\": \"2021-11-29T23:05:38.000Z\", \"total\": { \"amount\": \"100\", \"currency\": \"NZD\" } } ] } } . Paying a payment request . Swagger Docs . POST /payments/api/requests.pay . curl -X POST https://service.centrapay.com/payments/api/requests.pay \\ -H \"X-Api-Key: $api_key\" \\ -d authorization=12345678 \\ -d ledger=g.pocketvouchers.pv \\ -d requestId=7d2b1d52-b609-4ccd-b4cc-c4a9af881bd9 . Required Parameters . | Parameter | Description | . | requestId | The id of the payment request to pay. See requests.create. | . | ledger | The selected payment option to use. See below for expected values. | . | authorization | An identifier that can be used to pay or verify payment. See below for expected values. | . Expected Ledger and Authorization Values . The “ledger” parameter indicates which payment option has been selected to pay the payment request. The selected payment option must be one of the options available for the payment request as per the payments array in the requests.create and requests.info responses. The table below lists the possible ledger and authorization param values. The asset type is the value used to configure the merchant. The ledger param value is returned with the payment request info as payments[].ledger. | Asset Type | Ledger Param Value | Authorization Param Value | . | centrapay.nzd.main | centrapay.nzd.main | Centrapay wallet id | . | centrapay.nzd.test | centrapay.nzd.test | Centrapay wallet id | . | epay.nzd.main | epay.nzd.main | Centrapay asset id | . | pocketvouchers | g.pocketvouchers.pv | Pocket Vouchers voucher code | . | bitcoin.main | g.crypto.bitcoin.mainnet | Bitcoin transaction id | . | cennznet.main | cennznet.main | Cennznet transaction id | . | zap.main | zap.main | Waves transaction id | . | test | g.test.testUplink | Any | . Centrapay Asset Permissions . To pay with a Centrapay asset or wallet ledger the user (identified by the API Key or identity token) must have permission to redeem the asset or transfer funds from the specified wallet. Testing Pocket Vouchers . To test Pocket Vouchers, generate a test value voucher by texting “CENTRALBONUS” to 393. You will then receive a response text containing an 8 digit voucher code that has $20 of loaded credit. The received code is only valid for two weeks from the issue date. You might get charged your standard text rates from your provider. Error Responses . | Http code | Message | Description | . | 403 | REQUEST_EXPIRED | Action cannot be completed because the request has expired. | . | 403 | REQUEST_PAID | Action cannot be completed because the request has been paid. | . | 403 | REQUEST_CANCELLED | Action cannot be completed because the request has already been cancelled. | . | 403 | INVALID_ASSET_TYPE | The merchant is not configured with the provided asset type. | . | 403 | INACTIVE_ASSET | The asset is not spendable. It may have been disabled, expired, or already spent. | . | 403 | INVALID_MERCHANT_CONFIG | The merchant is not configured properly to satisfy the payment request. This could be due to incorrect information, or the merchant’s credentials might be blocked by an external service. | . | 403 | QUOTA_EXCEEDED | The payment pay request exceeds the allowed spend quota supplied. | . | 403 | INSUFFICIENT_ASSET_VALUE | The asset has insufficient funds to pay the payment request or the transaction amount received by Centrapay is less than the total of the payment. | . | 403 | ASSET_REDEMPTION_DENIED | The asset redemption has been unsuccessful due to an error with provided payment parameters, the merchant, or the asset. | . Cancelling a payment request . Swagger Docs . POST /payments/api/requests.cancel . curl -X POST https://service.centrapay.com/payments/api/requests.cancel \\ -H \"X-Api-Key: $api_key\" \\ -d requestId=a95b3b0d-1278-4613-8772-20d146065a2e . Required Parameters . | Parameter | Description | . | requestId | The payment requestId that is generated when requests.create is called | . Error Responses . | Http code | Error code | Message | Description | . | 404 | 2 | REQUEST_NOT_FOUND | The provided request doesn’t exist. | . | 400 | 18 | REQUEST_EXPIRED | Action cannot be completed because the request has expired. | . | 400 | 19 | REQUEST_PAID | Action cannot be completed because the request has been paid. | . Voiding a payment request . Swagger Docs . POST /payments/api/requests.void . curl -X POST https://service.centrapay.com/payments/api/requests.void \\ -H \"X-Api-Key: $api_key\" \\ -d requestId=a95b3b0d-1278-4613-8772-20d146065a2e . Required Parameters . | Parameter | Description | . | requestId | The payment requestId that is generated when requests.create is called. | . Error Responses . | Http code | Error code | Message | Description | . | 404 | 2 | REQUEST_NOT_FOUND | The provided request doesn’t exist. | . | 403 |   | VOID_WINDOW_EXCEEDED | The amount of time since the payment request was created exceeds the window of time a payment request can be voided (24 hours). | . Voiding a payment request can cause it to be cancelled or refunded. Therefore, this endpoint can give the same error responses as requests.cancel and transactions.refund. After 24 hours voiding a payment request will be disallowed, however a refund can still be made against the payment request if it has been paid successfully. Refunding a transaction . Swagger Docs . POST /payments/api/transactions.refund . curl -X POST https://service.centrapay.com/payments/api/transactions.refund \\ -H \"X-Api-Key: $api_key\" \\ -d transactionId=7d2b1d52-b609-4ccd-b4cc-c4a9af881bd9 \\ -d amount=100 . Refunding a transaction can be done with or without an external reference. Refund without external reference . If you refund a transaction without providing an external reference, you will get a successful response for the first request and then an ALREADY_REFUNDED message for any refund requests that follow for the same transaction, unless an external reference is provided. Refund with external reference . If you provide an external reference then a transaction can be refunded multiple times provided that the external reference is unique for each refund request. When a duplicate external reference is provided when attempting to refund the same transaction we return a successful response if the amount of the request is the same both times but do not process another refund, this is because we assume it to be a repeat request. If the amount is different you will get a REPEAT_REFERENCE error message. Required Parameters for one time refund . | Parameter | Description | . | transactionId | The transaction to refund. The transaction id for a payment can be obtained from a webhook notification or from requests.info. | . | amount | The amount to refund in cents | . Additional required Parameter for multiple refunds . | Parameter | Description | . | externalReference | A reference supplied by the merchant that must be unique for each refund of that transaction, can be anything you want but it must be unique. | . Error Responses . | Http code | Error code | Message | Description | . | 404 | 3 | TRANSACTION_NOT_FOUND | The provided transaction doesn’t exist. | . | 400 | 276 | ALREADY_REFUNDED | The transaction has already been refunded. | . | 400 | 277 | INVALID_AMOUNT | The refund requested is greater than the transaction amount. | . | 400 | 280 | REPEAT_REFERENCE | A separate refund request for the same transaction has the same external reference, trying to refund the same transaction twice with the same external reference is not allowed. If the amount of the refund is the same we assume it is a repeat request and return 200. | . | 403 | 281 | PARTIAL_REFUNDS_NOT_ALLOWED | The asset does not support partial refunds. | . | 403 | 283 | INACTIVE_ASSET | The asset is not refundable. It may have been disabled, expired, or already refunded. | . | 403 |   | REFUND_NOT_SUPPORTED | The asset type does not support refunds. | . | 403 |   | REFUND_WINDOW_EXCEEDED | The time since the payment exceeds the window of time a transaction can be refunded in. | . ",
    "url": "/api/legacy-payment-requests#operations",
    "relUrl": "/api/legacy-payment-requests#operations"
  },"117": {
    "doc": "Legacy",
    "title": "Webhooks",
    "content": "Webhook notifications are sent for significant Payment life-cycle events. The Webhook endpoint is notified by sending an HTTP POST request to the notifyUrl defined in the Payment Request. Life-cycle Events That Trigger Webhooks . The supported event types that will be notified to the Payment Requests webhook and the associated “transactionType” value that will be sent in the payload are: . | Event Type | Value of “transactionType” | . | Payment Request Cancelled | CANCELLED | . | Payment Request Expired | EXPIRED | . | Transaction Completed | PURCHASE | . | Transaction Refunded | REFUND | . Payment Request Cancelled . A payment request can be cancelled by either calling the requests.cancel or requests.void endpoint before a request has been paid successfully. When a request has been cancelled we send a JWT that when decoded matches the Payment Request Cancelled example in the Decoded Webhook JWT Examples section below. Payment Request Expired . A payment request expires two minutes after being created if it hasn’t been cancelled, or paid. When a request has expired we send a JWT that when decoded matches the Payment Request Cancelled example in the Decoded Webhook JWT Examples section below with the transactionType set to EXPIRED. Transaction Completed . A transaction is considered complete when requests.pay is called with parameters that satisfy a payment request and the request has been paid successfully. When a transaction has been completed we send a JWT that when decoded matches the Transaction Completed example in the Decoded Webhook JWT Examples section below. Transaction Refunded . A transaction can be refunded one to many times and each time a transaction has been refunded successfully we notify the webhook associated with the original payment request. A transaction can be refunded when transactions.refund has been called for a partial or full refund, or when requests.void is called for a request that has been paid. When a transaction has been refunded we send a JWT that when decoded matches the Transaction Completed example in the Decoded Webhook JWT Examples section below but with transactionType set to REFUND. Webhook Payload . The body of the webhook is a JSON document with the following format: . { \"token\": \"${JWT}\" } . The decoded JWT will contain a “transaction” property with a “transactionType” that indicates the event type. Depending on the type of event, the payload will also contain additional details about the transaction and payment request. For example: . { \"transaction\": { \"transactionType\": \"REFUND\", \"request\": { \"requestId\": \"bec358bf-edb5-4633-a785-a95cc281d3b7\", \"denomination\": { \"asset\": \"NZD\", \"amount\": \"100\" } } } } . Webhook Payload Fields . | Property | Description | . | transactionId | Id of the transaction | . | transactionType | Indicates which event triggered the notification message | . | state | Current state of the transaction | . | ledger | The ledger at which the authorization was processed | . | amount | Transaction amount in the lowest denomination available | . | createdAt | Timestamp at which the request was created | . | updatedAt | Timestamp at which the request was updated | . | type | The payment type used by the issuer to reconcile settlement | . | request | Request object, see details at requests.info | . | authCode | Authorization code used to settle this transaction | . Webhook JWT Validation . A webhook JWT can be validated by checking the signature against the Centrapay Webhook public key: . -----BEGIN PUBLIC KEY----- MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEt+vW2fE0mLLmdzJtYrz7J9q/yEXl gmIjCXdv3VNvYfTsaBO5PJNiaD3l9lD8PzEQu31ePsOG81mDVuo40+dgLg== -----END PUBLIC KEY----- . Decoded Webhook JWT Examples . Transaction Completed Successfully . { \"transaction\": { \"transactionId\": \"E6ctbmgmkgZ3xnPk3BkGvb\", \"transactionType\": \"PURCHASE\", \"ledger\": \"g.crypto.bitcoin.mainnet\", \"state\": \"completed\", \"amount\": 2000, \"request\": { \"requestId\": \"0FmbuirpQG4iuy6xAV9R1p\", \"merchantId\": \"613919a417bea000290e97e3\", \"externalReference\": \"12345sixseveneightnineten\", \"denomination\": { \"asset\": \"NZD\", \"amount\": 2000 } }, \"createdAt\": \"2018-10-02T00:29:09.307Z\", \"updatedAt\": \"2018-10-02T00:29:11.383Z\", \"type\": \"BITCOIN\", \"authCode\": \"961241\" } } . Payment Request Cancelled . { \"transaction\": { \"transactionType\": \"CANCELLED\", \"request\": { \"requestId\": \"0FmbuirpQG4iuy6xAV9R1p\", \"merchantId\": \"613919a417bea000290e97e3\", \"clientId\": \"613919a417bea000290e97e4\", \"denomination\": { \"asset\": \"NZD\", \"amount\": \"1\" } } } } . ",
    "url": "/api/legacy-payment-requests#webhooks",
    "relUrl": "/api/legacy-payment-requests#webhooks"
  },"118": {
    "doc": "Legacy",
    "title": "Legacy",
    "content": " ",
    "url": "/api/legacy-payment-requests",
    "relUrl": "/api/legacy-payment-requests"
  },"119": {
    "doc": "Managed Integrations",
    "title": "Managed Integration",
    "content": "A Managed Integration is an Integration which a third party can control. ",
    "url": "/api/managed-integrations#managed-integration",
    "relUrl": "/api/managed-integrations#managed-integration"
  },"120": {
    "doc": "Managed Integrations",
    "title": "Contents",
    "content": ". | Models . | Managed Integration | Invitation Summary EXPERIMENTAL | Bank Account | . | Params . | kete-enrolment | paypal-referral | . | Operations . | Create or Update a Managed Integration EXPERIMENTAL | Get a Managed Integration EXPERIMENTAL | . | . ",
    "url": "/api/managed-integrations#contents",
    "relUrl": "/api/managed-integrations#contents"
  },"121": {
    "doc": "Managed Integrations",
    "title": "Models",
    "content": "Managed Integration . Mandatory Fields . | Field | Type | Description | . | id | String | The Managed Integration’s unique identifier. | . | type | String | The type of Managed Integration. Supported types are kete-enrolment, paypal-referral. | . | enabled | Boolean | Flag indicating whether the Managed Integration should become active or inactive. | . | status | String | Current status of the Managed Integration. Supported values are created, pending, provisioning, active, inactive and archived. | . | externalId | String | Field used to reference an id from an external system. | . | params | Object | Params depending on the Managed Integration type. | . | createdAt | Timestamp | When the Managed Integration was created. | . | createdBy | CRN | The User or API Key that created the Managed Integration. | . | updatedAt | Timestamp | When the Managed Integration was updated. | . | updatedBy | CRN | The User or API Key that updated the Managed Integration. | . Optional Fields . | Field | Type | Description | . | claimedByAccountId | String | Centrapay account id used to claim the Managed Integration. | . | claimedBy | CRN | The User or API Key that claimed the Managed Integration. | . | claimedAt | Timestamp | When the Managed Integration was claimed. | . | invitation | Invitation Summary | A summary of the associated Invitation. | . | inProgress | Boolean | Flag indicating whether a status transition is in progress. | . | test | Boolean | A flag which is present if the Managed Integration is for testing | . Invitation Summary EXPERIMENTAL . A summary of the Invitation for a Managed Integration. Fields . | Name | Type | Description | . | id | String | The Invitation’s unique identifier. | . | code | String | The Invitation code. | . | expiresAt | Timestamp | When the Invitation expires. | . Bank Account . Mandatory Fields . | Field | Type | Description | . | number | String | The bank account number | . ",
    "url": "/api/managed-integrations#models",
    "relUrl": "/api/managed-integrations#models"
  },"122": {
    "doc": "Managed Integrations",
    "title": "Params",
    "content": "kete-enrolment . Mandatory Fields . | Field | Type | Description | . | bankAccounts | Array | A list of Bank Account objects. | . | givenName | String | First name. | . | familyName | String | Last name. | . | email | String | Email address. | . | phoneNumber | String | The user’s NZ phone number. | . paypal-referral . Mandatory Fields . | Field | Type | Description | . | centrapayMerchantId | String | The ID of the Centrapay merchant that will be onboarded. | . | email | String | The email address to send the PayPal referral to. | . ",
    "url": "/api/managed-integrations#params",
    "relUrl": "/api/managed-integrations#params"
  },"123": {
    "doc": "Managed Integrations",
    "title": "Operations",
    "content": "Create or Update a Managed Integration EXPERIMENTAL . PUT /api/managed-integrations/{type}/{externalId} . curl -X PUT https://service.centrapay.com/api/managed-integrations/kete-enrolment/DKTs3U38hdhfEqwF1JKoT2 \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"enabled\": true, \"params\": { \"bankAccounts\": [ { \"number\": \"00-1111-2222222-00\" } ], \"givenName\": \"John\", \"familyName\": \"Doe\", \"email\": \"john@doe.com\", \"phoneNumber\": \"+64270000000\" } }' . Required Fields . | Field | Type | Description | . | enabled | Boolean | Flag indicating whether the Managed Integration should become active or inactive. | . | params | Object | Params depending on the Managed Integration type. | . Optional Fields . | Field | Type | Description | . | test | Boolean | Flag indicating the Managed Integration is for testing, this cannot be changed once the resource has been created. | . Example response payload . { \"id\": \"5ee0c486308f590260d9a07f\", \"type\": \"kete-enrolment\", \"externalId\": \"DKTs3U38hdhfEqwF1JKoT2\", \"enabled\": true, \"params\": { \"bankAccounts\": [ { \"number\": \"00-1111-2222222-00\" } ], \"givenName\": \"John\", \"familyName\": \"Doe\", \"email\": \"john@doe.com\", \"phoneNumber\": \"+64270000000\" }, \"invitation\": { \"id\": \"dadfaTs3U38hdhfEqwF1JKoT2\", \"code\": \"eg44tetbfsJHFJHFsfhbgds23\", \"expiresAt\": \"2020-06-13T01:17:46.499Z\" }, \"status\": \"provisioning\", \"claimedByAccountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"claimedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"claimedAt\": \"2020-06-12T01:17:46.499Z\", \"inProgress\": true, \"createdAt\": \"2020-06-11T01:17:46.499Z\", \"createdBy\": \"crn:BIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedAt\": \"2020-06-12T01:17:46.499Z\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" } . Error Responses . | Status | Code | Description | . | 400 | INVALID_PARAMS | Invalid Params provided for Managed Integration type. | . | 403 | MERCHANT_LIVENESS_MISMATCH | The test flag on the merchant doesn’t match the test flag on the paypal-referral managed integration. | . | 403 | MERCHANT_NOT_FOUND | The merchant is not found with the centrapayMerchantId on the paypal-referral managed integration. | . Get a Managed Integration EXPERIMENTAL . GET /api/managed-integrations/{id} . curl https://service.centrapay.com/api/managed-integrations/dh375hdh08f590260d9a07f \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"dh375hdh08f590260d9a07f\", \"type\": \"kete-enrolment\", \"externalId\": \"DKTs3U38hdhfEqwF1JKoT2\", \"enabled\": true, \"params\": { \"bankAccounts\": [ { \"number\": \"00-1111-2222222-00\" } ], \"givenName\": \"John\", \"familyName\": \"Doe\", \"email\": \"john@doe.com\", \"phoneNumber\": \"+64270000000\" }, \"invitation\": { \"id\": \"dadfaTs3U38hdhfEqwF1JKoT2\", \"code\": \"eg44tetbfsJHFJHFsfhbgds23\", \"expiresAt\": \"2020-06-13T01:17:46.499Z\" }, \"status\": \"pending\", \"inProgress\": true, \"createdAt\": \"2020-06-11T01:17:46.499Z\", \"createdBy\": \"crn:BIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedAt\": \"2020-06-12T01:17:46.499Z\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" } . ",
    "url": "/api/managed-integrations#operations",
    "relUrl": "/api/managed-integrations#operations"
  },"124": {
    "doc": "Managed Integrations",
    "title": "Managed Integrations",
    "content": " ",
    "url": "/api/managed-integrations",
    "relUrl": "/api/managed-integrations"
  },"125": {
    "doc": "Media Uploads",
    "title": "Media Uploads",
    "content": " ",
    "url": "/api/media-uploads",
    "relUrl": "/api/media-uploads"
  },"126": {
    "doc": "Media Uploads",
    "title": "Contents",
    "content": ". | Models . | Media Upload | . | Operations . | Create a presigned URL for Media Upload EXPERIMENTAL | Get Media Upload Location EXPERIMENTAL | . | . ",
    "url": "/api/media-uploads#contents",
    "relUrl": "/api/media-uploads#contents"
  },"127": {
    "doc": "Media Uploads",
    "title": "Models",
    "content": "Media Upload . Mandatory Fields . | Field | Type | Description | . | id | String | The Media Upload’s unique identifier. | . | accountId | String | The Media Upload’s owning Centrapay Account id. | . | mimeType | String | The media (MIME) type of the upload. | . | fileName | String | The file name of the upload. | . | createdAt | Timestamp | When the Media Upload was created. | . | updatedAt | Timestamp | When the Media Upload was updated. | . | createdBy | CRN | The User or API Key that created the Media Upload. | . | updatedBy | CRN | The User or API Key that updated the Media Upload. | . Optional Fields . | Field | Type | Description | . | uploadUrl | String | A presigned URL that gives users time-limited permission to upload media. | . ",
    "url": "/api/media-uploads#models",
    "relUrl": "/api/media-uploads#models"
  },"128": {
    "doc": "Media Uploads",
    "title": "Operations",
    "content": "Create a presigned URL for Media Upload EXPERIMENTAL . POST /api/media-uploads . curl -X POST https://service.centrapay.com/api/media-uploads \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"mimeType\": \"image/png\", \"fileName\": \"image.png\" }' . Required Fields . | Field | Type | Description | . | accountId | String | The Media Upload’s owning Centrapay Account id. | . | mimeType | String | The media (MIME) type of the upload. | . | fileName | String | The file name of the upload. | . Example response payload . { \"id\": \"DKTs3U38hdhfEqwF1JKoT2\", \"uploadUrl\": \"https://media-upload.centrapay.com/image.png?jhbdsfau67ewejshb=487hsdjhbdgs743\" } . Get Media Upload Location EXPERIMENTAL . GET /api/media-uploads/{mediaUploadId}/location . curl https://service.centrapay.com/api/media-uploads/DKTs3U38hdhfEqwF1JKoT2/location \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"url\": \"https://media-upload.centrapay.com/image.png?jhbdsfau67ewejshb=487hsdjhbdgs743\" } . ",
    "url": "/api/media-uploads#operations",
    "relUrl": "/api/media-uploads#operations"
  },"129": {
    "doc": "Merchant Configs",
    "title": "Merchant Configs",
    "content": "A Merchant Config defines the available payment options for paying a Payment Request. ",
    "url": "/api/merchant-configs",
    "relUrl": "/api/merchant-configs"
  },"130": {
    "doc": "Merchant Configs",
    "title": "Contents",
    "content": ". | Models . | Merchant Config | Payment Option Config | . | Operations . | Create a Merchant Config | Get a Merchant Config | List Merchant Configs | Update a Merchant Config | . | . ",
    "url": "/api/merchant-configs#contents",
    "relUrl": "/api/merchant-configs#contents"
  },"131": {
    "doc": "Merchant Configs",
    "title": "Models",
    "content": ". Merchant Config . Required Fields . | Field | Type | Description | . | paymentOptions | Array | Array of Payment Option Configs. | . | createdAt | Timestamp | When the Merchant Config was created. | . | createdBy | CRN | The User or API Key that created the Merchant Config. | . | updatedAt | Timestamp | When the Merchant Config was updated. | . | updatedBy | CRN | The User or API Key that updated the Merchant Config. | . Optional Fields . | Field | Type | Description | . | allowedRedirectUrls | Array | Experimental Allowed prefixes for the redirectUrl property on Payment Requests created with this Config. | . Payment Option Config . Required Fields . | Field | Type | Description | . | type | String | Type of payment method. See supported payment types below. | . Optional Fields . | Field | Type | Description | . | walletId | String | Merchant’s Centrapay Settlement Wallet to receive payments. Optional for centrapay.nzd types, if not supplied then a settlement wallet may be created and then assigned. | . | assetId | String | Merchant’s Centrapay Settlement Asset to receive payments. Optional for kete.nzd and quartz.nzd types, if not supplied then a settlement asset may be created and then assigned. | . | terminalId | String | Merchant’s Epay terminal id. | . | wavesPublicAddress | String | Merchant’s public waves address. Required for zap.main types. | . | paypalMerchantAccountId | String | Id of the PayPal merchants account. Required for paypal.usd and venmo.usd types. | . | paypalStoreId | String | Id of the PayPal merchants store. Required for paypal.usd and venmo.usd types. | . | farmlandsMerchantNumber | String | Id of the Farmlands merchant that funds will be transferred to. | . See Asset Types for values that may be present in the type field. Warning: Test payment options should never be used for live merchant configurations. ",
    "url": "/api/merchant-configs#models",
    "relUrl": "/api/merchant-configs#models"
  },"132": {
    "doc": "Merchant Configs",
    "title": "Operations",
    "content": "Create a Merchant Config . POST /api/merchants/{merchantId}/configs . curl -X POST https://service.centrapay.com/api/merchants/5ee0c486308f590260d9a07f/configs \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"paymentOptions\": [ { \"type\": \"centrapay.nzd.main\", \"walletId\": \"1234c486308f3f0a23f0f92b\" }, { \"type\": \"epay.nzd.main\", \"terminalId\": \"11000021\" }, { \"type\": \"pocketvouchers\" }, { \"type\": \"farmlands.nzd.main\", \"farmlandsMerchantNumber\": \"DbgY2SyD5M85zkePJjsQEf\" } ] }' . Example response payload . { \"id\": \"5ee168e8597be5002af7b454\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"createdAt\": \"2021-11-12T01:17:46.499Z\", \"updatedAt\": \"2021-11-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"paymentOptions\": [ { \"type\": \"centrapay.nzd.main\", \"walletId\": \"1234c486308f3f0a23f0f92b\" }, { \"type\": \"epay.nzd.main\", \"terminalId\": \"11000021\" }, { \"type\": \"pocketvouchers\" }, { \"type\": \"farmlands.nzd.main\", \"farmlandsMerchantNumber\": \"DbgY2SyD5M85zkePJjsQEf\" } ] } . Error Responses . | Status | Code | Description | . | 403 | INVALID_WALLET_TYPE | walletId does not belong to a Settlement Wallet. | . | 403 | LIVENESS_MISMATCH | Only Merchants with the test flag can have merchant configs with test assets, vice versa | . Get a Merchant Config . GET /api/merchants/{merchantId}/configs/{configId} . curl https://service.centrapay.com/api/merchants/5ee0c486308f590260d9a07f/configs/5ee168e8597be5002af7b454 \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"5ee168e8597be5002af7b454\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"createdAt\": \"2021-11-12T01:17:46.499Z\", \"updatedAt\": \"2021-11-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"paymentOptions\": [ { \"type\": \"pocketvouchers\" }, { \"type\": \"farmlands.nzd.main\", \"farmlandsMerchantNumber\": \"DbgY2SyD5M85zkePJjsQEf\" } ] } . List Merchant Configs . GET /api/merchants/{merchantId}/configs . curl https://service.centrapay.com/api/merchants/5ee0c486308f590260d9a07f/configs \\ -H \"X-Api-Key: $api_key\" . Example response payload . [ { \"id\": \"5ee168e8597be5002af7b454\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"createdAt\": \"2021-09-12T01:17:46.499Z\", \"updatedAt\": \"2021-09-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"paymentOptions\": [ { \"type\": \"pocketvouchers\" }, { \"type\": \"farmlands.nzd.main\", \"farmlandsMerchantNumber\": \"DbgY2SyD5M85zkePJjsQEf\" } ] }, { \"id\": \"5ee168e8597be5002af7baed\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"createdAt\": \"2021-11-12T01:17:46.499Z\", \"updatedAt\": \"2021-11-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"paymentOptions\": [ { \"type\": \"test\" } ] } ] . Update a Merchant Config . PUT /api/merchants/{merchantId}/configs/{configId} . curl -X PUT https://service.centrapay.com/api/merchants/5ee0c486308f590260d9a07f/configs/5ee168e8597be5002af7baed \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"paymentOptions\": [ { \"type\": \"bitcoin.main\" }, { \"type\": \"centrapay.nzd.test\", \"walletId\": \"1234c486308f3f0a23f0f92b\" }, { \"type\": \"farmlands.nzd.main\", \"farmlandsMerchantNumber\": \"DbgY2SyD5M85zkePJjsQEf\" } ] }' . Example response payload . { \"id\": \"5ee168e8597be5002af7baed\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"createdAt\": \"2021-09-12T01:17:46.499Z\", \"updatedAt\": \"2021-12-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"paymentOptions\": [ { \"type\": \"bitcoin.main\" }, { \"type\": \"centrapay.nzd.test\", \"walletId\": \"1234c486308f3f0a23f0f92b\" }, { \"type\": \"farmlands.nzd.main\", \"farmlandsMerchantNumber\": \"DbgY2SyD5M85zkePJjsQEf\" } ] } . Error Responses . | Status | Code | Description | . | 403 | INVALID_WALLET_TYPE | walletId does not belong to a Settlement Wallet. | . | 403 | LIVENESS_MISMATCH | Only Merchants with the test flag can have merchant configs with test assets, vice versa | . ",
    "url": "/api/merchant-configs#operations",
    "relUrl": "/api/merchant-configs#operations"
  },"133": {
    "doc": "Merchant Terminals",
    "title": "Integrating Merchant Terminals",
    "content": "Integrating a merchant terminal with Centrapay APIs requires creating, cancelling, voiding and refunding Payment Requests on behalf of Merchants using a “merchant terminal” API key. ",
    "url": "/guides/merchant-terminals#integrating-merchant-terminals",
    "relUrl": "/guides/merchant-terminals#integrating-merchant-terminals"
  },"134": {
    "doc": "Merchant Terminals",
    "title": "Contents",
    "content": ". | API Keys | Merchant Configs | Example Flows | Terminal Interface Guidelines . | Displaying a Button | Displaying an Icon | Displaying QR Codes | . | Integration Architecture | Mitigating Network Issues | Polling vs Webhooks | . ",
    "url": "/guides/merchant-terminals#contents",
    "relUrl": "/guides/merchant-terminals#contents"
  },"135": {
    "doc": "Merchant Terminals",
    "title": "API Keys",
    "content": "To create API keys, you first need to get in touch with Centrapay to be issued an Integrator Account and an “account owner” API key. An “account owner” is a special kind of role that allows you to manage your account. You can use this key to Create an API Key with the “merchant terminal” role. A “merchant terminal” key has a role that can create, cancel, void and refund Payment Requests on behalf of merchants. Warning: You are responsible for the safety of your API keys ",
    "url": "/guides/merchant-terminals#api-keys",
    "relUrl": "/guides/merchant-terminals#api-keys"
  },"136": {
    "doc": "Merchant Terminals",
    "title": "Merchant Configs",
    "content": "Centrapay Merchant Configs represent an available set of configured payment methods that can be utilized by one or more payment terminals by a Merchant. Merchants and merchant configs are managed by Centrapay. The only details you need to be able to create payment requests on their behalf are the merchantId and merchantConfigId (aka clientId). Centrapay will send you these details through whatever channel works for you. Please get in touch to let us know. In the future Centrapay will allow an integrator to on-board their own merchants through APIs using integrator API keys. ",
    "url": "/guides/merchant-terminals#merchant-configs",
    "relUrl": "/guides/merchant-terminals#merchant-configs"
  },"137": {
    "doc": "Merchant Terminals",
    "title": "Example Flows",
    "content": "See Payment Flows for an overview of the API calls required for different payment flows. ",
    "url": "/guides/merchant-terminals#example-flows",
    "relUrl": "/guides/merchant-terminals#example-flows"
  },"138": {
    "doc": "Merchant Terminals",
    "title": "Terminal Interface Guidelines",
    "content": "When configuring a terminal with Centrapay there are a few common touch points that require branded assets. Please use the Centrapay Brand Assets when building the UI for these screens. Displaying a Button . Touch displays should show a button that loads the QR Code screen when pressed. Displaying an Icon . Displays that don’t support touch should show an icon above the button used to load the QR Code screen. Displaying QR Codes . Centrapay QR codes should be displayed with a Centrapay logo in the centre. ",
    "url": "/guides/merchant-terminals#terminal-interface-guidelines",
    "relUrl": "/guides/merchant-terminals#terminal-interface-guidelines"
  },"139": {
    "doc": "Merchant Terminals",
    "title": "Integration Architecture",
    "content": "We strongly recommend Centrapay APIs are invoked from your backend and not directly from your payment terminals. Centralizing the invocation of our APIs from your backend offers the following benefits: . | Merchant network administrators will not need to make additional firewall changes. | Your Centrapay API Keys can be managed centrally inside your secured network. | TLS negotiation with Centrapay APIs can be managed independently of terminal hardware and software updates. | . ",
    "url": "/guides/merchant-terminals#integration-architecture",
    "relUrl": "/guides/merchant-terminals#integration-architecture"
  },"140": {
    "doc": "Merchant Terminals",
    "title": "Mitigating Network Issues",
    "content": "The following mitigations will be helpful to deal with inconsistencies in Payment Request statuses due to network issues and race conditions: . Respect Payment Request Status . Use the Payment Request status as the source of truth when determining if a Payment Request is paid or expired. For example, if cancelling a Payment Request fails with a REQUEST_PAID error then terminal should respond accordingly; either show transaction as paid or initiate a void instead. Timeout Offset . Payment Requests have a configurable timeout which defaults to 2 minutes. Payment integrators should make sure that the payment terminal times out 5-10 seconds after the payment request. For example, if the payment terminal has a 90 second payment timeout then the Payment Request could be created with an 85 second timeout to prevent the payment terminal expiring at the same time as the payment request is paid. Retry Before Giving Up . When faced with an unknown error while checking the status of a payment request, terminal integrations should retry at least once before voiding the transaction. Void When Status Unknown . If the status of a transaction cannot be determined to be successful after retrying then the payment request should be voided. Voiding a payment request will cancel the request and trigger any refunds if necessary. See Void Payment Request. ",
    "url": "/guides/merchant-terminals#mitigating-network-issues",
    "relUrl": "/guides/merchant-terminals#mitigating-network-issues"
  },"141": {
    "doc": "Merchant Terminals",
    "title": "Polling vs Webhooks",
    "content": "Integrators can optionally take advantage of Payment Request Webhooks to help improve responsiveness to Payment Request status changes. However, integrators must not rely solely on webhooks and must fall back to polling the Get Payment Request endpoint to reliably detect when a Payment Request is paid. ",
    "url": "/guides/merchant-terminals#polling-vs-webhooks",
    "relUrl": "/guides/merchant-terminals#polling-vs-webhooks"
  },"142": {
    "doc": "Merchant Terminals",
    "title": "Merchant Terminals",
    "content": " ",
    "url": "/guides/merchant-terminals",
    "relUrl": "/guides/merchant-terminals"
  },"143": {
    "doc": "Merchants",
    "title": "Merchants",
    "content": "A merchant is an initiator of Payment Requests. A Merchant has Merchant Configs which define the payment methods available for a Payment Request. ",
    "url": "/api/merchants",
    "relUrl": "/api/merchants"
  },"144": {
    "doc": "Merchants",
    "title": "Contents",
    "content": ". | Models . | Merchant | Settlement Config | . | Operations . | Create a Merchant | Get a Merchant | List all Merchants | List Merchants for Account | Update a Merchant | . | . ",
    "url": "/api/merchants#contents",
    "relUrl": "/api/merchants#contents"
  },"145": {
    "doc": "Merchants",
    "title": "Models",
    "content": "Merchant . Mandatory Fields . | Field | Type | Description | . | id | String | Merchant’s unique identifier. | . | accountId | String | Id of Merchant’s owning Centrapay account. | . | name | String | Merchant name. | . | country | String | Merchant ISO 3166 country code. Must match the “region” on the Account. | . | createdAt | Timestamp | When the Merchant was created. | . | createdBy | CRN | The User or API Key that created the Merchant. | . | updatedAt | Timestamp | When the Merchant was updated. | . | updatedBy | CRN | The User or API Key that updated the Merchant. | . Optional Fields . | Field | Type | Description | . | test | Boolean | EXPERIMENTAL Flag indicating merchant is for testing. | . | settlementConfig | Settlement Config | EXPERIMENTAL Merchant settlement config | . | location | Location | EXPERIMENTAL Physical Location of Merchant | . Settlement Config . Optional Fields . | Field | Type | Description | . | bankAccountId | String | The id of the bank account funds should be settled into. This must belong to the account | . ",
    "url": "/api/merchants#models",
    "relUrl": "/api/merchants#models"
  },"146": {
    "doc": "Merchants",
    "title": "Operations",
    "content": "Create a Merchant . POST /api/merchants . curl -X POST https://service.centrapay.com/api/merchants \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"accountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"name\": \"Centrapay Cafe Auckland\", \"country\": \"NZ\", \"test\": false }' . Example response payload . { \"id\": \"5ee0c486308f590260d9a07f\", \"accountId\": \"yqwyya0rzz3vvshqw0474u89xtj5fn\", \"name\": \"Centrapay Cafe Auckland\", \"country\": \"NZ\", \"test\": false, \"createdAt\": \"2021-11-12T01:17:46.499Z\", \"updatedAt\": \"2021-11-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" } . Error Responses . | Status | Code | Description | . | 403 | BANK_ACCOUNT_MISMATCH | The bank account in the settlement config does not belong to the same account. | . | 403 | ACCOUNT_REGION_MISMATCH | The merchant’s “country” does not match the “region” on the Account. | . Get a Merchant . GET /api/merchants/{merchantId} . curl https://service.centrapay.com/api/merchants/5ee0c486308f590260d9a07f \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"id\": \"5ee0c486308f590260d9a07f\", \"accountId\": \"yqwyya0rzz3vvshqw0474u89xtj5fn\", \"name\": \"Parisian - Brown\", \"test\": false, \"country\": \"AD\", \"createdAt\": \"2021-11-12T01:17:46.499Z\", \"updatedAt\": \"2021-11-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" } . List all Merchants . Returns a paginated list of Merchants which belong to the authenticated subject. GET /api/merchants . curl https://service.centrapay.com/api/merchants \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"items\": [ { \"accountId\": \"3xsjxxwmnpkunjbcpekyekc84rzxr4\", \"country\": \"BT\", \"id\": \"5f6bf6ff81552101f8ff6122\", \"name\": \"Adams, Runolfsdottir and Botsford\", \"test\": true, \"createdAt\": \"2021-11-12T01:17:46.499Z\", \"updatedAt\": \"2021-11-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" }, { \"accountId\": \"3xsjxxwmnpkunjbcpekyekc84rzxr4\", \"country\": \"GM\", \"id\": \"5f6bf6ff81552101f8ff6123\", \"name\": \"Vandervort Inc\", \"test\": false, \"createdAt\": \"2021-11-12T01:17:46.499Z\", \"updatedAt\": \"2021-11-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" }, { \"accountId\": \"3xsjxxwmnpkunjbcpekyekc84rzxr4\", \"country\": \"MZ\", \"id\": \"5f6bf6ff81552101f8ff6124\", \"name\": \"West, O'Reilly and Huels\", \"test\": true, \"createdAt\": \"2021-11-12T01:17:46.499Z\", \"updatedAt\": \"2021-11-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" } ] } . List Merchants for Account . Returns a paginated list of Merchants attached to an Account. GET /api/accounts/{accountId}/merchants . curl https://service.centrapay.com/api/accounts/Jaim1Cu1Q55uooxSens6yk/merchants \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"items\": [ { \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"country\": \"BT\", \"id\": \"5f6bf6ff81552101f8ff6122\", \"name\": \"Adams, Runolfsdottir and Botsford\", \"test\": true, \"createdAt\": \"2021-11-12T01:17:46.499Z\", \"updatedAt\": \"2021-11-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" }, { \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"country\": \"GM\", \"id\": \"5f6bf6ff81552101f8ff6123\", \"name\": \"Vandervort Inc\", \"test\": false, \"createdAt\": \"2021-11-12T01:17:46.499Z\", \"updatedAt\": \"2021-11-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" } ] } . Update a Merchant . PUT /api/merchants/{merchantId} . curl -X PUT https://service.centrapay.com/api/merchants/5ee0c486308f590260d9a07f \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"name\": \"Centrapay Café\", \"location\": { \"lat\": \"-36.8483579\", \"lng\": \"174.7725834\", \"city\": \"Auckland\", \"postCode\": \"1010\", \"country\": \"NZ\" }, \"settlementConfig\": { \"bankAccountId\": \"WRhAxxWpTKb5U7pXyxQjjY\" } }' . Example response payload . { \"id\": \"5ee0c486308f590260d9a07f\", \"accountId\": \"yqwyya0rzz3vvshqw0474u89xtj5fn\", \"name\": \"Centrapay Café\", \"test\": false, \"country\": \"NZ\", \"location\": { \"lat\": \"-36.8483579\", \"lng\": \"174.7725834\", \"city\": \"Auckland\", \"postCode\": \"1010\", \"country\": \"NZ\" }, \"settlementConfig\": { \"bankAccountId\": \"WRhAxxWpTKb5U7pXyxQjjY\" }, \"createdAt\": \"2021-09-12T01:11:22.491Z\", \"updatedAt\": \"2021-11-12T01:17:46.499Z\", \"createdBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\", \"updatedBy\": \"crn:WIj211vFs9cNACwBb04vQw:api-key:MyApiKey\" } . Error Responses . | Status | Code | Description | . | 403 | BANK_ACCOUNT_MISMATCH | The bank account in the settlement config does not belong to the same account. | . ",
    "url": "/api/merchants#operations",
    "relUrl": "/api/merchants#operations"
  },"147": {
    "doc": "Pagination",
    "title": "Pagination",
    "content": "Pagination allows a listing endpoint to return a subset of results. The goal is to reduce memory usage and speed up page rendering. To retrieve the next page, a pageKey can be supplied. Typically this will be the nextPageKey returned from your previous query. Some of our endpoints have been designed to be forwards compatible with pagination. When we do bring support to GET endpoints for listing, these conventions will be followed. Models . Mandatory Fields . | Field | Type | Description | . | items | Array | A list from the current page. | . Optional Fields . | Field | Type | Description | . | nextPageKey | String | Can be used to fetch the next page, not present on the last page. | . Example . A page with more content . { \"nextPageKey\": \"5ee0c486308f590260d9a07f|ded3f328-1123-11ec-bf1a-5ba46eb12a7d\", \"items\": [ { \"value\": \"16\", \"assetType\": \"centrapay.nzd.main\" }, { \"value\": \"32\", \"assetType\": \"centrapay.nzd.main\" }, { \"value\": \"64\", \"assetType\": \"centrapay.nzd.main\" } ] } . The last page . { \"items\": [ { \"value\": \"128\", \"assetType\": \"centrapay.nzd.main\" } ] } . ",
    "url": "/api/pagination",
    "relUrl": "/api/pagination"
  },"148": {
    "doc": "Patron Codes",
    "title": "Patron Codes",
    "content": "A Patron Code is an alternative to presenting a QR code where that option isn’t available . ",
    "url": "/api/patron-codes",
    "relUrl": "/api/patron-codes"
  },"149": {
    "doc": "Patron Codes",
    "title": "Contents",
    "content": ". | Models . | Patron Code EXPERIMENTAL | Test Scenario Name | . | Operations . | Creating a Patron Code EXPERIMENTAL | Retrieving a Patron Code | Retrieving a Patron Code by Barcode | . | . ",
    "url": "/api/patron-codes#contents",
    "relUrl": "/api/patron-codes#contents"
  },"150": {
    "doc": "Patron Codes",
    "title": "Models",
    "content": "Patron Code EXPERIMENTAL . Fields . | Field | Type | Description | . | id | String | The Patron Code’s unique identifier. | . | barcode | String | ✩ Field to display in barcode format. | . | createdAt | Timestamp | Date when the Patron Code was created. | . | expiresAt | Timestamp | Date when the Patron Code will expire. | . | appName | String Optional | The app used to create the Patron Code. DEPRECATED | . | accountId | String | The account id of the creator of the patron code. | . | testScenarioName | String Optional | The Test Scenario Name of the Patron Code. | . ✩ Barcode is a 16 digit number. The first 6 digits are a Centrapay defined prefix, then a 9 digit code, then a luhn checksum digit. 9 9 9 0 0 0 1 2 3 4 5 6 7 8 9 5 ❖ complete barcode 9 9 9 0 0 0 - - - - - - - - - - ❖ centrapay prefix - - - - - - 1 2 3 4 5 6 7 8 9 - ❖ code - - - - - - - - - - - - - - - 5 ❖ luhn checksum . The Centrapay Prefix may present any of the following prefixes: . | 121921 | 123000 | 282828 | 293000 | 321000 | 321123 | 636863 | 713131 | 765432 | 777000 | 839234 | 848484 | 888444 | 929394 | 987600 | 999000 | . Test Scenario Name . This field is used to inject behavior into a Payment Request when the generated barcode is supplied on creation. If a Test Scenario Name is defined on a Patron Code, it is considered a test resource and can only be used with Payment Requests that will have a liveness of ‘test’. The Asset Type centrapay.nzd.test is required to run test scenarios. | name | description | . | force-condition-check-photo-id | The Payment Request will have a required Merchant Condition to check photo id. | . ",
    "url": "/api/patron-codes#models",
    "relUrl": "/api/patron-codes#models"
  },"151": {
    "doc": "Patron Codes",
    "title": "Operations",
    "content": "Creating a Patron Code EXPERIMENTAL . POST /api/patron-codes . curl -X POST https://service.centrapay.com/api/patron-codes \\ -H \"Authorization: $jwt\" . Example Response Payload . { \"id\": \"V17FByEP9gm1shSG6a1Zzx\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"barcode\": \"9990001234567895\", \"createdAt\": \"2021-06-08T22:55:00.000Z\", \"expiresAt\": \"2021-06-08T23:00:00.000Z\", \"appName\": \"centrapay\" } . You can find payment request information attached to a Patron Code by polling for the Payment Request using the transacting APIs. Retrieving a Patron Code . GET /api/patron-codes/{patronCodeId} . curl https://service.centrapay.com/api/patron-codes/V17FByEP9gm1shSG6a1Zzx \\ -H \"Authorization: $jwt\" . Example Response Payload . { \"id\": \"V17FByEP9gm1shSG6a1Zzx\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"barcode\": \"9990001234567895\", \"createdAt\": \"2021-06-08T22:55:00.000Z\", \"expiresAt\": \"2021-06-08T23:00:00.000Z\", \"appName\": \"centrapay\" } . Retrieving a Patron Code by Barcode . GET /api/patron-codes/barcode/{barcode} . curl https://service.centrapay.com/api/patron-codes/barcode/9990001234567895 \\ -H \"X-Api-Key: $api_key\" . Example Response Payload . { \"id\": \"V17FByEP9gm1shSG6a1Zzx\", \"accountId\": \"Jaim1Cu1Q55uooxSens6yk\", \"barcode\": \"9990001234567895\", \"createdAt\": \"2021-06-08T22:55:00.000Z\", \"expiresAt\": \"2021-06-08T23:00:00.000Z\", \"appName\": \"centrapay\" } . Error Responses . | Status | Code | Description | . | 400 | CHECKSUM_FAILED | Luhn checksum digit doesn’t pass. | . | 403 | PATRON_CODE_INVALID | Patron Code doesn’t exist or it has expired. | . ",
    "url": "/api/patron-codes#operations",
    "relUrl": "/api/patron-codes#operations"
  },"152": {
    "doc": "Payment Flows",
    "title": "Payment Flows",
    "content": "Transacting via Centrapay requires customer and merchant devices to negotiate the creation and fulfillment of Payment Requests. There are multiple payment “flows” a merchant integration can select from to facilitate this negotiation. Which flow is employed will depend on the capabilities of the merchant system. ",
    "url": "/guides/payment-flows",
    "relUrl": "/guides/payment-flows"
  },"153": {
    "doc": "Payment Flows",
    "title": "Contents",
    "content": ". | Merchant-presented . | Dynamic Merchant QR Code | Static Merchant QR Code | . | Patron-presented . | Dynamic Patron Barcode | Static Patron Barcode | Quick Pay | . | . ",
    "url": "/guides/payment-flows#contents",
    "relUrl": "/guides/payment-flows#contents"
  },"154": {
    "doc": "Payment Flows",
    "title": "Merchant-presented",
    "content": "When a merchant terminal has a customer-facing display it can prompt the customer to pay by showing a QR code. Dynamic Merchant QR Code . | Merchant terminal creates a payment request via Centrapay API and shows QR code on customer-facing display. | Customer device scans the QR code, fetches the payment request details, and completes payment as normal. | Merchant terminal displays transaction result using the payment request details. | . Static Merchant QR Code . When a merchant terminal is neither capable of displaying nor scanning QR codes or barcodes, such as for unattended vending machines, then a static QR code can be used. | Customer scans QR code and initiates vending sequence via Centrapay API, with the merchant code as a parameter. | Merchant vending system initiates payment request via Centrapay API. | Customer device fetches payment request and completes payment as normal. | Merchant vending system optionally initiates refund via Centrapay API. | . ",
    "url": "/guides/payment-flows#merchant-presented",
    "relUrl": "/guides/payment-flows#merchant-presented"
  },"155": {
    "doc": "Payment Flows",
    "title": "Patron-presented",
    "content": "When a merchant terminal is not capable of displaying a customer-facing QR code, then the payment request can be negotiated with the customer by scanning a barcode or QR code displayed on the customer’s smart device. Dynamic Patron Barcode . | Customer generates a short-lived Patron Code via Centrapay API and displays it as a barcode on their smart device | Merchant scans the barcode, optionally retrieves the Patron Code for additional information on the customer and then creates a Payment Request via Centrapay API, with the Patron Code as a parameter. | Customer device fetches the payment request created with the Patron Code and completes payment as normal. | . Static Patron Barcode . Variant on Dynamic Patron Code, if you’ve setup long lived static Patron Codes by integrating with Centrapay, then you can use these to pay on behalf of a Customer. The customer may be asked for approval before this goes through. | The Customer presents their Patron Code barcode. | Merchant scans the barcode, optionally retrieves the Patron Code for additional information on the Customer and then creates a Payment Request via Centrapay API, with the Patron Code as a parameter. | Conditionally, the Customer is sent a text message to confirm payment. | The Customer is sent an email with a summary of the payment. | Merchant polls Polls for the Payment Request created with the Patron Code checking the status changes to “paid”. Merchant completes payment as normal. | . Quick Pay . Quick Pay is used to pay the payment request after it is polled for the first time, without requiring patron approval. Quick Pay can only be triggered using the patron-presented flows, and the patron barcode must be linked to an asset type that allows quick pay. See Asset Types for the list of asset types that support Quick Pay. ",
    "url": "/guides/payment-flows#patron-presented",
    "relUrl": "/guides/payment-flows#patron-presented"
  },"156": {
    "doc": "Payment Requests",
    "title": "Payment Requests",
    "content": "Payment Requests represent the intention for a merchant to receive payment for goods and services. Payment Requests define the amount to be paid and the asset types that are acceptable for payment. A Payment Request is shared with, and paid by, a patron. The Payment Flows Guide has more details regarding negotiation of Payment Requests. Payment Requests have the following statuses: . | new: after being created. | paid: after being paid with one or more transactions. | cancelled: after being cancelled or voided by the merchant. | expired: after expiry time is reached without being paid or cancelled. | refunded: after being partially or fully refunded. | . Payment requests can also be refunded for a short period of time after being paid. Payment request state transitions can be notified to webhooks. Centrapay Payment Requests are serviced via two sets of endpoints; the “next” version (documented on this page) and the “legacy” version (documented at Legacy Payment Requests). ",
    "url": "/api/payment-requests",
    "relUrl": "/api/payment-requests"
  },"157": {
    "doc": "Payment Requests",
    "title": "Contents",
    "content": ". | Models . | Payment Request | Payment Option | Payment Condition | Line Item | Product Classification | Paid By | Asset Total | Payment Activity EXPERIMENTAL | . | Operations . | Create a Payment Request | Get a Payment Request | Get a Payment Request by Short Code | Get a Payment Request linked to a Patron Code | Pay a Payment Request EXPERIMENTAL | Refund a Payment Request EXPERIMENTAL | Void a Payment Request EXPERIMENTAL | Release funds held for a Pre Auth Payment Request EXPERIMENTAL | List Payment Activities for a Merchant EXPERIMENTAL | List Payment Activities for a Payment Request EXPERIMENTAL | Accept Payment Condition for a Payment Request EXPERIMENTAL | Decline Payment Condition for a Payment Request EXPERIMENTAL | . | . ",
    "url": "/api/payment-requests#contents",
    "relUrl": "/api/payment-requests#contents"
  },"158": {
    "doc": "Payment Requests",
    "title": "Models",
    "content": "Payment Request . Mandatory Fields . | Field | Type | Description | . | id | String | The payment request id. | . | shortCode | String | A shorter id that can be used to identify the payment request for up to two years. | . | url | String | The URL for a Centrapay webpage that allows the user to pay the Payment Request. | . | value | Monetary | The canonical value of the payment request. Must be positive. | . | paymentOptions | Array | The Payment Options, indicating valid asset for payment. | . | merchantId | String | The id of the Merchant the Payment Request is on behalf of. | . | merchantName | String | The name of the Merchant the Payment Request is on behalf of. | . | configId | String | The Merchant Config id used to configure the payment options. | . | status | String | “new”, “paid”, “cancelled”, or “expired”. | . | liveness | String | Indicates liveness of assets that are accepted, determined by the payment options. Values are “main” or “test”. | . | createdAt | Timestamp | When the payment request was created. | . | updatedAt | Timestamp | When the payment request was updated. | . | expiresAt | Timestamp | When the payment request expires. | . | merchantConditions | Array | A dynamic list of Payment Conditions that require operator approval to complete a payment. Conditions are calculated when polling a Payment Request. | . Optional Fields . | Field | Type | Description | . | patronCodeId | String | The id of a Patron Code the payment request is attached to. | . | barcode | String | Scanned patron barcode used to create the payment request. | . | expirySeconds | Number | The expiry seconds used to configure the payment request expiry. | . | lineItems | Array | EXPERIMENTAL The Line Items being paid for. | . | purchaseOrderRef | String | A reference to a purchase order for this payment request. | . | invoiceRef | String | A reference to an invoice for this payment request. | . | redirectUrl | String | Experimental URL to redirect the user to after they pay or cancel the Payment Request. Must start with one of the allowedRedirectUrls for the Merchant Config. | . | externalRef | String | An external reference to the payment request | . | terminalId | String | The software or logical id of the payment terminal. | . | deviceId | String | The hardware id or serial number of the payment terminal. | . | operatorId | String | POS operator Id. | . | createdByAccountId | String | Id of the Centrapay Account creating the Payment Request. | . | createdByAccountName | String | Name of the Centrapay Account creating the Payment Request. | . | conditionsEnabled | Boolean | Flag to indicate that a merchant is able to accept Payment Conditions. | . | patronNotPresent | Boolean | Flag to indicate the patron is not physically present. This may affect payment conditions or available Payment Options. | . | cancellationReason | String | The reason that the payment request was cancelled. See Cancellation Reasons for possible values. | . | preAuth | Boolean | Flag to indicate the if the request is a Pre Auth for supported Asset Types. | . | preAuthExpiresAt | Timestamp | Pre Auth completions and releases will be accepted until this time. | . Payment Option . Mandatory Fields . | Field | Type | Description | . | assetType | String | An Asset Type reference. | . | amount | BigNumber | The value required to pay using the canonical units for the asset type. | . Optional Fields . | Field | Type | Description | . | bitcoinAddress | String | ★ Address to send Bitcoin, when the “assetType” is bitcoin.* | . | cennzAddress | String | ★ Address to send CPay, when the “assetType” is cennznet.* | . | wavesAddress | String | ★ Waves address to send Zap tokens, when the “assetType” is zap.* | . | productCodes | Array | Supported product codes for the payment request, when the “assetType” is epay.nzd.* | . ★ For payment options which specify an address, there’s a requirement to make a transaction on an external ledger. Once you have made that payment, you can use the transaction id to Pay a Payment Request using the legacy payment API. Payment Condition . Some Asset Types require conditional approval to pay. Possible Payment Conditions include confirming proof of ID or confirming a promotional item was purchased. The conditionsEnabled flag should be set to true when Creating a Payment Request to indicate that Payment Conditions can be accepted. If a Payment Condition arises, the absence of the conditionsEnabled flag will result in the Payment Request being cancelled. Conditions can either be accepted or declined. If a condition is declined, the Payment Request will be cancelled. Fields . | Name | Type | Description | . | id | BigNumber | An enumerated identifier for the Payment Condition. | . | name | String | The name of the condition. | . | message | String | The human-readable description of the condition. | . | status | String | The status of the condition. Valid values include accepted, declined, awaiting-merchant or void. | . Line Item . An order item for which payment is requested. The currency and units for a line item price will be consistent with the payment request value and the sum of line item prices should equal the payment request value. Line items can include a discount amount. A discount that applies to multiple line items may be represented as a separate line item with a negative amount. Mandatory Fields . | Field | Type | Description | . | name | String | The product description. | . | sku | String | The product (stock keeping unit) code. | . | qty | BigNumber | The product quantity (eg. item count, weight, volume etc). | . | price | BigNumber | The final price in cents (eg. product price * qty - discounts + tax). | . Optional Fields . | Field | Type | Description | . | tax | BigNumber | Tax rate (percentage). | . | discount | BigNumber | Discount amount in cents (tax exclusive). | . | productId | String | Manufacturer’s product identifier (eg GTIN/EAN). | . | restricted | Boolean | Disallow payment with a “restricted” Asset Type. | . | classification | Object | Product Classification. | . Product Classification . Mandatory Fields . | Field | Type | Description | . | type | String | The classification type (see below). | . | code | String | The classification code. | . | name | String | The classification description. | . Optional Fields . | Field | Type | Description | . | props | Map | The product classification properties (see below). | . Classification Types . Currently only “GS1” is supported. See GS1 Global Product Classification. When “GS1” is used as the product classification type then the product code should be the GPC product brick identifier. Classification Properties . Classification properties allow optional additional product characterizing attrubutes to be supplied. In the case of GS1 product classifications this corresponds to the GPC brick attributes. Paid By . The Paid By provides a summary of the transactions after the Payment Request was paid. Mandatory Fields . | Field | Type | Description | . | assetTotals | Array | The sum of paid amounts Asset Totals for each transacted asset type. | . Asset Total . Mandatory Fields . | Field | Type | Description | . | type | String | The asset type used for the payment. | . | description | String | A human readable description of the asset type used. | . | settlementDate | Timestamp | The estimated date that the merchant can expect settlement of funds. | . | total | Monetary | The total monetary value of the asset type used to pay a Payment Request | . Payment Activity EXPERIMENTAL . A Payment Activity records a transaction that has happened on a Payment Request. Payment Activities are created when a Payment Request has been created, paid, refunded, cancelled, or expired. Mandatory Fields . | Field | Type | Description | . | type | String | See Activity Types below. | . | value | Monetary | The value of the payment activity. Must be positive. | . | paymentRequestId | String | The Payment Request’s id. | . | merchantId | String | The Payment Request’s Merchant id. | . | merchantConfigId | String | The Payment Request’s Merchant Config id. | . | merchantAccountId | String | The Payment Request’s Merchant Account id. | . | merchantName | String | The Payment Request’s Merchant name. | . | createdAt | Timestamp | When the activity was created. | . | createdBy | CRN | The identity that created the activity. | . | paymentRequestCreatedBy | CRN | The identity that created the Payment Request. | . | activityNumber | BigNumber | Unique sequential number for the activity. | . | shortCode | String | A shorter id that can be used for up to two years. | . Optional Fields . | Field | Type | Description | . | assetType | String | The Asset Type for the “payment” or “refund” activity. | . | external | Boolean | The payment activity is recording a transaction that occurred outside the Centrapay system. | . | cancellationReason | String | The reason that the Payment Request was cancelled. See Cancellation Reasons for possible values. | . | conditionId | Number | The id of a condition if the activity was for a condition being accepted or declined. | . Activity Types . | Name | Description | . | request | Payment Request was created. | . | payment | Payment Request was paid. | . | refund | Funds were returned to the shopper. | . | cancellation | Payment Request was cancelled by the merchant or the shopper. | . | expiry | Payment Request wasn’t paid before time out. | . | accept-condition | A Payment Condition was accepted. | . | decline-condition | A Payment Condition was declined. | . Cancellation Reasons . | Reason | Description | . | CANCELLED_BY_MERCHANT | The merchant cancelled the payment request by calling the cancel or void endpoint. | . | CANCELLED_BY_PATRON | The patron cancelled the transaction. | . | PATRON_CODE_INVALID | The patron code on the payment request was invalid. | . | INSUFFICIENT_ASSET_VALUE | The asset has insufficient funds to pay the payment request or the transaction amount received by Centrapay is less than the total of the payment. | . | PAYMENT_FAILED | The payment request failed for an unknown reason. | . | PATRON_CODE_EXPIRED | The patron code on the payment request has expired. | . | DECLINED_BY_PATRON | The payment was declined by the patron during approval steps. | . | DECLINED_BY_MERCHANT | The payment was declined by the merchant during approval steps. | . | PAYMENT_DECLINED | The payment parameters were valid but payment was declined because additional payment restrictions were violated. For example, asset not active, asset overdrawn, quota exceeded or line item category restrictions. | . | PAYMENT_REQUEST_EXPIRED | The payment request has expired. | . | NO_AVAILABLE_PAYMENT_OPTIONS | No payment options match the requested payment parameters. | . ",
    "url": "/api/payment-requests#models",
    "relUrl": "/api/payment-requests#models"
  },"159": {
    "doc": "Payment Requests",
    "title": "Operations",
    "content": ". Create a Payment Request . POST /api/payment-requests Create a Payment Request . curl -X POST https://service.centrapay.com/api/payment-requests \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"configId\": \"5efbe2fb96c08357bb2b9242\", \"value\": { \"amount\": \"8991\", \"currency\": \"NZD\" } }' . Create a Payment Request with redirect url . curl -X POST https://service.centrapay.com/api/payment-requests \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"configId\": \"5efbe2fb96c08357bb2b9242\", \"value\": { \"amount\": \"8991\", \"currency\": \"NZD\" }, \"redirectUrl\": \"https://example.com/store/checkout?cartId=1234\" }' . Create a Payment Request with a Patron Code . curl -X POST https://service.centrapay.com/api/payment-requests \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"barcode\": \"1219210961929460\", \"configId\": \"5efbe2fb96c08357bb2b9242\", \"value\": { \"amount\": \"8991\", \"currency\": \"NZD\" } }' . Create a Pre Auth Payment Request . curl -X POST https://service.centrapay.com/api/payment-requests \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"barcode\": \"1219210961929460\", \"configId\": \"5efbe2fb96c08357bb2b9242\", \"value\": { \"amount\": \"8991\", \"currency\": \"NZD\" }, \"preAuth\": true }' . Create a Payment Request with purchase order, invoice, and external reference . curl -X POST https://service.centrapay.com/api/payment-requests \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"configId\": \"5efbe2fb96c08357bb2b9242\", \"value\": { \"amount\": \"8991\", \"currency\": \"NZD\" }, \"purchaseOrderRef\": \"oF6kj1QlH5gK0y9rjRHFh2\", \"invoiceRef\": \"sy8CRmo3sp3ArOpnfmb423\", \"externalRef\": \"dYTC266s4DFdsgGd909f\" }' . Create a Payment Request with Line Items . curl -X POST https://service.centrapay.com/api/payment-requests \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"configId\": \"5efbe2fb96c08357bb2b9242\", \"value\": { \"amount\": \"6190\", \"currency\": \"NZD\" }, \"lineItems\": [ { \"name\": \"Coffee Grounds\", \"sku\": \"GH1234\", \"qty\": \"1\", \"price\": \"4195\", \"tax\": \"15.00\" }, { \"name\": \"Centrapay Cafe Mug\", \"sku\": \"SB456\", \"qty\": \"25\", \"price\": \"1995\", \"tax\": \"15.00\", \"discount\": \"199\", \"restricted\": true, \"productId\": \"19412345123459\", \"classification\": { \"type\": \"GS1\", \"code\": \"10001874\", \"props\": { \"20001479\": \"30008960\" } } } ] }' . Fields . | Field | Type | Description | . | configId | String | The Merchant Config id used to configure the payment options. | . | value | Monetary | The canonical value of the payment request. Must be positive. | . | barcode | String Optional | The patron’s barcode to identify the account to attach the payment request to | . | expirySeconds | String Optional | How long the payment request will be payable for. Maximum value: 86400 (24 hours). | . | lineItems | Array Optional | Experimental The Line Items being paid for. | . | purchaseOrderRef | String Optional | A reference to a purchase order for this payment request. | . | invoiceRef | String Optional | A reference to an invoice for this payment request. | . | externalRef | String Optional | An external reference to the payment request | . | redirectUrl | String Optional | Experimental URL to redirect the user to after they pay or cancel the Payment Request. Must start with one of the allowedRedirectUrls for the Merchant Config. | . | terminalId | String Optional | The software or logical id of the payment terminal. | . | deviceId | String Optional | The hardware id or serial number of the payment terminal. | . | operatorId | String Optional | The POS operator Id. | . | createdByAccountId | String Optional | The id of the Centrapay Account creating the Payment Request. | . | createdByAccountName | String Optional | The name of the Centrapay Account creating the Payment Request. | . | conditionsEnabled | Boolean Optional | Flag to opt into accepting Asset Types which require conditions to be met. If not set, assets which require conditions will not be payment options. | . | patronNotPresent | Boolean Optional | Flag to indicate the patron is not physically present. This may affect payment conditions or available Payment Options. | . | preAuth | Boolean Optional | Flag to indicate if the Payment Request is a Pre Auth for supported Asset Types. If set barcode must be provided. | . Example response payload . { \"id\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5\", \"url\": \"https://app.centrapay.com/pay/MhocUmpxxmgdHjr7DgKoKw\", \"patronCodeId\": \"V17FByEP9gm1shSG6a1Zzx\", \"barcode\": \"9990001234567895\", \"merchantId\": \"26d3Cp3rJmbMHnuNJmks2N\", \"merchantName\": \"Centrapay Café\", \"configId\": \"5efbe2fb96c08357bb2b9242\", \"purchaseOrderRef\": \"oF6kj1QlH5gK0y9rjRHFh2\", \"invoiceRef\": \"sy8CRmo3sp3ArOpnfmb423\", \"value\": { \"currency\": \"NZD\", \"amount\": \"6190\" }, \"paymentOptions\": [ { \"amount\": \"6190\", \"assetType\": \"centrapay.nzd.test\" }, { \"amount\": \"6190\", \"assetType\": \"epay.nzd.test\", \"productCodes\": [ \"23403\" ] } ], \"lineItems\": [ { \"name\": \"Coffee Grounds\", \"sku\": \"GH1234\", \"qty\": \"1\", \"price\": \"4195\", \"tax\": \"15.00\" }, { \"name\": \"Centrapay Cafe Mug\", \"sku\": \"SB456\", \"qty\": \"25\", \"price\": \"1995\", \"tax\": \"15.00\", \"discount\": \"199\" } ], \"merchantConditions\": [ ], \"status\": \"new\", \"createdAt\": \"2021-06-08T04:04:27.426Z\", \"updatedAt\": \"2021-06-08T04:04:27.426Z\", \"expiresAt\": \"2021-06-08T04:06:27.426Z\", \"liveness\": \"test\", \"expirySeconds\": 120 } . Error Responses . | Status | Code | Description | . | 400 | LINE_ITEMS_SUM_CHECK_FAILED | The sum value of the line items did not equal the value of the payment request. | . | 403 | REDIRECT_URL_INVALID | The supplied redirectUrl does not start with one of the allowedRedirectUrls on the Merchant Config. | . | 400 | CHECKSUM_FAILED | Luhn checksum digit doesn’t pass. | . | 403 | PATRON_CODE_INVALID | Patron Code doesn’t exist or has expired. | . | 403 | NO_AVAILABLE_PAYMENT_OPTIONS | No payment options match the requested payment parameters. | . Get a Payment Request . GET /api/payment-requests/{paymentRequestId} . curl https://service.centrapay.com/api/payment-requests/MhocUmpxxmgdHjr7DgKoKw \\ -H \"Authorization: $jwt\" . Example response payload . { \"id\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5\", \"url\": \"https://app.centrapay.com/pay/MhocUmpxxmgdHjr7DgKoKw\", \"patronCodeId\": \"V17FByEP9gm1shSG6a1Zzx\", \"barcode\": \"9990001234567895\", \"merchantId\": \"26d3Cp3rJmbMHnuNJmks2N\", \"merchantName\": \"Centrapay Café\", \"configId\": \"5efbe2fb96c08357bb2b9242\", \"purchaseOrderRef\": \"oF6kj1QlH5gK0y9rjRHFh2\", \"invoiceRef\": \"sy8CRmo3sp3ArOpnfmb423\", \"value\": { \"currency\": \"NZD\", \"amount\": \"8991\" }, \"paymentOptions\": [ { \"amount\": \"8991\", \"assetType\": \"centrapay.nzd.test\" } ], \"lineItems\": [ { \"name\": \"Coffee Grounds\", \"sku\": \"GH1234\", \"qty\": \"1\", \"price\": \"4195\", \"tax\": \"15.00\" }, { \"name\": \"Centrapay Cafe Mug\", \"sku\": \"SB456\", \"qty\": \"25\", \"price\": \"1995\", \"tax\": \"15.00\", \"discount\": \"199\" } ], \"merchantConditions\": [ { \"id\": \"1\", \"name\": \"photo-id-check\", \"message\": \"Please check ID\", \"status\": \"awaiting-merchant\" } ], \"status\": \"new\", \"createdAt\": \"2021-06-08T04:04:27.426Z\", \"updatedAt\": \"2021-06-08T04:04:27.426Z\", \"expiresAt\": \"2021-06-08T04:06:27.426Z\", \"liveness\": \"test\", \"expirySeconds\": 120 } . Example response payload paid by multiple asset types . { \"id\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5\", \"url\": \"https://app.centrapay.com/pay/MhocUmpxxmgdHjr7DgKoKw\", \"merchantId\": \"26d3Cp3rJmbMHnuNJmks2N\", \"merchantName\": \"Centrapay Café\", \"configId\": \"5efbe2fb96c08357bb2b9242\", \"value\": { \"currency\": \"NZD\", \"amount\": \"1000\" }, \"paymentOptions\": [ { \"amount\": \"1000\", \"assetType\": \"centrapay.nzd.main\" }, { \"amount\": \"1000\", \"assetType\": \"cca.coke.main\" } ], \"merchantConditions\": [ ], \"status\": \"paid\", \"createdAt\": \"2021-06-08T04:04:27.426Z\", \"updatedAt\": \"2021-06-08T04:04:27.426Z\", \"expiresAt\": \"2021-06-08T04:06:27.426Z\", \"liveness\": \"main\", \"expirySeconds\": 120, \"paidBy\": { \"assetTotals\": [ { \"type\": \"centrapay.nzd.main\", \"description\": \"Centrapay NZD\", \"settlementDate\": \"2021-06-28T04:04:27.426Z\", \"total\": { \"amount\": \"550\", \"currency\": \"NZD\" } }, { \"type\": \"cca.coke.main\", \"description\": \"Coke Token\", \"settlementDate\": \"2021-06-28T04:04:27.426Z\", \"total\": { \"amount\": \"450\", \"currency\": \"NZD\" } } ] } } . Example response payload for a Pre Auth Payment Request . { \"id\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5\", \"url\": \"https://app.centrapay.com/pay/MhocUmpxxmgdHjr7DgKoKw\", \"barcode\": 503901342, \"merchantId\": \"26d3Cp3rJmbMHnuNJmks2N\", \"merchantName\": \"Centrapay Café\", \"configId\": \"5efbe2fb96c08357bb2b9242\", \"value\": { \"currency\": \"NZD\", \"amount\": \"1000\" }, \"paymentOptions\": [ { \"amount\": \"1000\", \"assetType\": \"farmlands.nzd.main\" } ], \"merchantConditions\": [ ], \"status\": \"new\", \"createdAt\": \"2021-06-08T04:04:27.426Z\", \"updatedAt\": \"2021-06-08T04:04:27.426Z\", \"expiresAt\": \"2021-06-08T04:06:27.426Z\", \"liveness\": \"main\", \"expirySeconds\": 120, \"preAuth\": true, \"preAuthExpiresAt\": \"2021-09-08T04:04:27.426Z\" } . Get a Payment Request by Short Code . Returns the latest Payment Request that matches the given short code. GET /api/payment-requests/short-code/{shortCode} . curl https://service.centrapay.com/api/payment-requests/short-code/CP-C7F-ZS5 \\ -H \"Authorization: $jwt\" . Example response payload with a Payment Request . { \"id\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5\", \"url\": \"https://app.centrapay.com/pay/MhocUmpxxmgdHjr7DgKoKw\", \"patronCodeId\": \"V17FByEP9gm1shSG6a1Zzx\", \"barcode\": \"9990001234567895\", \"merchantId\": \"26d3Cp3rJmbMHnuNJmks2N\", \"merchantName\": \"Centrapay Café\", \"configId\": \"5efbe2fb96c08357bb2b9242\", \"value\": { \"currency\": \"NZD\", \"amount\": \"100\" }, \"paymentOptions\": [ { \"amount\": \"100\", \"assetType\": \"centrapay.nzd.test\" } ], \"merchantConditions\": [ ], \"status\": \"new\", \"createdAt\": \"2021-06-08T04:04:27.426Z\", \"updatedAt\": \"2021-06-08T04:04:27.426Z\", \"expiresAt\": \"2021-06-08T04:06:27.426Z\", \"liveness\": \"test\", \"expirySeconds\": 120 } . Error Responses . | Status | Code | Description | . | 400 | CHECKSUM_FAILED | Luhn checksum digit doesn’t pass. | . Get a Payment Request linked to a Patron Code . Returns the latest Payment Request with status “new” that has been attached to a Patron Code. The Payment Request may have been created with a reference to any Patron Code owned by the user’s account. This endpoint should be polled just after a user’s Patron Code has been scanned. This will allow them to find the Payment Request and proceed to pay. GET /api/me/patron-code-payment-request . curl https://service.centrapay.com/api/me/patron-code-payment-request \\ -H \"Authorization: $jwt\" . Example response payload when no new Payment Request found . { } . Example response payload with a Payment Request . { \"id\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5\", \"url\": \"https://app.centrapay.com/pay/MhocUmpxxmgdHjr7DgKoKw\", \"patronCodeId\": \"V17FByEP9gm1shSG6a1Zzx\", \"barcode\": \"9990001234567895\", \"merchantId\": \"26d3Cp3rJmbMHnuNJmks2N\", \"merchantName\": \"Centrapay Café\", \"configId\": \"5efbe2fb96c08357bb2b9242\", \"value\": { \"currency\": \"NZD\", \"amount\": \"100\" }, \"paymentOptions\": [ { \"amount\": \"100\", \"assetType\": \"centrapay.nzd.test\" } ], \"merchantConditions\": [ ], \"status\": \"new\", \"createdAt\": \"2021-06-08T04:04:27.426Z\", \"updatedAt\": \"2021-06-08T04:04:27.426Z\", \"expiresAt\": \"2021-06-08T04:06:27.426Z\", \"liveness\": \"test\", \"expirySeconds\": 120 } . Pay a Payment Request EXPERIMENTAL . There are two methods of paying a payment request. The first uses Centrapay Assets and requires you to provide the Id and the type of the asset. Alternatively you can provide an external transaction Id and the Centrapay Asset Type for any payments that we support. An example of an external transaction would be a Bitcoin payment. POST /api/payment-requests/{paymentRequestId}/pay Pay a Payment Request with a Centrapay asset . curl -X POST https://service.centrapay.com/api/payment-requests/{paymentRequestId}/pay \\ -H \"Authorization: $jwt\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"assetType\": \"centrapay.nzd.main\", \"assetId\": \"WRhAxxWpTKb5U7pXyxQjjY\" }' . Pay a Payment Request using external transaction . curl -X POST https://service.centrapay.com/api/payment-requests/{paymentRequestId}/pay \\ -H \"Authorization: $jwt\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"assetType\": \"bitcoin.main\", \"transactionId\": \"VMXMkUttDGTVz4ESv5ND56\" }' . Example response payload . { \"type\": \"payment\", \"value\": { \"currency\": \"NZD\", \"amount\": \"1000\" }, \"assetType\": \"centrapay.nzd.main\", \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5-015\", \"merchantName\": \"Centrapay Café\", \"merchantId\": \"26d3Cp3rJmbMHnuNJmks2N\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantConfigId\": \"5efbe2fb96c08357bb2b9242\", \"createdAt\": \"2021-06-08T04:04:27.426Z\", \"createdBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"2\" } . Error Responses . | Status | Code | Description | . | 403 | INVALID_ASSET_TYPE | Either the merchant is not configured with the provided asset type or the asset type does not exist. | . | 403 | REQUEST_EXPIRED | Action cannot be completed because the request has expired. | . | 403 | REQUEST_PAID | Action cannot be completed because the request has been paid. | . | 403 | REQUEST_CANCELLED | Action cannot be completed because the request has already been cancelled. | . | 403 | INACTIVE_ASSET | The asset is not spendable. It may have been disabled, expired, or already spent. | . | 403 | INVALID_MERCHANT_CONFIG | The merchant is not configured properly to satisfy the payment request. This could be due to incorrect information, or the merchant’s credentials might be blocked by an external service. | . | 403 | QUOTA_EXCEEDED | The payment pay request exceeds the allowed spend quota supplied. | . | 403 | INSUFFICIENT_ASSET_VALUE | The asset has insufficient funds to pay the payment request or the transaction amount received by Centrapay is less than the total of the payment. | . | 403 | ASSET_REDEMPTION_DENIED | The asset redemption has been unsuccessful due to an error with provided payment parameters, the merchant, or the asset. | . | 403 | PAYMENT_DECLINED | The payment parameters were valid but payment was declined because additional payment restrictions were violated. | . Refund a Payment Request EXPERIMENTAL . POST /api/payment-requests/{paymentRequestId}/refund Refund a Payment Request . curl -X POST https://service.centrapay.com/api/payment-requests/{paymentRequestId}/refund \\ -H \"Authorization: $jwt\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"value\": { \"amount\": \"100\", \"currency\": \"NZD\" }, \"externalRef\": \"e8df06e2-13a5-48b4-b670-3fd6d815fe0a\" }' . Refund a Payment Request with Line Items . curl -X POST https://service.centrapay.com/api/payment-requests/{paymentRequestId}/refund \\ -H \"Authorization: $jwt\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"value\": { \"amount\": \"6190\", \"currency\": \"NZD\" }, \"externalRef\": \"e8df06e2-13a5-48b4-b670-3fd6d815fe0a\", \"lineItems\": [ { \"name\": \"Coffee Grounds\", \"sku\": \"GH1234\", \"qty\": \"1\", \"price\": \"4195\", \"tax\": \"15.00\" }, { \"name\": \"Centrapay Cafe Mug\", \"sku\": \"SB456\", \"qty\": \"25\", \"price\": \"1995\", \"tax\": \"15.00\", \"discount\": \"199\", \"restricted\": true, \"productId\": \"19412345123459\", \"classification\": { \"type\": \"GS1\", \"code\": \"10001874\", \"props\": { \"20001479\": \"30008960\" } } } ] }' . Example response payload . { \"type\": \"refund\", \"value\": { \"currency\": \"NZD\", \"amount\": \"100\" }, \"assetType\": \"centrapay.nzd.main\", \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5-015\", \"merchantName\": \"Centrapay Café\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantConfigId\": \"5ee168e8597be5002af7b454\", \"createdAt\": \"2021-06-12T01:17:00.000Z\", \"createdBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"3\" } . Error Responses . | Status | Code | Description | . | 403 | NOT_PAID | The payment request has not been paid. | . | 403 | ALREADY_REFUNDED | The payment request has already been refunded. | . | 403 | INVALID_AMOUNT | The refund requested is greater than the refundable amount. | . | 403 | REPEAT_REFERENCE | A refund has already been requested with the same external reference. Refunding the payment request twice with the same external reference is not allowed. If the amount of the refund is the same we assume it is a repeat request and return 200. | . | 403 | PARTIAL_REFUNDS_NOT_ALLOWED | The asset does not support partial refunds. | . | 403 | INACTIVE_ASSET | The asset is not refundable. It may have been disabled, expired, or already refunded. | . | 403 | REFUND_NOT_SUPPORTED | The asset type does not support refunds. | . | 403 | REFUND_WINDOW_EXCEEDED | The time since the payment exceeds the window of time a payment request can be refunded in. | . | 400 | LINE_ITEMS_SUM_CHECK_FAILED | The sum value of the line items did not equal the value of the refund. | . Void a Payment Request EXPERIMENTAL . Voiding a payment request will cancel the request and trigger any refunds if necessary. POST /api/payment-requests/{paymentRequestId}/void . curl -X POST https://service.centrapay.com/api/payment-requests/MhocUmpxxmgdHjr7DgKoKw/void \\ -H \"Authorization: $jwt\" . Example response payload when payment request is unpaid . { \"type\": \"cancellation\", \"cancellationReason\": \"CANCELLED_BY_MERCHANT\", \"value\": { \"currency\": \"NZD\", \"amount\": \"1000\" }, \"assetType\": \"centrapay.nzd.main\", \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5-032\", \"merchantName\": \"Centrapay Café\", \"merchantId\": \"26d3Cp3rJmbMHnuNJmks2N\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantConfigId\": \"5efbe2fb96c08357bb2b9242\", \"createdAt\": \"2021-06-08T04:04:27.426Z\", \"createdBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"2\" } . Example response payload when payment request is paid . { \"type\": \"refund\", \"value\": { \"currency\": \"NZD\", \"amount\": \"1000\" }, \"assetType\": \"centrapay.nzd.main\", \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5-032\", \"merchantName\": \"Centrapay Café\", \"merchantId\": \"26d3Cp3rJmbMHnuNJmks2N\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantConfigId\": \"5efbe2fb96c08357bb2b9242\", \"createdAt\": \"2021-06-08T04:04:27.426Z\", \"createdBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"3\" } . Error Responses . | Status | Code | Description | . | 403 | VOID_WINDOW_EXCEEDED | The void window is closed 24 hours after the request’s createdAt. After the void window has closed if the request is paid, the Refund endpoint can be used to reverse the payment. | . | 403 | ALREADY_REFUNDED | The payment request has already been refunded. | . | 403 | REPEAT_REFERENCE | A refund has already been requested with the same external reference. Refunding the payment request twice with the same external reference is not allowed. If the amount of the refund is the same we assume it is a repeat request and return 200. | . | 403 | INACTIVE_ASSET | The asset is not refundable. It may have been disabled, expired, or already refunded. | . | 403 | REFUND_NOT_SUPPORTED | The asset type does not support refunds. | . Release funds held for a Pre Auth Payment Request EXPERIMENTAL . When you call release on a Pre Auth Payment Request any remaining funds that were being held for the authorization are returned to the asset, and a release Payment Activity is returned. If the authorization never completed, the Payment Request will instead be cancelled, and a cancellation Payment Activity will be returned. POST /api/payment-requests/{paymentRequestId}/release . curl -X POST https://service.centrapay.com/api/payment-requests/MhocUmpxxmgdHjr7DgKoKw/release \\ -H \"Authorization: $jwt\" . Example response payload when a Pre Auth is released . { \"type\": \"release\", \"value\": { \"currency\": \"NZD\", \"amount\": \"100\" }, \"assetType\": \"centrapay.nzd.main\", \"preAuth\": true, \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5-015\", \"merchantName\": \"Centrapay Café\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantConfigId\": \"5ee168e8597be5002af7b454\", \"createdAt\": \"2021-06-12T01:17:00.000Z\", \"createdBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"3\" } . Example response payload when a Pre Auth is cancelled . { \"type\": \"cancellation\", \"cancellationReason\": \"CANCELLED_BY_MERCHANT\", \"value\": { \"currency\": \"NZD\", \"amount\": \"1000\" }, \"assetType\": \"centrapay.nzd.main\", \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5-032\", \"merchantName\": \"Centrapay Café\", \"merchantId\": \"26d3Cp3rJmbMHnuNJmks2N\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantConfigId\": \"5efbe2fb96c08357bb2b9242\", \"createdAt\": \"2021-06-08T04:04:27.426Z\", \"createdBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"2\" } . Error Responses . | Status | Code | Description | . | 403 | INVALID_PAYMENT_REQUEST_TYPE | The Payment Request is not related to a Pre Auth | . | 403 | PREAUTH_EXPIRED | preAuthExpiresAt has passed | . List Payment Activities for a Merchant EXPERIMENTAL . List payment activities for a merchant. Results are paginated and ordered by descending activity created date. GET /api/payment-activities . curl -G https://service.centrapay.com/api/payment-activities \\ -H \"Authorization: $jwt\" \\ -d merchantId=5ee0c486308f590260d9a07f \\ -d pageKey=PaymentRequest#E9eXsErwA444qFDoZt5iLA|Activity#000000000000001|614161c4c4d3020073bd4ce8|2021-09-15T03:00:21.156Z . Required Fields . | Field | Type | Description | . | merchantId | String | The id of the Merchant the Payment Request is on behalf of. | . Optional Fields . | Field | Type | Description | . | pageKey | String | Used to retrieve the next page of items. | . Example response payload . { \"nextPageKey\": \"PaymentRequest#E9eXsErwA444qFDoZt5iLA|Activity#000000000000001|614161c4c4d3020073bd4ce8|2021-09-15T03:00:21.156Z\", \"items\": [ { \"type\": \"refund\", \"value\": { \"currency\": \"NZD\", \"amount\": \"600\" }, \"assetType\": \"centrapay.nzd.main\", \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5-032\", \"merchantName\": \"Centrapay Café\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantConfigId\": \"5ee168e8597be5002af7b454\", \"createdAt\": \"2021-06-12T01:17:00.000Z\", \"createdBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"3\" }, { \"type\": \"payment\", \"value\": { \"currency\": \"NZD\", \"amount\": \"6190\" }, \"assetType\": \"centrapay.nzd.main\", \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5-027\", \"merchantName\": \"Centrapay Café\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantConfigId\": \"5ee168e8597be5002af7b454\", \"createdAt\": \"2021-06-12T01:16:00.000Z\", \"createdBy\": \"crn::user:da75ad90-9a5b-4df0-8374-f48b3a8fbfcc\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"2\" }, { \"type\": \"request\", \"value\": { \"currency\": \"NZD\", \"amount\": \"6190\" }, \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5-015\", \"merchantName\": \"Centrapay Café\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantConfigId\": \"5ee168e8597be5002af7b454\", \"createdAt\": \"2021-06-12T01:15:46.000Z\", \"createdBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"1\" } ] } . List Payment Activities for a Payment Request EXPERIMENTAL . List payment activities for a payment request. Results are ordered by descending activity created date. GET /api/payment-requests/{paymentRequestId}/activities . curl https://service.centrapay.com/api/payment-requests/MhocUmpxxmgdHjr7DgKoKw/activities \\ -H \"Authorization: $jwt\" . Example response payload . { \"items\": [ { \"type\": \"refund\", \"value\": { \"currency\": \"NZD\", \"amount\": \"600\" }, \"assetType\": \"centrapay.nzd.main\", \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5-032\", \"merchantName\": \"Centrapay Café\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantConfigId\": \"5ee168e8597be5002af7b454\", \"createdAt\": \"2021-06-12T01:17:00.000Z\", \"createdBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"3\" }, { \"type\": \"payment\", \"value\": { \"currency\": \"NZD\", \"amount\": \"6190\" }, \"assetType\": \"centrapay.nzd.main\", \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5-027\", \"merchantName\": \"Centrapay Café\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantConfigId\": \"5ee168e8597be5002af7b454\", \"createdAt\": \"2021-06-12T01:16:00.000Z\", \"createdBy\": \"crn::user:da75ad90-9a5b-4df0-8374-f48b3a8fbfcc\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"2\" }, { \"type\": \"request\", \"value\": { \"currency\": \"NZD\", \"amount\": \"6190\" }, \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"shortCode\": \"CP-C7F-ZS5-015\", \"merchantName\": \"Centrapay Café\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantConfigId\": \"5ee168e8597be5002af7b454\", \"createdAt\": \"2021-06-12T01:15:46.000Z\", \"createdBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"1\" } ] } . Accept Payment Condition for a Payment Request EXPERIMENTAL . Accept a Payment Condition listed in merchantConditions with status awaiting-merchant. Returns a Payment Activity. POST /api/payment-requests/{paymentRequestId}/conditions/{conditionId}/accept . curl -X POST https://service.centrapay.com/api/payment-requests/MhocUmpxxmgdHjr7DgKoKw/conditions/1/accept \\ -H \"Authorization: $jwt\" . Example response payload . { \"type\": \"accept-condition\", \"value\": { \"currency\": \"NZD\", \"amount\": 100 }, \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"conditionId\": \"1\", \"createdAt\": \"2022-05-12T01:17:00.000Z\", \"createdBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"2\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"merchantConfigId\": \"5ee168e8597be5002af7b454\", \"merchantName\": \"Centrapay Café\" } . Error Responses . | Status | Code | Description | . | 403 | PATRON_NOT_AUTHORIZED | The Payment Condition is awaiting-merchant, therefore the patron is not authorized to accept the condition. | . | 403 | MERCHANT_NOT_AUTHORIZED | The Payment Condition is awaiting-patron, therefore the merchant is not authorized to accept the condition. | . | 403 | CONDITION_ALREADY_SET | The Payment Condition has already been accepted or declined. | . Decline Payment Condition for a Payment Request EXPERIMENTAL . Decline a Payment Condition listed in merchantConditions with status awaiting-merchant. Returns a Payment Activity. POST /api/payment-requests/{paymentRequestId}/conditions/{conditionId}/decline . curl -X POST https://service.centrapay.com/api/payment-requests/MhocUmpxxmgdHjr7DgKoKw/conditions/1/decline \\ -H \"Authorization: $jwt\" . Example response payload . { \"type\": \"decline-condition\", \"value\": { \"currency\": \"NZD\", \"amount\": 100 }, \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\", \"conditionId\": \"1\", \"createdAt\": \"2022-05-12T01:17:00.000Z\", \"createdBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"paymentRequestCreatedBy\": \"crn::user:0af834c8-1110-11ec-9072-3e22fb52e878\", \"activityNumber\": \"2\", \"merchantAccountId\": \"C4QnjXvj8At6SMsEN4LRi9\", \"merchantId\": \"5ee0c486308f590260d9a07f\", \"merchantConfigId\": \"5ee168e8597be5002af7b454\", \"merchantName\": \"Centrapay Café\" } . Error Responses . | Status | Code | Description | . | 403 | PATRON_NOT_AUTHORIZED | The Payment Condition is awaiting-merchant, therefore the patron is not authorized to decline the condition. | . | 403 | MERCHANT_NOT_AUTHORIZED | The Payment Condition is awaiting-patron, therefore the merchant is not authorized to decline the condition. | . | 403 | CONDITION_ALREADY_SET | The Payment Condition has already been accepted or declined. | . ",
    "url": "/api/payment-requests#operations",
    "relUrl": "/api/payment-requests#operations"
  },"160": {
    "doc": "Profiles",
    "title": "Profile",
    "content": "A profile represents a Centrapay user’s attributes. ",
    "url": "/api/profiles#profile",
    "relUrl": "/api/profiles#profile"
  },"161": {
    "doc": "Profiles",
    "title": "Contents",
    "content": ". | Models . | Profile | . | Operations . | Update a Profile EXPERIMENTAL | Get Profile EXPERIMENTAL | . | . ",
    "url": "/api/profiles#contents",
    "relUrl": "/api/profiles#contents"
  },"162": {
    "doc": "Profiles",
    "title": "Models",
    "content": "Profile . Mandatory Fields . | Field | Type | Description | . | userId | String | The Centrapay user id. | . Optional Fields . | Field | Type | Description | . | givenName | String | First name. | . | familyName | String | Last name. | . | featureUpdates | Boolean | Whether a user would like to receive emails for feature updates. | . | marketingUpdates | Boolean | Whether a user would like to receive emails for marketing updates. | . | email | String | Email address. | . | emailVerified | Boolean | Flag indicating the verification status of the email address. | . | phoneNumber | String | The user’s phone number. | . | phoneVerified | Boolean | Flag indicating the verification status of the phone number. | . ",
    "url": "/api/profiles#models",
    "relUrl": "/api/profiles#models"
  },"163": {
    "doc": "Profiles",
    "title": "Operations",
    "content": "Update a Profile EXPERIMENTAL . Update a user’s mutable attributes. At least one field must be provided in the request. POST /api/me/profile/update . curl -X POST https://service.centrapay.com/api/me/profile/update \\ -H \"Authorization: $jwt\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"givenName\": \"John\", \"familyName\": \"Doe\", \"featureUpdates\": false, \"marketingUpdates\": true, \"email\": \"john.doe@centrapay.com\" }' . Example response payload . { \"givenName\": \"John\", \"familyName\": \"Doe\", \"featureUpdates\": false, \"marketingUpdates\": true, \"email\": \"john.doe@centrapay.com\" } . Get Profile EXPERIMENTAL . GET /api/users/{userId}/profile . curl https://service.centrapay.com/api/users/da75ad90-9a5b-4df0-8374-f48b3a8fbfcc/profile \\ -H \"X-Api-Key: $api_key\" . Example response payload . { \"userId\": \"9f4b3bae-dc30-11ea-ab70-2743d9be3dd5\", \"givenName\": \"John\", \"familyName\": \"Doe\", \"featureUpdates\": true, \"marketingUpdates\": true, \"email\": \"john.doe@centrapay.com\", \"emailVerified\": true, \"phoneNumber\": \"+64271112222\", \"phoneVerified\": true } . ",
    "url": "/api/profiles#operations",
    "relUrl": "/api/profiles#operations"
  },"164": {
    "doc": "Profiles",
    "title": "Profiles",
    "content": " ",
    "url": "/api/profiles",
    "relUrl": "/api/profiles"
  },"165": {
    "doc": "Quotas",
    "title": "Quotas",
    "content": "Centrapay account quotas are enforced on usage types such as spending or topping up, and may apply to a time period (daily, monthly, yearly). Account quotas may be affected by the verification status of the Centrapay account. ",
    "url": "/api/quotas",
    "relUrl": "/api/quotas"
  },"166": {
    "doc": "Quotas",
    "title": "Contents",
    "content": ". | Models . | Quota | . | Operations . | Getting account quotas EXPERIMENTAL | . | . ",
    "url": "/api/quotas#contents",
    "relUrl": "/api/quotas#contents"
  },"167": {
    "doc": "Quotas",
    "title": "Models",
    "content": "Quota . Required Fields . | Field | Type | Description | . | type | String | The quota’s type. | . | limit | BigNumber | The quota’s upper usage limit. | . | usage | BigNumber | The quota’s current usage. | . Optional Fields . | Field | Type | Description | . | assetType | String | The type of asset the quota is scoped to, eg centrapay.nzd.main. | . | period | String | The recurring, time-bound quota’s duration: daily, monthly or yearly. | . | interval | String | The specific day, month or year the quota applies to, eg: 2020-01-01, 2020-01, 2020. | . Supported Quota Types . The following table describes the supported quota types and variants. The “Scoped” column indicates whether the quota can have different values for different asset types. The “Periods” column indicates which periods are applicable to the quota. | Type | Description | Scoped | Periods | . | spend | Value of wallet-based payments or asset transfers from the account. | Yes | monthly yearly | . | topup | Value of topups from bank accounts linked to the account. | Yes | monthly yearly | . ",
    "url": "/api/quotas#models",
    "relUrl": "/api/quotas#models"
  },"168": {
    "doc": "Quotas",
    "title": "Operations",
    "content": "Getting account quotas EXPERIMENTAL . Retrieve quota limits and usages for the current intervals. Ie, all quotas for the current day, current month and current year as well as any quotas that are not associated with a temporal period. GET /api/accounts/{accountId}/quotas . curl https://service.centrapay.com/api/accounts/Jaim1Cu1Q55uooxSens6yk/quotas \\ -H \"X-Api-Key: $api_key\" . Example response payload . [ { \"limit\": \"1000\", \"interval\": \"2021-03\", \"period\": \"monthly\", \"usage\": \"500\", \"type\": \"spend\", \"assetType\": \"centrapay.nzd.main\" }, { \"limit\": \"9999\", \"interval\": \"2021\", \"period\": \"yearly\", \"usage\": \"1555\", \"type\": \"spend\", \"assetType\": \"centrapay.nzd.main\" }, { \"limit\": \"1000\", \"interval\": \"2021-03\", \"period\": \"monthly\", \"usage\": \"500\", \"type\": \"topup\", \"assetType\": \"centrapay.nzd.main\" }, { \"limit\": \"9999\", \"interval\": \"2021\", \"period\": \"yearly\", \"usage\": \"5000\", \"type\": \"topup\", \"assetType\": \"centrapay.nzd.main\" } ] . Error Responses . If a quota limit is exceeded by an action that enforces quota limits, the following error response will be returned. The quotas field will contain all quota limits that are exceeded with the usage set to the amount that the quota would have been updated to if the action was completed. { \"message\": \"QUOTA_EXCEEDED\", \"quotas\": [ { \"limit\": \"9999\", \"interval\": \"2021\", \"period\": \"yearly\", \"usage\": \"10000\", \"type\": \"topup\", \"assetType\": \"centrapay.nzd.main\" } ] } . ",
    "url": "/api/quotas#operations",
    "relUrl": "/api/quotas#operations"
  },"169": {
    "doc": "Status Codes",
    "title": "HTTP Status Codes",
    "content": "Centrapay APIs respond with 200, 400, 401, 403, 404, or 429 HTTP status codes. In rare cases endpoints may respond with 5xx status codes. Some legacy or deprecated endpoints may have exceptions to the guidelines documented here. Any such exceptions will be documented on the endpoints. ",
    "url": "/api/status-codes#http-status-codes",
    "relUrl": "/api/status-codes#http-status-codes"
  },"170": {
    "doc": "Status Codes",
    "title": "Contents",
    "content": ". | 200 Ok | 400 Malformed Request | 401 Unauthorized | 403 Forbidden . | Resource missing or permission denied | Business rule violated | . | 404 Route Not Found | 429 Too Many Requests | 5xx Server Error | . ",
    "url": "/api/status-codes#contents",
    "relUrl": "/api/status-codes#contents"
  },"171": {
    "doc": "Status Codes",
    "title": "200 Ok",
    "content": "Everything’s ok. Enjoy your well formed response! . ",
    "url": "/api/status-codes#200-ok",
    "relUrl": "/api/status-codes#200-ok"
  },"172": {
    "doc": "Status Codes",
    "title": "400 Malformed Request",
    "content": "This is a syntax failure. When you get these back, your application needs to change the way it behaves in order to get back the resource that you’re after. Don’t try again, this is never going to work. Example response body . { \"statusCode\": 400, \"message\": \"amount is required\" } . Debugging . | Make sure you set “content-type: application/json” | The response body should indicate where the error is | Make sure your HTTP body fields are set correctly | Check your HTTP verb is correct (POST, PUT, GET etc.) | Check query parameters are set correctly | Check path parameters are set correctly | . ",
    "url": "/api/status-codes#400-malformed-request",
    "relUrl": "/api/status-codes#400-malformed-request"
  },"173": {
    "doc": "Status Codes",
    "title": "401 Unauthorized",
    "content": "API key or JWT is missing or expired. Go look at our Auth documentation. Example response body . { \"statusCode\": 401, \"error\": \"Unauthorized\", \"message\": \"Missing authentication\" } . ",
    "url": "/api/status-codes#401-unauthorized",
    "relUrl": "/api/status-codes#401-unauthorized"
  },"174": {
    "doc": "Status Codes",
    "title": "403 Forbidden",
    "content": "A 403 status indicates resource missing, permission denied or business rule violation. Resource missing or permission denied . Example response body . { \"statusCode\": 403, \"error\": \"Forbidden\", \"message\": \"Forbidden\" } . Debugging . | Check the resource id is correct | Check your user or API key has membership for the account that owns the resource you are accessing. | Check the role of your user or API key has permission (See Auth Permissions). | . Business rule violated . When the resource exists and access is authorized but some other business rule is violated then a 403 is returned. Additional information will be included in the “message” field of the response body. The possible values for the “message” field will be documented on each endpoint. Example response body . { \"statusCode\": 403, \"error\": \"Forbidden\", \"message\": \"INSUFFICIENT_BALANCE\" } . ",
    "url": "/api/status-codes#403-forbidden",
    "relUrl": "/api/status-codes#403-forbidden"
  },"175": {
    "doc": "Status Codes",
    "title": "404 Route Not Found",
    "content": "Variant on a 400, there’s a bug in your code that means you’ve got a typo in the URL or HTTP method. Please check against examples in our documentation. Example response body . { \"statusCode\": 404, \"error\": \"Not Found\", \"message\": \"Not Found\" } . ",
    "url": "/api/status-codes#404-route-not-found",
    "relUrl": "/api/status-codes#404-route-not-found"
  },"176": {
    "doc": "Status Codes",
    "title": "429 Too Many Requests",
    "content": "Centrapay API rate limits have been exceeded. Example response body . { \"statusCode\": 429, \"error\": \"Too Many Requests\", \"message\": \"RATE_LIMIT_EXCEEDED\" } . Debugging . | Check the Retry-After HTTP response header for the number of seconds before the next request will be accepted. | Contact integrations@centrapay.com to increase your limits. | . ",
    "url": "/api/status-codes#429-too-many-requests",
    "relUrl": "/api/status-codes#429-too-many-requests"
  },"177": {
    "doc": "Status Codes",
    "title": "5xx Server Error",
    "content": "If you get a 500 level error, something has gone wrong on our end. Retrying should solve the issue. Usually a Centrapay Engineer will investigate but bug reports are also welcome at integrations@centrapay.com. ",
    "url": "/api/status-codes#5xx-server-error",
    "relUrl": "/api/status-codes#5xx-server-error"
  },"178": {
    "doc": "Status Codes",
    "title": "Status Codes",
    "content": " ",
    "url": "/api/status-codes",
    "relUrl": "/api/status-codes"
  },"179": {
    "doc": "Verifone Terminal Status Batch",
    "title": "Verifone Terminal Status Batch",
    "content": "Performs a bulk update to the current status for connected Verifone NZ payment terminals. See the Batch resource for how to submit an instance of this batch. | Type Name | verifone-terminal-status | . | File Format | JSONL | . | Record Type | Terminal Status | . ",
    "url": "/api/batch-types/verifone-terminal-status",
    "relUrl": "/api/batch-types/verifone-terminal-status"
  },"180": {
    "doc": "Verifone Terminal Status Batch",
    "title": "Contents",
    "content": ". | Models . | Terminal Status | . | Example JSONL File | Pretty Printed Example | . ",
    "url": "/api/batch-types/verifone-terminal-status#contents",
    "relUrl": "/api/batch-types/verifone-terminal-status#contents"
  },"181": {
    "doc": "Verifone Terminal Status Batch",
    "title": "Models",
    "content": ". Terminal Status . Fields . | Field | Type | Description | . | status | String | Current terminal status: “active” or “inactive”. | . | statusMessage | String | Reason for status. Eg: “config update required”. | . | terminalId | String | Logical terminal id. Eg: “325-136-329”. | . | deviceId | String Optional | Hardware serial number. Eg: “T404395000002”. | . | merchantId | String Optional | Centrapay Merchant id. | . | merchantConfigId | String Optional | Centrapay Merchant Config id. | . | merchantName | String Optional | Name of merchant. Eg: “Centra Café”. | . | description | String Optional | Description of the device. Eg “Front Till” | . | model | String Optional | Hardware model. Eg: “VX820”. | . | firstSeen | Timestamp Optional | Date when terminal status was first observed. | . | lastSeen | Timestamp Optional | Date when terminal status was last observed. | . | configVersion | String Optional | Version of loaded terminal configuration. Eg: “20220214.1”. | . | configUpdatedAt | Timestamp Optional | Date when terminal configuration was loaded. | . | softwareVersion | String Optional | Version of terminal software. Eg: “1.7.134”. | . | softwareUpdatedAt | Timestamp Optional | Date when terminal software was updated. | . ",
    "url": "/api/batch-types/verifone-terminal-status#models",
    "relUrl": "/api/batch-types/verifone-terminal-status#models"
  },"182": {
    "doc": "Verifone Terminal Status Batch",
    "title": "Example JSONL File",
    "content": "A complete JSONL batch file example. For more legible examples refer to the pretty printed example below. {\"merchantId\":\"06baa0708ee0e000696\",\"merchantConfigId\":\"baa09e8158300063fc\",\"merchantName\":\"Centra Café\",\"description\":\"Till #1\",\"model\":\"VX820\",\"terminalId\":\"325-136-331\",\"deviceId\":\"T404395000004\",\"status\":\"inactive\",\"statusMessage\":\"update required\",\"firstSeen\":\"2020-01-14T09:00:00Z\",\"lastSeen\":\"2022-03-14T09:00:00Z\",\"configVersion\": 20210914.1,\"configUpdatedAt\":\"2021-09-15 09:00:00 UTC\",\"softwareVersion\":\"1.7.134\",\"softwareUpdatedAt\":\"2021-11-14 09:00:00 UTC\"} {\"merchantId\":\"06baa0708ee0e000696\",\"merchantConfigId\":\"baa09e8158300063fc\",\"merchantName\":\"Centra Café\",\"description\":\"Till #2\",\"model\":\"VX820\",\"terminalId\":\"325-136-329\",\"deviceId\":\"T404395000002\",\"status\":\"active\",\"statusMessage\":\"ok\",\"firstSeen\":\"2020-01-14T09:00:00Z\",\"lastSeen\":\"2022-03-14T09:00:00Z\",\"configVersion\": 20220214.1,\"configUpdatedAt\":\"2022-02-14 09:00:00 UTC\",\"softwareVersion\":\"1.7.134\",\"softwareUpdatedAt\":\"2021-11-14 09:00:00 UTC\"} . ",
    "url": "/api/batch-types/verifone-terminal-status#example-jsonl-file",
    "relUrl": "/api/batch-types/verifone-terminal-status#example-jsonl-file"
  },"183": {
    "doc": "Verifone Terminal Status Batch",
    "title": "Pretty Printed Example",
    "content": "Warning: Below our records have newlines for legibility. When submitting a batch file you must only use newlines to separate records. { \"merchantId\": \"06baa0708ee0e000696\", \"merchantConfigId\": \"baa09e8158300063fc\", \"merchantName\": \"Centra Café\", \"description\": \"Till #2\", \"model\": \"VX820\", \"terminalId\": \"325-136-329\", \"deviceId\": \"T404395000002\", \"status\": \"active\", \"statusMessage\": \"incompatible hardware\", \"firstSeen\": \"2020-01-14T09:00:00Z\", \"lastSeen\": \"2022-03-14T09:00:00Z\", \"configVersion\": 20220214.1, \"configUpdatedAt\": \"2022-02-14 09:00:00 UTC\", \"softwareVersion\": \"1.7.134\", \"softwareUpdatedAt\": \"2021-11-14 09:00:00 UTC\" } . ",
    "url": "/api/batch-types/verifone-terminal-status#pretty-printed-example",
    "relUrl": "/api/batch-types/verifone-terminal-status#pretty-printed-example"
  },"184": {
    "doc": "Wallets",
    "title": "Wallets",
    "content": "A Wallet is an asset that represents money. The Wallet maintains a record of all transactions it has participated in. A Wallet has a single balance and a single currency. ",
    "url": "/api/wallets",
    "relUrl": "/api/wallets"
  },"185": {
    "doc": "Wallets",
    "title": "Settlement Wallets EXPERIMENTAL",
    "content": "A Settlement Wallet is a special type of Wallet that can only receive or refund money related to a payment request. This means you cannot topup, withdraw, or send money from this Wallet. ",
    "url": "/api/wallets#settlement-wallets-experimental",
    "relUrl": "/api/wallets#settlement-wallets-experimental"
  },"186": {
    "doc": "Wallets",
    "title": "Contents",
    "content": ". | Creating a Wallet | Listing authorized wallets | Listing Wallet Transactions EXPERIMENTAL | . ",
    "url": "/api/wallets#contents",
    "relUrl": "/api/wallets#contents"
  },"187": {
    "doc": "Wallets",
    "title": "Creating a Wallet",
    "content": "POST /api/wallets . curl -X POST https://service.centrapay.com/api/wallets \\ -H \"X-Api-Key: $api_key\" \\ -H \"Content-Type: application/json\" \\ -d '{ \"accountId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"ledgerId\": \"centrapay.nzd.main\" }' . Required Fields . | Field | Type | Description | . | accountId | String | The id of the account | . | ledgerId | String | The id of the ledger e.g. centrapay.nzd.main, centrapay.nzd.test | . Optional Fields . | Field | Type | Description | . | settlement | Boolean | EXPERIMENTAL Configure the Wallet to be a Settlement Wallet. | . Example response payload . { \"id\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"accountId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"category\": \"money\", \"type\": \"centrapay.nzd.main\", \"liveness\": \"main\", \"description\": \"NZD\", \"createdAt\": \"2021-01-01T00:00:00.000Z\", \"status\": \"active\", \"currency\": \"NZD\", \"balance\": \"0\", \"availableBalance\": \"6000\" } . Example response payload for Settlement Wallet . { \"id\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"accountId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"category\": \"money\", \"type\": \"centrapay.nzd.main\", \"liveness\": \"main\", \"description\": \"NZD\", \"createdAt\": \"2021-01-01T00:00:00.000Z\", \"status\": \"active\", \"currency\": \"NZD\", \"balance\": \"0\", \"availableBalance\": \"6000\", \"settlement\": true } . Error Responses . | Status | Code | Description | . | 403 | ACCOUNT_MAX_WALLETS_REACHED | The maximum number of wallets for the given ledger has been reached. | . ",
    "url": "/api/wallets#creating-a-wallet",
    "relUrl": "/api/wallets#creating-a-wallet"
  },"188": {
    "doc": "Wallets",
    "title": "Listing authorized wallets",
    "content": "GET /api/wallets . curl https://service.centrapay.com/api/wallets \\ -H \"X-Api-Key: $api_key\" . Example response payload . [ { \"id\": \"WRhAxxWpTKb5U7pXyxQjjY\", \"accountId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"ledgerId\": \"centrapay.nzd.main\", \"currency\": \"NZD\", \"balance\": \"2000\", \"availableBalance\": \"6000\" }, { \"id\": \"NQ1yeromwnWPD2hY41L2yS\", \"accountId\": \"Te2uDM7xhDLWGVJU3nzwnh\", \"ledgerId\": \"centrapay.nzd.test\", \"currency\": \"NZD\", \"balance\": \"20\", \"availableBalance\": \"6000\" } ] . ",
    "url": "/api/wallets#listing-authorized-wallets",
    "relUrl": "/api/wallets#listing-authorized-wallets"
  },"189": {
    "doc": "Wallets",
    "title": "Listing Wallet Transactions EXPERIMENTAL",
    "content": "Returns a paginated list of Wallet Transactions. GET /api/wallets/{walletId}/transactions . curl https://service.centrapay.com/api/wallets/WRhAxxWpTKb5U7pXyxQjjY/transactions \\ -H \"X-Api-Key: $api_key\" . Transaction Fields . | Field | Type | Description | . | activityNumber | BigNumber | Unique sequential Wallet transaction number | . | amount | BigNumber | Absolute transaction amount in cents. | . | value | BigNumber | Change to the Wallet’s balance in cents when the transaction was applied. | . | createdAt | Timestamp | Transaction timestamp as ISO 8601 date string. | . | activityType | String | Hints to the type of transaction: undefined or “returned-asset-transfer” | . | destWalletId | String | Id of the destination Wallet if applicable. | . | srcWalletId | String | Id of the source Wallet if applicable. | . | destParty | String | Display value for party receiving funds if applicable. See note below. | . | srcParty | String | Display value for party providing funds if applicable. See note below. | . | paymentRequestId | String | Id of the related payment request if applicable. | . | topupId | String | Id of the related topup funds transfer request if applicable. | . | assetTransferId | String | Id of the related asset transfer request if applicable. | . | withdrawalId | String | Id of the related withdrawal request if applicable. | . Party Values . The “destParty” and “srcParty” are optionally provided depending on the purpose of the transaction. Values may include a merchant name, user handle, masked user email, masked user phone, or bank account. Example response payload (Payment) . { \"items\": [ { \"activityNumber\": \"1\", \"amount\": \"350\", \"value\": \"-350\", \"createdAt\": \"2020-06-17T18:00:23.000Z\", \"destParty\": \"Centrapay Cafe\", \"destWalletId\": \"GfYJd5tZQ63CrehgTP2RPB\", \"srcWalletId\": \"EBVSreNmpsE2Pazw3SipXC\", \"paymentRequestId\": \"MhocUmpxxmgdHjr7DgKoKw\" } ] } . Example response payload (Topup) . { \"items\": [ { \"activityNumber\": \"1\", \"amount\": \"5000\", \"value\": \"5000\", \"createdAt\": \"2020-06-17T18:00:23.000Z\", \"srcParty\": \"12-4000-100001-00\", \"destWalletId\": \"EBVSreNmpsE2Pazw3SipXC\", \"topupId\": \"77hqHDzw6KaaG2P2hoshUB\" } ] } . Example response payload (Sent Asset) . { \"items\": [ { \"activityNumber\": \"1\", \"amount\": \"2500\", \"value\": \"-2500\", \"createdAt\": \"2020-06-17T18:00:23.000Z\", \"destParty\": \"+6422*****36\", \"srcWalletId\": \"EBVSreNmpsE2Pazw3SipXC\", \"assetTransferId\": \"TtQHufC4LGBY2eiPRopRm3\" } ] } . Example response payload (Received Asset) . { \"items\": [ { \"activityNumber\": \"1\", \"amount\": \"2500\", \"value\": \"2500\", \"createdAt\": \"2020-06-17T18:00:23.000Z\", \"srcParty\": \"+6421*****18\", \"destWalletId\": \"EBVSreNmpsE2Pazw3SipXC\", \"assetTransferId\": \"TtQHufC4LGBY2eiPRopRm3\" } ] } . Example response payload (Returned Asset) . { \"items\": [ { \"activityNumber\": \"1\", \"amount\": \"2500\", \"value\": \"2500\", \"createdAt\": \"2020-06-17T18:00:23.000Z\", \"activityType\": \"returned-asset-transfer\", \"srcParty\": \"+6421*****18\", \"destWalletId\": \"EBVSreNmpsE2Pazw3SipXC\", \"assetTransferId\": \"TtQHufC4LGBY2eiPRopRm3\" } ] } . Example response payload (Withdraw) . { \"items\": [ { \"activityNumber\": \"1\", \"amount\": \"2500\", \"value\": \"2500\", \"createdAt\": \"2020-06-17T18:00:23.000Z\", \"srcWalletId\": \"EBVSreNmpsE2Pazw3SipXC\", \"destParty\": \"12-3546-2544786-00\", \"withdrawalId\": \"TtQHufC4LGBY2eiPRopRm3\" } ] } . ",
    "url": "/api/wallets#listing-wallet-transactions-experimental",
    "relUrl": "/api/wallets#listing-wallet-transactions-experimental"
  }
}
