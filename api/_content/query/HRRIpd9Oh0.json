[{"_path":"/guides/merchant-payment-conditions","_dir":"guides","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Merchant Payment Conditions","description":"Some Asset Types such as tokens or closed-loop cards may require conditional operator approval. Merchant integrations are required to support Payment Conditions for these asset types in order for them to be accepted for payment.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/asset-types","rel":["nofollow"]},"children":[{"type":"text","value":"Asset Types"}]},{"type":"text","value":" such as tokens or closed-loop cards may require conditional operator approval. Merchant integrations are required to support "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#payment-condition","rel":["nofollow"]},"children":[{"type":"text","value":"Payment Conditions"}]},{"type":"text","value":" for these asset types in order for them to be accepted for payment."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Examples of Merchant Payment Conditions include:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The merchant needs to confirm proof of identification for age-restricted purchases."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The merchant needs to confirm that a promotional item was purchased."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The patron needs to confirm the payment from their Centrapay integrated app."}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"payment-conditions-flow"},"children":[{"type":"text","value":"Payment Conditions Flow"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to support Merchant Payment Conditions, the merchant integration must extend Centrapay's payment protocol by "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#create-a-payment-request","rel":["nofollow"]},"children":[{"type":"text","value":"creating the Payment Request"}]},{"type":"text","value":" with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"conditionsEnabled"}]},{"type":"text","value":" flag set to true."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The example flow below assumes that the merchant integration has first connected with the Patron when "},{"type":"element","tag":"a","props":{"href":"https://www.notion.so/Requesting-Payment-ad4c917a690a4bc3a4de5fc04a7396c2","rel":["nofollow"]},"children":[{"type":"text","value":"Requesting Payment"}]},{"type":"text","value":" using the "},{"type":"element","tag":"a","props":{"href":"https://www.notion.so/QR-Code-Flow-for-Merchants-a445069e6d9041b48f03bbc22bd5258a","rel":["nofollow"]},"children":[{"type":"text","value":"QR Code Flow for Merchants"}]},{"type":"text","value":" or the "},{"type":"element","tag":"a","props":{"href":"https://www.notion.so/Barcode-Flow-for-Merchants-482ac4e5879642378297f3ad17a68b54","rel":["nofollow"]},"children":[{"type":"text","value":"Barcode Flow for Merchants"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"sequenceDiagram\n    autonumber\n\n    participant Patron\n    participant POS\n    participant Centrapay\n\n    Patron->>POS: Connect with Patron\n\n    POS->>Centrapay: Create Payment Request (with conditionsEnabled = true)\n\n    loop Poll for Payment Confirmation\n        POS->>Centrapay: Get Payment Request\n\n        alt Pending Condition Exists\n            note over POS: ❓ Prompt Merchant to Accept or Decline Condition\n            note over Patron: Inform Patron of Condition\n            POS->>Centrapay: Merchant Accepts Condition\n        else Payment Request status is paid\n            note over POS: Stop Polling for Confirmation\n        end\n    end\n\n    note over POS: ✅ Display Successful Payment\n    note over Patron: ✅ Display Successful Payment\n","language":"mermaid"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sequenceDiagram\n    autonumber\n\n    participant Patron\n    participant POS\n    participant Centrapay\n\n    Patron->>POS: Connect with Patron\n\n    POS->>Centrapay: Create Payment Request (with conditionsEnabled = true)\n\n    loop Poll for Payment Confirmation\n        POS->>Centrapay: Get Payment Request\n\n        alt Pending Condition Exists\n            note over POS: ❓ Prompt Merchant to Accept or Decline Condition\n            note over Patron: Inform Patron of Condition\n            POS->>Centrapay: Merchant Accepts Condition\n        else Payment Request status is paid\n            note over POS: Stop Polling for Confirmation\n        end\n    end\n\n    note over POS: ✅ Display Successful Payment\n    note over Patron: ✅ Display Successful Payment\n"}]}]}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"how-to-handle-payment-conditions"},"children":[{"type":"text","value":"How to Handle Payment Conditions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When Payment Conditions are present on a "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#payment-request","rel":["nofollow"]},"children":[{"type":"text","value":"Payment Request"}]},{"type":"text","value":", merchant integrations and consumer apps need to negotiate them with their respective parties using the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" of each condition."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Prompt"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Merchant integrations should prompt the terminal operator to "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#accept-payment-condition-for-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"accept"}]},{"type":"text","value":" or "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#decline-payment-condition-for-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"decline"}]},{"type":"text","value":" any conditions that have status "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"awaiting-merchant"}]},{"type":"text","value":"."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Consumer apps should inform the Patron to "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#accept-payment-condition-for-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"accept"}]},{"type":"text","value":" or "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#decline-payment-condition-for-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"decline"}]},{"type":"text","value":" any conditions that have status "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"awaiting-patron"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Inform"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Merchant integrations should inform the terminal operator of any conditions that have status "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"awaiting-patron"}]},{"type":"text","value":" using the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" provided with the condition."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Consumer apps should inform the Patron of any conditions that have status "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"awaiting-merchant"}]},{"type":"text","value":" using the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" provided with the condition."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Repeat"}]},{"type":"text","value":" the above steps when polling shows conditions have changed."}]}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"additional-payment-condition-behaviours"},"children":[{"type":"text","value":"Additional Payment Condition Behaviours"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The payment request status must always be polled after "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#accept-payment-condition-for-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"accepting"}]},{"type":"text","value":" or "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#decline-payment-condition-for-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"declining"}]},{"type":"text","value":" a condition as these actions may trigger the additional behaviours below."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Conditions can be linked such that they are added or voided due to state changes on the "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#payment-request","rel":["nofollow"]},"children":[{"type":"text","value":"Payment Request"}]},{"type":"text","value":". Note that accepting or declining a voided condition will fail."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"a","props":{"href":"/guides/patron-not-present"},"children":[{"type":"text","value":"Patron Not Present extension"}]},{"type":"text","value":" may prevent the presentation of conditions that are impossible to satisfy such as checking photo ID."}]}]}]}]},"_type":"markdown","_id":"content:guides:merchant-payment-conditions.md","_source":"content","_file":"guides/merchant-payment-conditions.md","_extension":"md"},{"_path":"/guides/requesting-pre-auth","_dir":"guides","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Requesting Pre Auth","description":"Centrapay’s Pre Auth extension allows a patron to authorise payment up to a limit when the actual payment amount is not yet known.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Centrapay’s Pre Auth extension allows a patron to authorise payment up to a limit when the actual payment amount is not yet known."}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"restrictions"},"children":[{"type":"text","value":"Restrictions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pre Auth payments are not supported in all cases."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Not all asset types support Pre Auth - Payment options for "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/asset-types","rel":["nofollow"]},"children":[{"type":"text","value":"Asset Types"}]},{"type":"text","value":" that do not support Pre Auth will be excluded when a "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#payment-request","rel":["nofollow"]},"children":[{"type":"text","value":"Payment Request"}]},{"type":"text","value":" is created with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"preAuth"}]},{"type":"text","value":" flag."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pre Auth is incompatible with Multi-Asset payments - Only one asset type can be authorised for a Pre Auth."}]}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"pre-auth-flow"},"children":[{"type":"text","value":"Pre Auth Flow"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pre Auth payments go through an orthogonal payment flow compared to Centrapay’s standard payment flow."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See also: "},{"type":"element","tag":"a","props":{"href":"https://www.notion.so/Requesting-Payment-ad4c917a690a4bc3a4de5fc04a7396c2","rel":["nofollow"]},"children":[{"type":"text","value":"Requesting Payment"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"code","props":{"code":"sequenceDiagram\n    autonumber\n\n    participant Patron\n    participant POS\n    participant Centrapay\n\n    note over Patron, POS: Connect with Patron\n    POS->>Centrapay: Create Authorisation\n\n    note over POS: Poll for Payment Confirmation\n\n    note over POS: ✅ Display Successful Authorisation\n\n    note over POS, Centrapay: ⏱️ Some time later..\n\n    loop 0..Many (Up to Authorised Amount)\n        POS->>Centrapay: Make Confirmations Against Authorised Funds\n        note over POS: ✅ Display Successful Confirmation\n    end\n\n    POS->>Centrapay: Release Remaining Authorised Funds\n    note over POS: ✅ Display Successful Release\n","language":"mermaid"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sequenceDiagram\n    autonumber\n\n    participant Patron\n    participant POS\n    participant Centrapay\n\n    note over Patron, POS: Connect with Patron\n    POS->>Centrapay: Create Authorisation\n\n    note over POS: Poll for Payment Confirmation\n\n    note over POS: ✅ Display Successful Authorisation\n\n    note over POS, Centrapay: ⏱️ Some time later..\n\n    loop 0..Many (Up to Authorised Amount)\n        POS->>Centrapay: Make Confirmations Against Authorised Funds\n        note over POS: ✅ Display Successful Confirmation\n    end\n\n    POS->>Centrapay: Release Remaining Authorised Funds\n    note over POS: ✅ Display Successful Release\n"}]}]}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The POS places a hold on funds by creating an Authorisation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The POS draws down on authorised funds by making Confirmations against the authorisation when the purchase is ready to be fulfilled."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The POS releases any remaining funds that have not been confirmed back to the Patron."}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"authorise"},"children":[{"type":"text","value":"Authorise"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"An authorisation is created when the "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#create-a-payment-request","rel":["nofollow"]},"children":[{"type":"text","value":"Payment Request is created"}]},{"type":"text","value":" with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"preAuth"}]},{"type":"text","value":" flag while "},{"type":"element","tag":"a","props":{"href":"https://www.notion.so/Requesting-Payment-ad4c917a690a4bc3a4de5fc04a7396c2","rel":["nofollow"]},"children":[{"type":"text","value":"Requesting Payment"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once the authorisation is successful, the Payment Request "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"preAuthStatus"}]},{"type":"text","value":" is set to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"authorized"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"sequenceDiagram\n    autonumber\n\n    participant P as Patron\n    participant POS\n    participant C as Centrapay\n\n    POS->>C: Create Payment Request with preAuth = true\n\n    loop Poll for Payment Confirmation\n        POS->>C: Get Payment Request Status\n\n        opt Payment Request Status is paid\n            Note over POS: Stop Polling\n        end\n    end\n\n    note over POS: ✅ Display Successful Authorisation\n","language":"mermaid"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sequenceDiagram\n    autonumber\n\n    participant P as Patron\n    participant POS\n    participant C as Centrapay\n\n    POS->>C: Create Payment Request with preAuth = true\n\n    loop Poll for Payment Confirmation\n        POS->>C: Get Payment Request Status\n\n        opt Payment Request Status is paid\n            Note over POS: Stop Polling\n        end\n    end\n\n    note over POS: ✅ Display Successful Authorisation\n"}]}]}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"confirm"},"children":[{"type":"text","value":"Confirm"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Merchants can draw down on authorised funds by making one or more "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#make-a-confirmation-against-a-pre-auth-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"confirmations"}]},{"type":"text","value":" against an authorised amount. Confirmations must be made with an "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"idempotencyKey"}]},{"type":"text","value":" in order to prevent merchants from drawing down on authorised funds twice."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Confirmations against authorised funds have limits:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authorisations must be followed up with a confirmation - otherwise, the authorisation will expire and the funds will be returned to the asset holder."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"preAuthExpiry"}]},{"type":"text","value":" may be adjusted to match pre-determined expiry rules set by the asset provider."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Multiple confirmations can be performed against an authorisation but the total value cannot exceed the original authorised value."}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Making confirmations is only allowed against authorisations that have had zero or more confirmations made against them."}]}]},{"type":"element","tag":"code","props":{"code":"sequenceDiagram\n    autonumber\n\n    participant P as Patron\n    participant POS\n    participant C as Centrapay\n\n    POS->>C: Create Authorisation\n\n    note over POS, C: ⏱️ Some time later..\n\n    loop 0..Many (Up to Authorised Amount)\n        POS->>C: Make Confirmations Against Authorised Funds\n        Note over POS: ✅ Display Successful Confirmation\n    end\n","language":"mermaid"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sequenceDiagram\n    autonumber\n\n    participant P as Patron\n    participant POS\n    participant C as Centrapay\n\n    POS->>C: Create Authorisation\n\n    note over POS, C: ⏱️ Some time later..\n\n    loop 0..Many (Up to Authorised Amount)\n        POS->>C: Make Confirmations Against Authorised Funds\n        Note over POS: ✅ Display Successful Confirmation\n    end\n"}]}]}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"release"},"children":[{"type":"text","value":"Release"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Authorised funds that have not been confirmed can optionally be "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#release-funds-held-for-a-pre-auth-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"released"}]},{"type":"text","value":" so that the asset holder is granted access to their remaining funds without needing to wait for the authorisation to expire."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once releasing any remaining authorised funds is successful, the Payment Request "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"preAuthStatus"}]},{"type":"text","value":" is set to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"released"}]},{"type":"text","value":"."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Releasing is only allowed against authorisations that have had zero or more confirmations made against them."}]}]},{"type":"element","tag":"code","props":{"code":"sequenceDiagram\n    autonumber\n\n    participant P as Patron\n    participant POS\n    participant C as Centrapay\n\n    note over POS: All Confirmations Have Been Completed\n        POS->>C: Release Remaining Authorised Funds\n        Note over POS: ✅ Display Successful Confirmation\n","language":"mermaid"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sequenceDiagram\n    autonumber\n\n    participant P as Patron\n    participant POS\n    participant C as Centrapay\n\n    note over POS: All Confirmations Have Been Completed\n        POS->>C: Release Remaining Authorised Funds\n        Note over POS: ✅ Display Successful Confirmation\n"}]}]}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"expiry"},"children":[{"type":"text","value":"Expiry"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Authorisations automatically expire after 3 months. Any unreleased funds are subsequently released to the Patron."}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"refund"},"children":[{"type":"text","value":"Refund"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.notion.so/ae3daeeb04c24b8b8e22680cc475afd7","rel":["nofollow"]},"children":[{"type":"text","value":"Refunds"}]},{"type":"text","value":" can be made against authorisations, confirmations, released authorisations and expired authorisations."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Refunds made against confirmations must include the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"confirmationIdempotencyKey"}]},{"type":"text","value":" field that is the same as the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"idempotencyKey"}]},{"type":"text","value":" used for original confirmation."}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"void"},"children":[{"type":"text","value":"Void"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#void-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"Voiding a Payment Request"}]},{"type":"text","value":" will cancel a Payment Request and trigger any refunds necessary. This operation is useful if the POS needs to back out of a transaction due to a network error for example. Voiding can only be used up to 24 hours after the Payment Request was created."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Voiding is only allowed against Payment Requests awaiting authorisation and Payment Requests that have been successfully authorised."}]}]}]}]}]},"_type":"markdown","_id":"content:guides:requesting-pre-auth.md","_source":"content","_file":"guides/requesting-pre-auth.md","_extension":"md"}]