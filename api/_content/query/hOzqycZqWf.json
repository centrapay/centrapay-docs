[{"_path":"/guides/merchant-integration-error-handling","_dir":"guides","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Merchant Integration Error Handling","description":"Below are our guidelines for dealing with inconsistencies in Payment Request statuses due to network issues or race conditions.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Below are our guidelines for dealing with inconsistencies in "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#payment-request","rel":["nofollow"]},"children":[{"type":"text","value":"Payment Request"}]},{"type":"text","value":" statuses due to network issues or race conditions."}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"respect-the-payment-request-status"},"children":[{"type":"text","value":"Respect the Payment Request Status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Use the Payment Request status as the source of truth when determining if a Payment Request is paid or expired. For example, if cancelling a Payment Request fails with a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"REQUEST_PAID"}]},{"type":"text","value":" error then the terminal should respond accordingly; either by showing the transaction as paid or "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#void-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"initiating a void"}]},{"type":"text","value":" instead."}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"void-when-the-status-is-unknown"},"children":[{"type":"text","value":"Void When the Status is Unknown"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If the status of a transaction cannot be determined to be successful after retrying, then the Payment Request should be voided. "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#void","rel":["nofollow"]},"children":[{"type":"text","value":"Voiding a Payment Request"}]},{"type":"text","value":" will cancel the request and trigger any refunds if necessary."}]}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"ensure-the-pos-times-out-after-the-payment-request"},"children":[{"type":"text","value":"Ensure the POS times out after the Payment Request"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Payment Requests have a configurable timeout which defaults to 2 minutes. Integrators should make sure that the payment terminal times out 5-10 seconds "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"after"}]},{"type":"text","value":" the Payment Request."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For example, if the Point of Sale (POS) has a 90-second payment timeout then the Payment Request could be created with an 85-second timeout to prevent the payment terminal expiring at the same time as the payment request is paid."}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"retry-unknown-errors"},"children":[{"type":"text","value":"Retry Unknown Errors"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When faced with an unknown error while checking the status of a Payment Request, POS integrations should retry at least once before voiding the transaction."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Retries should use the appropriate idempotency key where applicable."}]}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"resolving-persistent-errors"},"children":[{"type":"text","value":"Resolving Persistent Errors"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For issues that cannot be resolved, please reach out to Centrapay Support at "},{"type":"element","tag":"a","props":{"href":"mailto:integrations@centrapay.com"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"integrations@centrapay.com"}]}]},{"type":"text","value":"."}]}]}]},"_type":"markdown","_id":"content:guides:merchant-integration-error-handling.md","_source":"content","_file":"guides/merchant-integration-error-handling.md","_extension":"md"},{"_path":"/guides/merchant-payment-conditions","_dir":"guides","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Merchant Payment Conditions","description":"Some Asset Types such as tokens or closed-loop cards may require conditional operator approval. Merchant integrations are required to support Payment Conditions for these asset types in order for them to be accepted for payment.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/asset-types","rel":["nofollow"]},"children":[{"type":"text","value":"Asset Types"}]},{"type":"text","value":" such as tokens or closed-loop cards may require conditional operator approval. Merchant integrations are required to support "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#payment-condition","rel":["nofollow"]},"children":[{"type":"text","value":"Payment Conditions"}]},{"type":"text","value":" for these asset types in order for them to be accepted for payment."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Examples of Merchant Payment Conditions include:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The merchant needs to confirm proof of identification for age-restricted purchases."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The merchant needs to confirm that a promotional item was purchased."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The patron needs to confirm the payment from their Centrapay integrated app."}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"payment-conditions-flow"},"children":[{"type":"text","value":"Payment Conditions Flow"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to support Merchant Payment Conditions, the merchant integration must extend Centrapay's payment protocol by "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#create-a-payment-request","rel":["nofollow"]},"children":[{"type":"text","value":"creating the Payment Request"}]},{"type":"text","value":" with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"conditionsEnabled"}]},{"type":"text","value":" flag set to true."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The example flow below assumes that the merchant integration has first connected with the Patron when "},{"type":"element","tag":"a","props":{"href":"https://www.notion.so/Requesting-Payment-ad4c917a690a4bc3a4de5fc04a7396c2","rel":["nofollow"]},"children":[{"type":"text","value":"Requesting Payment"}]},{"type":"text","value":" using the "},{"type":"element","tag":"a","props":{"href":"https://www.notion.so/QR-Code-Flow-for-Merchants-a445069e6d9041b48f03bbc22bd5258a","rel":["nofollow"]},"children":[{"type":"text","value":"QR Code Flow for Merchants"}]},{"type":"text","value":" or the "},{"type":"element","tag":"a","props":{"href":"https://www.notion.so/Barcode-Flow-for-Merchants-482ac4e5879642378297f3ad17a68b54","rel":["nofollow"]},"children":[{"type":"text","value":"Barcode Flow for Merchants"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"sequenceDiagram\n    autonumber\n\n    participant Patron\n    participant POS\n    participant Centrapay\n\n    Patron->>POS: Connect with Patron\n\n    POS->>Centrapay: Create Payment Request (with conditionsEnabled = true)\n\n    loop Poll for Payment Confirmation\n        POS->>Centrapay: Get Payment Request\n\n        alt Pending Condition Exists\n            note over POS: ❓ Prompt Merchant to Accept or Decline Condition\n            note over Patron: Inform Patron of Condition\n            POS->>Centrapay: Merchant Accepts Condition\n        else Payment Request status is paid\n            note over POS: Stop Polling for Confirmation\n        end\n    end\n\n    note over POS: ✅ Display Successful Payment\n    note over Patron: ✅ Display Successful Payment\n","language":"mermaid"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sequenceDiagram\n    autonumber\n\n    participant Patron\n    participant POS\n    participant Centrapay\n\n    Patron->>POS: Connect with Patron\n\n    POS->>Centrapay: Create Payment Request (with conditionsEnabled = true)\n\n    loop Poll for Payment Confirmation\n        POS->>Centrapay: Get Payment Request\n\n        alt Pending Condition Exists\n            note over POS: ❓ Prompt Merchant to Accept or Decline Condition\n            note over Patron: Inform Patron of Condition\n            POS->>Centrapay: Merchant Accepts Condition\n        else Payment Request status is paid\n            note over POS: Stop Polling for Confirmation\n        end\n    end\n\n    note over POS: ✅ Display Successful Payment\n    note over Patron: ✅ Display Successful Payment\n"}]}]}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"how-to-handle-payment-conditions"},"children":[{"type":"text","value":"How to Handle Payment Conditions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When Payment Conditions are present on a "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#payment-request","rel":["nofollow"]},"children":[{"type":"text","value":"Payment Request"}]},{"type":"text","value":", merchant integrations and consumer apps need to negotiate them with their respective parties using the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"status"}]},{"type":"text","value":" of each condition."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Prompt"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Merchant integrations should prompt the terminal operator to "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#accept-payment-condition-for-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"accept"}]},{"type":"text","value":" or "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#decline-payment-condition-for-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"decline"}]},{"type":"text","value":" any conditions that have status "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"awaiting-merchant"}]},{"type":"text","value":"."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Consumer apps should inform the Patron to "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#accept-payment-condition-for-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"accept"}]},{"type":"text","value":" or "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#decline-payment-condition-for-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"decline"}]},{"type":"text","value":" any conditions that have status "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"awaiting-patron"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Inform"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Merchant integrations should inform the terminal operator of any conditions that have status "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"awaiting-patron"}]},{"type":"text","value":" using the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" provided with the condition."},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Consumer apps should inform the Patron of any conditions that have status "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"awaiting-merchant"}]},{"type":"text","value":" using the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"message"}]},{"type":"text","value":" provided with the condition."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Repeat"}]},{"type":"text","value":" the above steps when polling shows conditions have changed."}]}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"additional-payment-condition-behaviours"},"children":[{"type":"text","value":"Additional Payment Condition Behaviours"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The payment request status must always be polled after "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#accept-payment-condition-for-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"accepting"}]},{"type":"text","value":" or "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#decline-payment-condition-for-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"declining"}]},{"type":"text","value":" a condition as these actions may trigger the additional behaviours below."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Conditions can be linked such that they are added or voided due to state changes on the "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#payment-request","rel":["nofollow"]},"children":[{"type":"text","value":"Payment Request"}]},{"type":"text","value":". Note that accepting or declining a voided condition will fail."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"a","props":{"href":"/guides/patron-not-present"},"children":[{"type":"text","value":"Patron Not Present extension"}]},{"type":"text","value":" may prevent the presentation of conditions that are impossible to satisfy such as checking photo ID."}]}]}]}]},"_type":"markdown","_id":"content:guides:merchant-payment-conditions.md","_source":"content","_file":"guides/merchant-payment-conditions.md","_extension":"md"}]