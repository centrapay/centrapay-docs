[{"_path":"/guides/line-items","_dir":"guides","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Line Items","description":"Line Items are used to communicate the details of a purchase to a Patron.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#line-item","rel":["nofollow"]},"children":[{"type":"text","value":"Line Items"}]},{"type":"text","value":" are used to communicate the details of a purchase to a Patron."}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"restrictions"},"children":[{"type":"text","value":"Restrictions"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The price of a Line Item MUST represent the amount that a Patron will pay for that Line Item, including tax and any discounts applied (e.g. price = product price * qty - discounts + tax)."},{"type":"element","tag":"code","props":{"code":"[\n  {\n    name: 'Cinema Tickets',\n    sku: '123456789',\n    qty: '2',\n    price: '3600', // 2 x $20 + $6 (15% tax) - $10 (discount)\n    tax: '15.0',\n    discount: '1000' # $10\n  }\n]\n","filename":"Example","language":"json"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"[\n  {\n    name: 'Cinema Tickets',\n    sku: '123456789',\n    qty: '2',\n    price: '3600', // 2 x $20 + $6 (15% tax) - $10 (discount)\n    tax: '15.0',\n    discount: '1000' # $10\n  }\n]\n"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The price for each Line Item MUST be provided in cents."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The total for all Line Item prices MUST sum to the "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#payment-request","rel":["nofollow"]},"children":[{"type":"text","value":"Payment Request"}]},{"type":"text","value":" amount."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The currency for each Line Item MUST be consistent with the Payment Request value."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The discount for each Line Item MUST be provided in cents and is tax exclusive."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A discount that applies to multiple line items may be represented as a separate line item with a negative amount."},{"type":"element","tag":"code","props":{"code":"[\n  {\n    name: 'Cinema Tickets',\n    sku: '123456789',\n    qty: '2',\n    price: '4600' // 2 x $20 + $6 (15% tax),\n    tax: '15.0'\n  },\n  {\n    name: 'Popcorn',\n    sku: '987654321',\n    qty: '1',\n    price: '1150', // $10 popcorn + $1.50 (15% tax)\n    tax: '15.0'\n  },\n  {\n    name: 'Combo Discount',\n    sku: '123456789',\n    qty: '1',\n    price: '-1500', // $15 (discount)\n    tax: '15.0'\n  }\n]\n","filename":"Example","language":"json"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"[\n  {\n    name: 'Cinema Tickets',\n    sku: '123456789',\n    qty: '2',\n    price: '4600' // 2 x $20 + $6 (15% tax),\n    tax: '15.0'\n  },\n  {\n    name: 'Popcorn',\n    sku: '987654321',\n    qty: '1',\n    price: '1150', // $10 popcorn + $1.50 (15% tax)\n    tax: '15.0'\n  },\n  {\n    name: 'Combo Discount',\n    sku: '123456789',\n    qty: '1',\n    price: '-1500', // $15 (discount)\n    tax: '15.0'\n  }\n]\n"}]}]}]}]}]}]}]},"_type":"markdown","_id":"content:guides:line-items.md","_source":"content","_file":"guides/line-items.md","_extension":"md"},{"_path":"/guides/merchant-integration-error-handling","_dir":"guides","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Merchant Integration Error Handling","description":"Below are our guidelines for dealing with inconsistencies in Payment Request statuses due to network issues or race conditions.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Below are our guidelines for dealing with inconsistencies in "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#payment-request","rel":["nofollow"]},"children":[{"type":"text","value":"Payment Request"}]},{"type":"text","value":" statuses due to network issues or race conditions."}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"respect-payment-status"},"children":[{"type":"text","value":"Respect Payment Status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Use the Payment Request status as the source of truth when determining if a Payment Request is paid or expired. For example, if cancelling a Payment Request fails with a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"REQUEST_PAID"}]},{"type":"text","value":" error then the terminal should respond accordingly; either by showing the transaction as paid or "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#void-a-payment-request-experimental","rel":["nofollow"]},"children":[{"type":"text","value":"initiating a void"}]},{"type":"text","value":" instead."}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h3","props":{"id":"void-unknown-status"},"children":[{"type":"text","value":"Void Unknown Status"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If the status of a transaction cannot be determined to be successful after retrying, then the Payment Request should be voided. "},{"type":"element","tag":"a","props":{"href":"https://docs.centrapay.com/api/payment-requests#void","rel":["nofollow"]},"children":[{"type":"text","value":"Voiding a Payment Request"}]},{"type":"text","value":" will cancel the request and trigger any refunds if necessary."}]}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"configure-pos-timeout"},"children":[{"type":"text","value":"Configure POS Timeout"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Payment Requests have a configurable timeout which defaults to 2 minutes. Integrators should make sure that the payment terminal times out 5-10 seconds "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"after"}]},{"type":"text","value":" the Payment Request."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For example, if the Point of Sale (POS) has a 90-second payment timeout then the Payment Request could be created with an 85-second timeout to prevent the payment terminal from expiring at the same time as the Payment Request is paid."}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"retry-unknown-errors"},"children":[{"type":"text","value":"Retry Unknown Errors"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When faced with an unknown error while checking the status of a Payment Request, POS integrations should retry at least once before voiding the transaction."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Retries should use the appropriate idempotency key where applicable."}]}]}]},{"type":"element","tag":"section","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"resolving-persistent-errors"},"children":[{"type":"text","value":"Resolving Persistent Errors"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For issues that cannot be resolved, please reach out to Centrapay Support at "},{"type":"element","tag":"a","props":{"href":"mailto:integrations@centrapay.com"},"children":[{"type":"text","value":"integrations@centrapay.com"}]},{"type":"text","value":"."}]}]}]},"_type":"markdown","_id":"content:guides:merchant-integration-error-handling.md","_source":"content","_file":"guides/merchant-integration-error-handling.md","_extension":"md"}]